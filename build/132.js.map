{"version":3,"sources":["../../src/addon/messageoutput/airnotifier/pages/devices/devices.module.ts","../../src/addon/messageoutput/airnotifier/pages/devices/devices.ts"],"names":[],"mappings":"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","file":"132.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { AddonMessageOutputAirnotifierDevicesPage } from './devices';\n\n@NgModule({\n    declarations: [\n        AddonMessageOutputAirnotifierDevicesPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        IonicPageModule.forChild(AddonMessageOutputAirnotifierDevicesPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonMessageOutputAirnotifierDevicesPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messageoutput/airnotifier/pages/devices/devices.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy } from '@angular/core';\nimport { IonicPage } from 'ionic-angular';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CorePushNotificationsProvider } from '@core/pushnotifications/providers/pushnotifications';\nimport { AddonMessageOutputAirnotifierProvider, AddonMessageOutputAirnotifierDevice } from '../../providers/airnotifier';\n\n/**\n * Page that displays the list of devices.\n */\n@IonicPage({ segment: 'addon-message-output-airnotifier-devices' })\n@Component({\n    selector: 'page-addon-message-output-airnotifier-devices',\n    templateUrl: 'devices.html',\n})\nexport class AddonMessageOutputAirnotifierDevicesPage implements OnDestroy {\n\n    devices: AddonMessageOutputAirnotifierDeviceFormatted[] = [];\n    devicesLoaded = false;\n\n    protected updateTimeout: any;\n\n    constructor(private domUtils: CoreDomUtilsProvider, private airnotifierProivder: AddonMessageOutputAirnotifierProvider,\n            private pushNotificationsProvider: CorePushNotificationsProvider ) {\n    }\n\n    /**\n     * View loaded.\n     */\n    ionViewDidLoad(): void {\n        this.fetchDevices();\n    }\n\n    /**\n     * Fetches the list of devices.\n     *\n     * @return Promise resolved when done.\n     */\n    protected fetchDevices(): Promise<any> {\n        return this.airnotifierProivder.getUserDevices().then((devices) => {\n            const pushId = this.pushNotificationsProvider.getPushId();\n\n            // Convert enabled to boolean and search current device.\n            devices.forEach((device: AddonMessageOutputAirnotifierDeviceFormatted) => {\n                device.enable = !!device.enable;\n                device.current = pushId && pushId == device.pushid;\n            });\n\n            this.devices = devices;\n        }).catch((message) => {\n            this.domUtils.showErrorModal(message);\n        }).finally(() => {\n            this.devicesLoaded = true;\n        });\n    }\n\n    /**\n     * Update list of devices after a certain time. The purpose is to store the updated data, it won't be reflected in the view.\n     */\n    protected updateDevicesAfterDelay(): void {\n        // Cancel pending updates.\n        if (this.updateTimeout) {\n            clearTimeout(this.updateTimeout);\n        }\n\n        this.updateTimeout = setTimeout(() => {\n            this.updateTimeout = null;\n            this.updateDevices();\n        }, 5000);\n    }\n\n    /**\n     * Fetch devices. The purpose is to store the updated data, it won't be reflected in the view.\n     */\n    protected updateDevices(): void {\n        this.airnotifierProivder.invalidateUserDevices().finally(() => {\n            this.airnotifierProivder.getUserDevices();\n        });\n    }\n\n    /**\n     * Refresh the list of devices.\n     *\n     * @param refresher Refresher.\n     */\n    refreshDevices(refresher: any): void {\n        this.airnotifierProivder.invalidateUserDevices().finally(() => {\n            this.fetchDevices().finally(() => {\n                refresher.complete();\n            });\n        });\n    }\n\n    /**\n     * Enable or disable a certain device.\n     *\n     * @param device The device object.\n     * @param enable True to enable the device, false to disable it.\n     */\n    enableDevice(device: AddonMessageOutputAirnotifierDeviceFormatted, enable: boolean): void {\n        device.updating = true;\n\n        this.airnotifierProivder.enableDevice(device.id, enable).then(() => {\n            // Update the list of devices since it was modified.\n            this.updateDevicesAfterDelay();\n        }).catch((message) => {\n            // Show error and revert change.\n            this.domUtils.showErrorModal(message);\n            device.enable = !device.enable;\n        }).finally(() => {\n            device.updating = false;\n        });\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        // If there is a pending action to update devices, execute it right now.\n        if (this.updateTimeout) {\n            clearTimeout(this.updateTimeout);\n            this.updateDevices();\n        }\n    }\n}\n\n/**\n * User device with some calculated data.\n */\ntype AddonMessageOutputAirnotifierDeviceFormatted = AddonMessageOutputAirnotifierDevice & {\n    current?: boolean; // Calculated in the app. Whether it's the current device.\n    updating?: boolean; // Calculated in the app. Whether the device enable is being updated right now.\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messageoutput/airnotifier/pages/devices/devices.ts"],"sourceRoot":""}