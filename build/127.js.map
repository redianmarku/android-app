{"version":3,"sources":["../../src/addon/mod/assign/pages/edit/edit.module.ts","../../src/addon/mod/assign/pages/edit/edit.ts"],"names":[],"mappings":"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","file":"127.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { AddonModAssignComponentsModule } from '../../components/components.module';\nimport { AddonModAssignEditPage } from './edit';\n\n@NgModule({\n    declarations: [\n        AddonModAssignEditPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        AddonModAssignComponentsModule,\n        IonicPageModule.forChild(AddonModAssignEditPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonModAssignEditPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/assign/pages/edit/edit.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreSyncProvider } from '@providers/sync';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreFileUploaderHelperProvider } from '@core/fileuploader/providers/helper';\nimport { AddonModAssignProvider, AddonModAssignAssign, AddonModAssignSubmission } from '../../providers/assign';\nimport { AddonModAssignOfflineProvider } from '../../providers/assign-offline';\nimport { AddonModAssignSyncProvider } from '../../providers/assign-sync';\nimport { AddonModAssignHelperProvider } from '../../providers/helper';\n\n/**\n * Page that allows adding or editing an assigment submission.\n */\n@IonicPage({ segment: 'addon-mod-assign-edit' })\n@Component({\n    selector: 'page-addon-mod-assign-edit',\n    templateUrl: 'edit.html',\n})\nexport class AddonModAssignEditPage implements OnInit, OnDestroy {\n\n    @ViewChild('editSubmissionForm') formElement: ElementRef;\n\n    title: string; // Title to display.\n    assign: AddonModAssignAssign; // Assignment.\n    courseId: number; // Course ID the assignment belongs to.\n    userSubmission: AddonModAssignSubmission; // The user submission.\n    allowOffline: boolean; // Whether offline is allowed.\n    submissionStatement: string; // The submission statement.\n    submissionStatementAccepted: boolean; // Whether submission statement is accepted.\n    loaded: boolean; // Whether data has been loaded.\n\n    protected moduleId: number; // Module ID the submission belongs to.\n    protected userId: number; // User doing the submission.\n    protected isBlind: boolean; // Whether blind is used.\n    protected editText: string; // \"Edit submission\" translated text.\n    protected saveOffline = false; // Whether to save data in offline.\n    protected hasOffline = false; // Whether the assignment has offline data.\n    protected isDestroyed = false; // Whether the component has been destroyed.\n    protected forceLeave = false; // To allow leaving the page without checking for changes.\n\n    constructor(navParams: NavParams, protected navCtrl: NavController, protected sitesProvider: CoreSitesProvider,\n            protected syncProvider: CoreSyncProvider, protected domUtils: CoreDomUtilsProvider,\n            protected translate: TranslateService, protected fileUploaderHelper: CoreFileUploaderHelperProvider,\n            protected eventsProvider: CoreEventsProvider, protected assignProvider: AddonModAssignProvider,\n            protected assignOfflineProvider: AddonModAssignOfflineProvider, protected assignHelper: AddonModAssignHelperProvider,\n            protected assignSyncProvider: AddonModAssignSyncProvider) {\n\n        this.moduleId = navParams.get('moduleId');\n        this.courseId = navParams.get('courseId');\n        this.userId = sitesProvider.getCurrentSiteUserId(); // Right now we can only edit current user's submissions.\n        this.isBlind = !!navParams.get('blindId');\n\n        this.editText = translate.instant('addon.mod_assign.editsubmission');\n        this.title = this.editText;\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.fetchAssignment().finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @return Resolved if we can leave it, rejected if not.\n     */\n    async ionViewCanLeave(): Promise<void> {\n        if (this.forceLeave) {\n            return;\n        }\n\n        // Check if data has changed.\n        const changed = await this.hasDataChanged();\n        if (changed) {\n            await this.domUtils.showConfirm(this.translate.instant('core.confirmcanceledit'));\n        }\n\n        // Nothing has changed or user confirmed to leave. Clear temporary data from plugins.\n        this.assignHelper.clearSubmissionPluginTmpData(this.assign, this.userSubmission, this.getInputData());\n\n        this.domUtils.triggerFormCancelledEvent(this.formElement, this.sitesProvider.getCurrentSiteId());\n    }\n\n    /**\n     * Fetch assignment data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected fetchAssignment(): Promise<any> {\n        const currentUserId = this.sitesProvider.getCurrentSiteUserId();\n\n        // Get assignment data.\n        return this.assignProvider.getAssignment(this.courseId, this.moduleId).then((assign) => {\n            this.assign = assign;\n            this.title = assign.name || this.title;\n\n            if (!this.isDestroyed) {\n                // Block the assignment.\n                this.syncProvider.blockOperation(AddonModAssignProvider.COMPONENT, assign.id);\n            }\n\n            // Wait for sync to be over (if any).\n            return this.assignSyncProvider.waitForSync(assign.id);\n        }).then(() => {\n\n            // Get submission status. Ignore cache to get the latest data.\n            return this.assignProvider.getSubmissionStatus(this.assign.id, this.userId, undefined, this.isBlind, false, true)\n                    .catch((err) => {\n                // Cannot connect. Get cached data.\n                return this.assignProvider.getSubmissionStatus(this.assign.id, this.userId, undefined, this.isBlind)\n                        .then((response) => {\n                    const userSubmission = this.assignProvider.getSubmissionObjectFromAttempt(this.assign, response.lastattempt);\n\n                    // Check if the user can edit it in offline.\n                    return this.assignHelper.canEditSubmissionOffline(this.assign, userSubmission).then((canEditOffline): any => {\n                        if (canEditOffline) {\n                            return response;\n                        }\n\n                        // Submission cannot be edited in offline, reject.\n                        this.allowOffline = false;\n\n                        return Promise.reject(err);\n                    });\n                });\n            }).then((response) => {\n                if (!response.lastattempt.canedit) {\n                    // Can't edit. Reject.\n                    return Promise.reject(this.translate.instant('core.nopermissions', {$a: this.editText}));\n                }\n\n                this.userSubmission = this.assignProvider.getSubmissionObjectFromAttempt(this.assign, response.lastattempt);\n                this.allowOffline = true; // If offline isn't allowed we shouldn't have reached this point.\n\n                // Only show submission statement if we are editing our own submission.\n                if (this.assign.requiresubmissionstatement && !this.assign.submissiondrafts && this.userId == currentUserId) {\n                    this.submissionStatement = this.assign.submissionstatement;\n                } else {\n                    this.submissionStatement = undefined;\n                }\n\n                // Check if there's any offline data for this submission.\n                return this.assignOfflineProvider.getSubmission(this.assign.id, this.userId).then((data) => {\n                    this.hasOffline = data && data.plugindata && Object.keys(data.plugindata).length > 0;\n                }).catch(() => {\n                    // No offline data found.\n                    this.hasOffline = false;\n                });\n            });\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error getting assigment data.');\n\n            // Leave the player.\n            this.leaveWithoutCheck();\n        });\n    }\n\n    /**\n     * Get the input data.\n     *\n     * @return Input data.\n     */\n    protected getInputData(): any {\n        return this.domUtils.getDataFromForm(document.forms['addon-mod_assign-edit-form']);\n    }\n\n    /**\n     * Check if data has changed.\n     *\n     * @return Promise resolved with boolean: whether data has changed.\n     */\n    protected hasDataChanged(): Promise<boolean> {\n        // Usually the hasSubmissionDataChanged call will be resolved inmediately, causing the modal to be shown just an instant.\n        // We'll wait a bit before showing it to prevent this \"blink\".\n        let modal,\n            showModal = true;\n\n        setTimeout(() => {\n            if (showModal) {\n                modal = this.domUtils.showModalLoading();\n            }\n        }, 100);\n\n        const data = this.getInputData();\n\n        return this.assignHelper.hasSubmissionDataChanged(this.assign, this.userSubmission, data).finally(() => {\n           if (modal) {\n                modal.dismiss();\n            } else {\n                showModal = false;\n            }\n        });\n    }\n\n    /**\n     * Leave the view without checking for changes.\n     */\n    protected leaveWithoutCheck(): void {\n        this.forceLeave = true;\n        this.navCtrl.pop();\n    }\n\n    /**\n     * Get data to submit based on the input data.\n     *\n     * @param inputData The input data.\n     * @return Promise resolved with the data to submit.\n     */\n    protected prepareSubmissionData(inputData: any): Promise<any> {\n        // If there's offline data, always save it in offline.\n        this.saveOffline = this.hasOffline;\n\n        return this.assignHelper.prepareSubmissionPluginData(this.assign, this.userSubmission, inputData, this.hasOffline)\n                .catch((error) => {\n\n            if (this.allowOffline && !this.saveOffline) {\n                // Cannot submit in online, prepare for offline usage.\n                this.saveOffline = true;\n\n                return this.assignHelper.prepareSubmissionPluginData(this.assign, this.userSubmission, inputData, true);\n            }\n\n            return Promise.reject(error);\n        });\n    }\n\n    /**\n     * Save the submission.\n     */\n    save(): void {\n        // Check if data has changed.\n        this.hasDataChanged().then((changed) => {\n            if (changed) {\n                this.saveSubmission().then(() => {\n                    this.leaveWithoutCheck();\n                }).catch((error) => {\n                    this.domUtils.showErrorModalDefault(error, 'Error saving submission.');\n                });\n            } else {\n                // Nothing to save, just go back.\n                this.leaveWithoutCheck();\n            }\n        });\n    }\n\n    /**\n     * Save the submission.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async saveSubmission(): Promise<void> {\n        const inputData = this.getInputData();\n\n        if (this.submissionStatement && (!inputData.submissionstatement || inputData.submissionstatement === 'false')) {\n            throw this.translate.instant('addon.mod_assign.acceptsubmissionstatement');\n        }\n\n        let modal = this.domUtils.showModalLoading();\n        let size;\n\n        // Get size to ask for confirmation.\n        try {\n            size = await this.assignHelper.getSubmissionSizeForEdit(this.assign, this.userSubmission, inputData);\n        } catch (error) {\n            // Error calculating size, return -1.\n            size = -1;\n        }\n\n        modal.dismiss();\n\n        try {\n            // Confirm action.\n            await this.fileUploaderHelper.confirmUploadFile(size, true, this.allowOffline);\n\n            modal = this.domUtils.showModalLoading('core.sending', true);\n\n            const pluginData = await this.prepareSubmissionData(inputData);\n            if (!Object.keys(pluginData).length) {\n                // Nothing to save.\n                return;\n            }\n\n            let sent: boolean;\n\n            if (this.saveOffline) {\n                // Save submission in offline.\n                sent = false;\n                await this.assignOfflineProvider.saveSubmission(this.assign.id, this.courseId, pluginData,\n                        this.userSubmission.timemodified, !this.assign.submissiondrafts, this.userId);\n            } else {\n                // Try to send it to server.\n                sent = await this.assignProvider.saveSubmission(this.assign.id, this.courseId, pluginData, this.allowOffline,\n                        this.userSubmission.timemodified, !!this.assign.submissiondrafts, this.userId);\n            }\n\n            // Clear temporary data from plugins.\n            await this.assignHelper.clearSubmissionPluginTmpData(this.assign, this.userSubmission, inputData);\n\n            if (sent) {\n                this.eventsProvider.trigger(CoreEventsProvider.ACTIVITY_DATA_SENT, { module: 'assign' });\n            }\n\n            // Submission saved, trigger events.\n            this.domUtils.triggerFormSubmittedEvent(this.formElement, sent, this.sitesProvider.getCurrentSiteId());\n\n            const params = {\n                assignmentId: this.assign.id,\n                submissionId: this.userSubmission.id,\n                userId: this.userId,\n            };\n\n            this.eventsProvider.trigger(AddonModAssignProvider.SUBMISSION_SAVED_EVENT, params,\n                    this.sitesProvider.getCurrentSiteId());\n\n            if (!this.assign.submissiondrafts) {\n                // No drafts allowed, so it was submitted. Trigger event.\n                this.eventsProvider.trigger(AddonModAssignProvider.SUBMITTED_FOR_GRADING_EVENT, params,\n                        this.sitesProvider.getCurrentSiteId());\n            }\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Component being destroyed.\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n\n        // Unblock the assignment.\n        if (this.assign) {\n            this.syncProvider.unblockOperation(AddonModAssignProvider.COMPONENT, this.assign.id);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/assign/pages/edit/edit.ts"],"sourceRoot":""}