{"version":3,"sources":["../../src/addon/mod/quiz/pages/attempt/attempt.module.ts","../../src/addon/mod/quiz/pages/attempt/attempt.ts"],"names":[],"mappings":"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","file":"85.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { AddonModQuizAttemptPage } from './attempt';\n\n@NgModule({\n    declarations: [\n        AddonModQuizAttemptPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        IonicPageModule.forChild(AddonModQuizAttemptPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonModQuizAttemptPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/quiz/pages/attempt/attempt.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { IonicPage, NavParams } from 'ionic-angular';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { AddonModQuizProvider } from '../../providers/quiz';\nimport { AddonModQuizHelperProvider } from '../../providers/helper';\n\n/**\n * Page that displays some summary data about an attempt.\n */\n@IonicPage({ segment: 'addon-mod-quiz-attempt' })\n@Component({\n    selector: 'page-addon-mod-quiz-attempt',\n    templateUrl: 'attempt.html',\n})\nexport class AddonModQuizAttemptPage implements OnInit {\n    courseId: number; // The course ID the quiz belongs to.\n    quiz: any; // The quiz the attempt belongs to.\n    attempt: any; // The attempt to view.\n    component = AddonModQuizProvider.COMPONENT; // Component to link the files to.\n    componentId: number; // Component ID to use in conjunction with the component.\n    loaded: boolean; // Whether data has been loaded.\n\n    protected attemptId: number; // Attempt to view.\n    protected quizId: number; // ID of the quiz the attempt belongs to.\n\n    constructor(navParams: NavParams, protected domUtils: CoreDomUtilsProvider, protected quizProvider: AddonModQuizProvider,\n            protected quizHelper: AddonModQuizHelperProvider) {\n\n        this.attemptId = navParams.get('attemptId');\n        this.quizId = navParams.get('quizId');\n        this.courseId = navParams.get('courseId');\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.fetchQuizData().finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     */\n    doRefresh(refresher: any): void {\n        this.refreshData().finally(() => {\n            refresher.complete();\n        });\n    }\n\n    /**\n     * Get quiz data and attempt data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected fetchQuizData(): Promise<void> {\n        return this.quizProvider.getQuizById(this.courseId, this.quizId).then((quizData) => {\n            this.quiz = quizData;\n            this.componentId = this.quiz.coursemodule;\n\n            return this.fetchAttempt();\n        }).catch((message) => {\n            this.domUtils.showErrorModalDefault(message, 'addon.mod_quiz.errorgetattempt', true);\n        });\n    }\n\n    /**\n     * Get the attempt data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected fetchAttempt(): Promise<void> {\n        const promises = [];\n        let options,\n            accessInfo;\n\n        // Get all the attempts and search the one we want.\n        promises.push(this.quizProvider.getUserAttempts(this.quizId).then((attempts) => {\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                if (attempt.id == this.attemptId) {\n                    this.attempt = attempt;\n                    break;\n                }\n            }\n\n            if (!this.attempt) {\n                // Attempt not found, error.\n                return Promise.reject(null);\n            }\n\n            // Load flag to show if attempt is finished but not synced.\n            return this.quizProvider.loadFinishedOfflineData([this.attempt]);\n        }));\n\n        promises.push(this.quizProvider.getCombinedReviewOptions(this.quiz.id).then((opts) => {\n            options = opts;\n        }));\n\n        // Check if the user can review the attempt.\n        promises.push(this.quizProvider.getQuizAccessInformation(this.quiz.id).then((quizAccessInfo) => {\n            accessInfo = quizAccessInfo;\n\n            if (accessInfo.canreviewmyattempts) {\n                // Check if the user can review the attempt.\n                return this.quizProvider.invalidateAttemptReviewForPage(this.attemptId, -1).catch(() => {\n                    // Ignore errors.\n                }).then(() => {\n                    return this.quizProvider.getAttemptReview(this.attemptId, -1);\n                }).catch(() => {\n                    // Error getting the review, assume the user cannot review the attempt.\n                    accessInfo.canreviewmyattempts = false;\n                });\n            }\n        }));\n\n        return Promise.all(promises).then(() => {\n\n            // Determine fields to show.\n            this.quizHelper.setQuizCalculatedData(this.quiz, options);\n            this.quiz.showReviewColumn = accessInfo.canreviewmyattempts;\n\n            // Get readable data for the attempt.\n            this.quizHelper.setAttemptCalculatedData(this.quiz, this.attempt, false);\n\n            // Check if the feedback should be displayed.\n            const grade = Number(this.attempt.rescaledGrade);\n            if (this.quiz.showFeedbackColumn && this.quizProvider.isAttemptFinished(this.attempt.state) &&\n                        options.someoptions.overallfeedback && !isNaN(grade)) {\n\n                // Feedback should be displayed, get the feedback for the grade.\n                return this.quizProvider.getFeedbackForGrade(this.quiz.id, grade).then((response) => {\n                    this.attempt.feedback = response.feedbacktext;\n                });\n            } else {\n                delete this.attempt.feedback;\n            }\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected refreshData(): Promise<void> {\n        const promises = [];\n\n        promises.push(this.quizProvider.invalidateQuizData(this.courseId));\n        promises.push(this.quizProvider.invalidateUserAttemptsForUser(this.quizId));\n        promises.push(this.quizProvider.invalidateQuizAccessInformation(this.quizId));\n        promises.push(this.quizProvider.invalidateCombinedReviewOptionsForUser(this.quizId));\n        promises.push(this.quizProvider.invalidateAttemptReview(this.attemptId));\n\n        if (this.attempt && typeof this.attempt.feedback != 'undefined') {\n            promises.push(this.quizProvider.invalidateFeedback(this.quizId));\n        }\n\n        return Promise.all(promises).catch(() => {\n            // Ignore errors.\n        }).then(() => {\n            return this.fetchQuizData();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/quiz/pages/attempt/attempt.ts"],"sourceRoot":""}