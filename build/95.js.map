{"version":3,"sources":["../../src/addon/mod/h5pactivity/pages/user-attempts/user-attempts.module.ts","../../src/addon/mod/h5pactivity/pages/user-attempts/user-attempts.ts"],"names":[],"mappings":"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","file":"95.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { AddonModH5PActivityUserAttemptsPage } from './user-attempts';\n\n@NgModule({\n    declarations: [\n        AddonModH5PActivityUserAttemptsPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule,\n        IonicPageModule.forChild(AddonModH5PActivityUserAttemptsPage),\n        TranslateModule.forChild(),\n    ],\n})\nexport class AddonModH5PActivityUserAttemptsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/h5pactivity/pages/user-attempts/user-attempts.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { IonicPage, NavParams } from 'ionic-angular';\nimport { CoreSites } from '@providers/sites';\nimport { CoreDomUtils } from '@providers/utils/dom';\nimport { CoreUser } from '@core/user/providers/user';\nimport {\n    AddonModH5PActivity, AddonModH5PActivityData, AddonModH5PActivityUserAttempts\n} from '../../providers/h5pactivity';\n\n/**\n * Page that displays user attempts of a certain user.\n */\n@IonicPage({ segment: 'addon-mod-h5pactivity-user-attempts' })\n@Component({\n    selector: 'page-addon-mod-h5pactivity-user-attempts',\n    templateUrl: 'user-attempts.html',\n})\nexport class AddonModH5PActivityUserAttemptsPage implements OnInit {\n    loaded: boolean;\n    courseId: number;\n    h5pActivityId: number;\n    h5pActivity: AddonModH5PActivityData;\n    attemptsData: AddonModH5PActivityUserAttempts;\n    user: any;\n    isCurrentUser: boolean;\n\n    protected userId: number;\n\n    constructor(navParams: NavParams) {\n        this.courseId = navParams.get('courseId');\n        this.h5pActivityId = navParams.get('h5pActivityId');\n        this.userId = navParams.get('userId') || CoreSites.instance.getCurrentSiteUserId();\n        this.isCurrentUser = this.userId == CoreSites.instance.getCurrentSiteUserId();\n    }\n\n    /**\n     * Component being initialized.\n     *\n     * @return Promise resolved when done.\n     */\n    async ngOnInit(): Promise<void> {\n        try {\n            await this.fetchData();\n        } catch (error) {\n            CoreDomUtils.instance.showErrorModalDefault(error, 'Error loading attempts.');\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     */\n    doRefresh(refresher: any): void {\n        this.refreshData().finally(() => {\n            refresher.complete();\n        });\n    }\n\n    /**\n     * Get quiz data and attempt data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchData(): Promise<void> {\n        await Promise.all([\n            this.fetchActivity(),\n            this.fetchAttempts(),\n            this.fetchUserProfile(),\n        ]);\n    }\n\n    /**\n     * Get activity data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchActivity(): Promise<void> {\n        this.h5pActivity = await AddonModH5PActivity.instance.getH5PActivityById(this.courseId, this.h5pActivityId);\n    }\n\n    /**\n     * Get attempts.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchAttempts(): Promise<void> {\n        this.attemptsData = await AddonModH5PActivity.instance.getUserAttempts(this.h5pActivityId, { userId: this.userId });\n    }\n\n    /**\n     * Get user profile.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchUserProfile(): Promise<void> {\n        try {\n            this.user = await CoreUser.instance.getProfile(this.userId, this.courseId, true);\n        } catch (error) {\n            // Ignore errors.\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async refreshData(): Promise<void> {\n\n        try {\n            await Promise.all([\n                AddonModH5PActivity.instance.invalidateActivityData(this.courseId),\n                AddonModH5PActivity.instance.invalidateUserAttempts(this.h5pActivityId, this.userId),\n            ]);\n        } catch (error) {\n            // Ignore errors.\n        }\n\n        await this.fetchData();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/h5pactivity/pages/user-attempts/user-attempts.ts"],"sourceRoot":""}