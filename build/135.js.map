{"version":3,"sources":["../../src/addon/competency/pages/planlist/planlist.module.ts","../../src/addon/competency/pages/planlist/planlist.ts"],"names":[],"mappings":"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","file":"135.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { AddonCompetencyPlanListPage } from './planlist';\n\n@NgModule({\n    declarations: [\n        AddonCompetencyPlanListPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule,\n        IonicPageModule.forChild(AddonCompetencyPlanListPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonCompetencyPlanListPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/competency/pages/planlist/planlist.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild } from '@angular/core';\nimport { IonicPage, NavParams } from 'ionic-angular';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { AddonCompetencyProvider, AddonCompetencyPlan } from '../../providers/competency';\nimport { AddonCompetencyHelperProvider } from '../../providers/helper';\n\n/**\n * Page that displays the list of learning plans.\n */\n@IonicPage({ segment: 'addon-competency-planlist' })\n@Component({\n    selector: 'page-addon-competency-planlist',\n    templateUrl: 'planlist.html',\n})\nexport class AddonCompetencyPlanListPage {\n    @ViewChild(CoreSplitViewComponent) splitviewCtrl: CoreSplitViewComponent;\n\n    protected userId: number;\n    protected planId: number;\n    plansLoaded = false;\n    plans: AddonCompetencyPlan[] = [];\n\n    constructor(navParams: NavParams, private domUtils: CoreDomUtilsProvider, private competencyProvider: AddonCompetencyProvider,\n            private competencyHelperProvider: AddonCompetencyHelperProvider) {\n        this.userId = navParams.get('userId');\n    }\n\n    /**\n     * View loaded.\n     */\n    ionViewDidLoad(): void {\n        if (this.planId) {\n            // There is a learning plan to load.\n            this.openPlan(this.planId);\n        }\n\n        this.fetchLearningPlans().then(() => {\n            if (!this.planId && this.splitviewCtrl.isOn() && this.plans.length > 0) {\n                // Take first and load it.\n                this.openPlan(this.plans[0].id);\n            }\n        }).finally(() => {\n            this.plansLoaded = true;\n        });\n    }\n\n    /**\n     * Fetches the learning plans and updates the view.\n     *\n     * @return Promise resolved when done.\n     */\n    protected fetchLearningPlans(): Promise<void> {\n        return this.competencyProvider.getLearningPlans(this.userId).then((plans) => {\n            plans.forEach((plan: AddonCompetencyPlanFormatted) => {\n                plan.statusname = this.competencyHelperProvider.getPlanStatusName(plan.status);\n                switch (plan.status) {\n                    case AddonCompetencyProvider.STATUS_ACTIVE:\n                        plan.statuscolor = 'success';\n                        break;\n                    case AddonCompetencyProvider.STATUS_COMPLETE:\n                        plan.statuscolor = 'danger';\n                        break;\n                    default:\n                        plan.statuscolor = 'warning';\n                        break;\n                }\n            });\n            this.plans = plans;\n        }).catch((message) => {\n            this.domUtils.showErrorModalDefault(message, 'Error getting learning plans data.');\n        });\n    }\n\n    /**\n     * Refreshes the learning plans.\n     *\n     * @param refresher Refresher.\n     */\n    refreshLearningPlans(refresher: any): void {\n        this.competencyProvider.invalidateLearningPlans(this.userId).finally(() => {\n            this.fetchLearningPlans().finally(() => {\n                refresher.complete();\n            });\n        });\n    }\n\n    /**\n     * Opens a learning plan.\n     *\n     * @param planId Learning plan to load.\n     */\n    openPlan(planId: number): void {\n        this.planId = planId;\n        this.splitviewCtrl.push('AddonCompetencyPlanPage', { planId });\n    }\n}\n\n/**\n * Competency plan with some calculated data.\n */\ntype AddonCompetencyPlanFormatted = AddonCompetencyPlan & {\n    statuscolor?: string; // Calculated in the app. Color of the plan's status.\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/competency/pages/planlist/planlist.ts"],"sourceRoot":""}