{"version":3,"sources":["../../src/addon/mod/lesson/pages/user-retake/user-retake.module.ts","../../src/addon/mod/lesson/pages/user-retake/user-retake.ts"],"names":[],"mappings":"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","file":"88.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { AddonModLessonUserRetakePage } from './user-retake';\n\n@NgModule({\n    declarations: [\n        AddonModLessonUserRetakePage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule,\n        IonicPageModule.forChild(AddonModLessonUserRetakePage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonModLessonUserRetakePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/lesson/pages/user-retake/user-retake.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { IonicPage, NavParams } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreUserProvider } from '@core/user/providers/user';\nimport { AddonModLessonProvider } from '../../providers/lesson';\nimport { AddonModLessonHelperProvider } from '../../providers/helper';\n\n/**\n * Page that displays a retake made by a certain user.\n */\n@IonicPage({ segment: 'addon-mod-lesson-user-retake' })\n@Component({\n    selector: 'page-addon-mod-lesson-user-retake',\n    templateUrl: 'user-retake.html',\n})\nexport class AddonModLessonUserRetakePage implements OnInit {\n\n    component = AddonModLessonProvider.COMPONENT;\n    lesson: any; // The lesson the retake belongs to.\n    courseId: number; // Course ID the lesson belongs to.\n    selectedRetake: number; // The retake to see.\n    student: any; // Data about the student and his retakes.\n    retake: any; // Data about the retake.\n    loaded: boolean; // Whether the data has been loaded.\n\n    protected lessonId: number; // The lesson ID the retake belongs to.\n    protected userId: number; // User ID to see the retakes.\n    protected retakeNumber: number; // Number of the initial retake to see.\n    protected previousSelectedRetake: number; // To be able to detect the previous selected retake when it has changed.\n\n    constructor(navParams: NavParams, sitesProvider: CoreSitesProvider, protected textUtils: CoreTextUtilsProvider,\n            protected translate: TranslateService, protected domUtils: CoreDomUtilsProvider,\n            protected userProvider: CoreUserProvider, protected timeUtils: CoreTimeUtilsProvider,\n            protected lessonProvider: AddonModLessonProvider, protected lessonHelper: AddonModLessonHelperProvider,\n            protected utils: CoreUtilsProvider) {\n\n        this.lessonId = navParams.get('lessonId');\n        this.courseId = navParams.get('courseId');\n        this.userId = navParams.get('userId') || sitesProvider.getCurrentSiteUserId();\n        this.retakeNumber = navParams.get('retake');\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        // Fetch the data.\n        this.fetchData().finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Change the retake displayed.\n     *\n     * @param retakeNumber The new retake number.\n     */\n    changeRetake(retakeNumber: number): void {\n        this.loaded = false;\n\n        this.setRetake(retakeNumber).catch((error) => {\n            this.selectedRetake = this.previousSelectedRetake;\n            this.domUtils.showErrorModal(this.utils.addDataNotDownloadedError(error, 'Error getting attempt.'));\n        }).finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Pull to refresh.\n     *\n     * @param refresher Refresher.\n     */\n    doRefresh(refresher: any): void {\n        this.refreshData().finally(() => {\n            refresher.complete();\n        });\n    }\n\n    /**\n     * Get lesson and retake data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected fetchData(): Promise<any> {\n        return this.lessonProvider.getLessonById(this.courseId, this.lessonId).then((lessonData) => {\n            this.lesson = lessonData;\n\n            // Get the retakes overview for all participants.\n            return this.lessonProvider.getRetakesOverview(this.lesson.id);\n        }).then((data) => {\n            // Search the student.\n            let student;\n\n            if (data && data.students) {\n                for (let i = 0; i < data.students.length; i++) {\n                    if (data.students[i].id == this.userId) {\n                        student = data.students[i];\n                        break;\n                    }\n                }\n            }\n\n            if (!student) {\n                // Student not found.\n                return Promise.reject(this.translate.instant('addon.mod_lesson.cannotfinduser'));\n            }\n\n            if (!student.attempts || !student.attempts.length) {\n                // No retakes.\n                return Promise.reject(this.translate.instant('addon.mod_lesson.cannotfindattempt'));\n            }\n\n            student.bestgrade = this.textUtils.roundToDecimals(student.bestgrade, 2);\n            student.attempts.forEach((retake) => {\n                if (!this.selectedRetake && this.retakeNumber == retake.try) {\n                    // The retake specified as parameter exists. Use it.\n                    this.selectedRetake = this.retakeNumber;\n                }\n\n                retake.label = this.lessonHelper.getRetakeLabel(retake);\n            });\n\n            if (!this.selectedRetake) {\n                // Retake number not specified or not valid, use the last retake.\n                this.selectedRetake = student.attempts[student.attempts.length - 1].try;\n            }\n\n            // Get the profile image of the user.\n           return this.userProvider.getProfile(student.id, this.courseId, true).then((user) => {\n                student.profileimageurl = user.profileimageurl;\n\n                return student;\n            }).catch(() => {\n                // Error getting profile, resolve promise without adding any extra data.\n                return student;\n            });\n        }).then((student) => {\n            this.student = student;\n\n            return this.setRetake(this.selectedRetake);\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error getting data.', true);\n        });\n    }\n\n    /**\n     * Refreshes data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected refreshData(): Promise<any> {\n        const promises = [];\n\n        promises.push(this.lessonProvider.invalidateLessonData(this.courseId));\n        if (this.lesson) {\n            promises.push(this.lessonProvider.invalidateRetakesOverview(this.lesson.id));\n            promises.push(this.lessonProvider.invalidateUserRetakesForUser(this.lesson.id, this.userId));\n        }\n\n        return Promise.all(promises).catch(() => {\n            // Ignore errors.\n        }).then(() => {\n            return this.fetchData();\n        });\n    }\n\n    /**\n     * Set the retake to view and load its data.\n     *\n     * @param retakeNumber Retake number to set.\n     * @return Promise resolved when done.\n     */\n    protected setRetake(retakeNumber: number): Promise<any> {\n        this.selectedRetake = retakeNumber;\n\n        return this.lessonProvider.getUserRetake(this.lessonId, retakeNumber, this.userId).then((data) => {\n\n            if (data && data.completed != -1) {\n                // Completed.\n                data.userstats.grade = this.textUtils.roundToDecimals(data.userstats.grade, 2);\n                data.userstats.timetakenReadable = this.timeUtils.formatTime(data.userstats.timetotake);\n            }\n\n            if (data && data.answerpages) {\n                // Format pages data.\n                data.answerpages.forEach((page) => {\n                    if (this.lessonProvider.answerPageIsContent(page)) {\n                        page.isContent = true;\n\n                        if (page.answerdata && page.answerdata.answers) {\n                            page.answerdata.answers.forEach((answer) => {\n                                // Content pages only have 1 valid field in the answer array.\n                                answer[0] = this.lessonHelper.getContentPageAnswerDataFromHtml(answer[0]);\n                            });\n                        }\n                    } else if (this.lessonProvider.answerPageIsQuestion(page)) {\n                        page.isQuestion = true;\n\n                        if (page.answerdata && page.answerdata.answers) {\n                            page.answerdata.answers.forEach((answer) => {\n                                // Only the first field of the answer array requires to be parsed.\n                                answer[0] = this.lessonHelper.getQuestionPageAnswerDataFromHtml(answer[0]);\n                            });\n                        }\n                    }\n                });\n            }\n\n            this.retake = data;\n            this.previousSelectedRetake = this.selectedRetake;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/lesson/pages/user-retake/user-retake.ts"],"sourceRoot":""}