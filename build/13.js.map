{"version":3,"sources":["../../src/core/user/pages/profile/profile.module.ts","../../src/core/user/pages/profile/profile.ts"],"names":[],"mappings":"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","file":"13.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreUserProfilePage } from './profile';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CoreComponentsModule } from '@components/components.module';\n\n@NgModule({\n    declarations: [\n        CoreUserProfilePage,\n    ],\n    imports: [\n        CoreDirectivesModule,\n        CoreComponentsModule,\n        IonicPageModule.forChild(CoreUserProfilePage),\n        TranslateModule.forChild()\n    ],\n})\nexport class CoreUserProfilePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/user/pages/profile/profile.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Optional } from '@angular/core';\nimport { IonicPage, NavParams, NavController } from 'ionic-angular';\nimport { CoreUserProvider } from '../../providers/user';\nimport { CoreUserHelperProvider } from '../../providers/helper';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreMimetypeUtilsProvider } from '@providers/utils/mimetype';\nimport { CoreFileUploaderHelperProvider } from '@core/fileuploader/providers/helper';\nimport { CoreUserDelegate, CoreUserProfileHandlerData } from '../../providers/user-delegate';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\n\n/**\n * Page that displays an user profile page.\n */\n@IonicPage({ segment: 'core-user-profile' })\n@Component({\n    selector: 'page-core-user-profile',\n    templateUrl: 'profile.html',\n})\nexport class CoreUserProfilePage {\n    protected courseId: number;\n    protected userId: number;\n    protected site;\n    protected obsProfileRefreshed: any;\n    protected subscription;\n\n    userLoaded = false;\n    isLoadingHandlers = false;\n    user: any;\n    title: string;\n    isDeleted = false;\n    isEnrolled = true;\n    canChangeProfilePicture = false;\n    actionHandlers: CoreUserProfileHandlerData[] = [];\n    newPageHandlers: CoreUserProfileHandlerData[] = [];\n    communicationHandlers: CoreUserProfileHandlerData[] = [];\n\n    constructor(navParams: NavParams, private userProvider: CoreUserProvider, private userHelper: CoreUserHelperProvider,\n            private domUtils: CoreDomUtilsProvider, private translate: TranslateService, private eventsProvider: CoreEventsProvider,\n            private coursesProvider: CoreCoursesProvider, private sitesProvider: CoreSitesProvider,\n            private mimetypeUtils: CoreMimetypeUtilsProvider, private fileUploaderHelper: CoreFileUploaderHelperProvider,\n            private userDelegate: CoreUserDelegate, private navCtrl: NavController,\n            @Optional() private svComponent: CoreSplitViewComponent) {\n        this.userId = navParams.get('userId');\n        this.courseId = navParams.get('courseId');\n\n        this.site = this.sitesProvider.getCurrentSite();\n\n        // Allow to change the profile image only in the app profile page.\n        this.canChangeProfilePicture =\n            (!this.courseId || this.courseId == this.site.getSiteHomeId()) &&\n            this.userId == this.site.getUserId() &&\n            this.site.canUploadFiles() &&\n            this.site.wsAvailable('core_user_update_picture') &&\n            !this.userProvider.isUpdatePictureDisabledInSite(this.site);\n\n        this.obsProfileRefreshed = eventsProvider.on(CoreUserProvider.PROFILE_REFRESHED, (data) => {\n            if (this.user && typeof data.user != 'undefined') {\n                this.user.email = data.user.email;\n                this.user.address = this.userHelper.formatAddress('', data.user.city, data.user.country);\n            }\n        }, sitesProvider.getCurrentSiteId());\n    }\n\n    /**\n     * View loaded.\n     */\n    ionViewDidLoad(): void {\n        this.fetchUser().then(() => {\n            return this.userProvider.logView(this.userId, this.courseId, this.user.fullname).catch((error) => {\n                this.isDeleted = error.errorcode === 'userdeleted';\n                this.isEnrolled = error.errorcode !== 'notenrolledprofile';\n            });\n        }).finally(() => {\n            this.userLoaded = true;\n        });\n    }\n\n    /**\n     * Fetches the user and updates the view.\n     */\n    fetchUser(): Promise<any> {\n        return this.userProvider.getProfile(this.userId, this.courseId).then((user) => {\n\n            user.address = this.userHelper.formatAddress('', user.city, user.country);\n            user.roles = this.userHelper.formatRoleList(user.roles);\n\n            this.user = user;\n            this.title = user.fullname;\n\n            // If there's already a subscription, unsubscribe because we'll get a new one.\n            this.subscription && this.subscription.unsubscribe();\n\n            this.subscription = this.userDelegate.getProfileHandlersFor(user, this.courseId).subscribe((handlers) => {\n                this.actionHandlers = [];\n                this.newPageHandlers = [];\n                this.communicationHandlers = [];\n                handlers.forEach((handler) => {\n                    switch (handler.type) {\n                        case CoreUserDelegate.TYPE_COMMUNICATION:\n                            this.communicationHandlers.push(handler.data);\n                            break;\n                        case CoreUserDelegate.TYPE_ACTION:\n                            this.actionHandlers.push(handler.data);\n                            break;\n                        case CoreUserDelegate.TYPE_NEW_PAGE:\n                        default:\n                            this.newPageHandlers.push(handler.data);\n                            break;\n                    }\n                });\n\n                this.isLoadingHandlers = !this.userDelegate.areHandlersLoaded(user.id);\n            });\n\n            if (this.userId == this.site.getUserId() && user.profileimageurl != this.site.getInfo().userpictureurl) {\n                // The current user image received is different than the one stored in site info. Assume the image was updated.\n                // Update the site info to get the right avatar in there.\n                return this.sitesProvider.updateSiteInfo(this.site.getId()).then(() => {\n                    if (user.profileimageurl != this.site.getInfo().userpictureurl) {\n                        // The image is still different, this means that the good one is the one in site info.\n                        return this.refreshUser();\n                    } else {\n                        // Now they're the same, send event to use the right avatar in the rest of the app.\n                        this.eventsProvider.trigger(CoreUserProvider.PROFILE_PICTURE_UPDATED, {\n                            userId: this.userId,\n                            picture: user.profileimageurl\n                        }, this.site.getId());\n                    }\n                }, () => {\n                    // Cannot update site info. Assume the profile image is the right one.\n                    this.eventsProvider.trigger(CoreUserProvider.PROFILE_PICTURE_UPDATED, {\n                        userId: this.userId,\n                        picture: user.profileimageurl\n                    }, this.site.getId());\n                });\n            }\n\n        }).catch((error) => {\n            // Error is null for deleted users, do not show the modal.\n            if (error) {\n                this.domUtils.showErrorModal(error);\n            }\n        });\n    }\n\n    /**\n     * Opens dialog to change profile picture.\n     */\n    changeProfilePicture(): Promise<any> {\n        const maxSize = -1,\n            title = this.translate.instant('core.user.newpicture'),\n            mimetypes = this.mimetypeUtils.getGroupMimeInfo('image', 'mimetypes');\n\n        return this.fileUploaderHelper.selectAndUploadFile(maxSize, title, mimetypes).then((result) => {\n            const modal = this.domUtils.showModalLoading('core.sending', true);\n\n            return this.userProvider.changeProfilePicture(result.itemid, this.userId).then((profileImageURL) => {\n                this.eventsProvider.trigger(CoreUserProvider.PROFILE_PICTURE_UPDATED, {\n                    userId: this.userId,\n                    picture: profileImageURL\n                }, this.site.getId());\n                this.sitesProvider.updateSiteInfo(this.site.getId());\n                this.refreshUser();\n            }).finally(() => {\n                modal.dismiss();\n            });\n        }).catch((message) => {\n            if (message) {\n                this.domUtils.showErrorModal(message);\n            }\n        });\n    }\n\n    /**\n     * Refresh the user.\n     *\n     * @param refresher Refresher.\n     */\n    refreshUser(refresher?: any): void {\n        const promises = [];\n\n        promises.push(this.userProvider.invalidateUserCache(this.userId));\n        promises.push(this.coursesProvider.invalidateUserNavigationOptions());\n        promises.push(this.coursesProvider.invalidateUserAdministrationOptions());\n\n        Promise.all(promises).finally(() => {\n            this.fetchUser().finally(() => {\n                this.eventsProvider.trigger(CoreUserProvider.PROFILE_REFRESHED, {\n                    courseId: this.courseId,\n                    userId: this.userId,\n                    user: this.user\n                }, this.site.getId());\n                refresher && refresher.complete();\n            });\n        });\n    }\n\n    /**\n     * Open the page with the user details.\n     */\n    openUserDetails(): void {\n        // Decide which navCtrl to use. If this page is inside a split view, use the split view's master nav.\n        const navCtrl = this.svComponent ? this.svComponent.getMasterNav() : this.navCtrl;\n        navCtrl.push('CoreUserAboutPage', {courseId: this.courseId, userId: this.userId});\n    }\n\n    /**\n     * A handler was clicked.\n     *\n     * @param event Click event.\n     * @param handler Handler that was clicked.\n     */\n    handlerClicked(event: Event, handler: CoreUserProfileHandlerData): void {\n        // Decide which navCtrl to use. If this page is inside a split view, use the split view's master nav.\n        const navCtrl = this.svComponent ? this.svComponent.getMasterNav() : this.navCtrl;\n        handler.action(event, navCtrl, this.user, this.courseId);\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.subscription && this.subscription.unsubscribe();\n        this.obsProfileRefreshed && this.obsProfileRefreshed.off();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/user/pages/profile/profile.ts"],"sourceRoot":""}