{"version":3,"sources":["../../src/addon/mod/forum/pages/discussion/discussion.module.ts","../../src/addon/mod/forum/pages/discussion/discussion.ts"],"names":[],"mappings":"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","file":"105.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { AddonModForumComponentsModule } from '../../components/components.module';\nimport { AddonModForumDiscussionPage } from './discussion';\n\n@NgModule({\n    declarations: [\n        AddonModForumDiscussionPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        AddonModForumComponentsModule,\n        IonicPageModule.forChild(AddonModForumDiscussionPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonModForumDiscussionPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/forum/pages/discussion/discussion.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Optional, OnDestroy, ViewChild, NgZone } from '@angular/core';\nimport { IonicPage, NavParams, Content, NavController } from 'ionic-angular';\nimport { Network } from '@ionic-native/network';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreFileUploaderProvider } from '@core/fileuploader/providers/fileuploader';\nimport { CoreUserProvider } from '@core/user/providers/user';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreRatingProvider, CoreRatingInfo } from '@core/rating/providers/rating';\nimport { CoreRatingOfflineProvider } from '@core/rating/providers/offline';\nimport { CoreRatingSyncProvider } from '@core/rating/providers/sync';\nimport { AddonModForumProvider } from '../../providers/forum';\nimport { AddonModForumOfflineProvider } from '../../providers/offline';\nimport { AddonModForumHelperProvider } from '../../providers/helper';\nimport { AddonModForumSyncProvider } from '../../providers/sync';\n\ntype SortType = 'flat-newest' | 'flat-oldest' | 'nested';\n\ntype Post = any & { children?: Post[]; };\n\n/**\n * Page that displays a forum discussion.\n */\n@IonicPage({ segment: 'addon-mod-forum-discussion' })\n@Component({\n    selector: 'page-addon-mod-forum-discussion',\n    templateUrl: 'discussion.html',\n})\nexport class AddonModForumDiscussionPage implements OnDestroy {\n    @ViewChild(Content) content: Content;\n\n    courseId: number;\n    discussionId: number;\n    forum: any = {};\n    accessInfo: any = {};\n    discussion: any;\n    posts: any[];\n    discussionLoaded = false;\n    postSubjects: { [id: string]: string };\n    isOnline: boolean;\n    isSplitViewOn: boolean;\n    postHasOffline: boolean;\n    sort: SortType = 'nested';\n    trackPosts: boolean;\n    replyData = {\n        replyingTo: 0,\n        isEditing: false,\n        subject: '',\n        message: null, // Null means empty or just white space.\n        files: [],\n        isprivatereply: false,\n    };\n    originalData = {\n        subject: null, // Null means original data is not set.\n        message: null, // Null means empty or just white space.\n        files: [],\n        isprivatereply: false,\n    };\n    refreshIcon = 'spinner';\n    syncIcon = 'spinner';\n    discussionStr = '';\n    component = AddonModForumProvider.COMPONENT;\n    cmId: number;\n    canPin = false;\n    availabilityMessage: string;\n    leavingPage = false;\n\n    protected forumId: number;\n    protected postId: number;\n    protected parent: number;\n    protected onlineObserver: any;\n    protected syncObserver: any;\n    protected syncManualObserver: any;\n\n    ratingInfo?: CoreRatingInfo;\n    hasOfflineRatings: boolean;\n    protected ratingOfflineObserver: any;\n    protected ratingSyncObserver: any;\n    protected changeDiscObserver: any;\n\n    constructor(navParams: NavParams,\n            network: Network,\n            zone: NgZone,\n            protected appProvider: CoreAppProvider,\n            protected eventsProvider: CoreEventsProvider,\n            protected sitesProvider: CoreSitesProvider,\n            protected domUtils: CoreDomUtilsProvider,\n            protected utils: CoreUtilsProvider,\n            protected translate: TranslateService,\n            protected uploaderProvider: CoreFileUploaderProvider,\n            protected forumProvider: AddonModForumProvider,\n            protected forumOffline: AddonModForumOfflineProvider,\n            protected forumHelper: AddonModForumHelperProvider,\n            protected forumSync: AddonModForumSyncProvider,\n            protected ratingOffline: CoreRatingOfflineProvider,\n            protected userProvider: CoreUserProvider,\n            @Optional() protected svComponent: CoreSplitViewComponent,\n            protected navCtrl: NavController) {\n        this.courseId = navParams.get('courseId');\n        this.cmId = navParams.get('cmId');\n        this.forumId = navParams.get('forumId');\n        this.discussion = navParams.get('discussion');\n        this.discussionId = this.discussion ? this.discussion.discussion : navParams.get('discussionId');\n        this.trackPosts = navParams.get('trackPosts');\n        this.postId = navParams.get('postId');\n        this.parent = navParams.get('parent');\n\n        this.isOnline = this.appProvider.isOnline();\n        this.onlineObserver = network.onchange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            zone.run(() => {\n                this.isOnline = this.appProvider.isOnline();\n            });\n        });\n        this.isSplitViewOn = this.svComponent && this.svComponent.isOn();\n\n        this.discussionStr = translate.instant('addon.mod_forum.discussion');\n    }\n\n    /**\n     * View loaded.\n     */\n    async ionViewDidLoad(): Promise<void> {\n        if (this.parent) {\n            this.sort = 'nested'; // Force nested order.\n        } else {\n            this.sort = await this.getUserSort();\n        }\n\n        await this.fetchPosts(true, false, true);\n\n        const scrollTo = this.postId || this.parent;\n        if (scrollTo) {\n            // Scroll to the post.\n            setTimeout(() => {\n                this.domUtils.scrollToElementBySelector(this.content, '#addon-mod_forum-post-' + scrollTo);\n            });\n        }\n    }\n\n    /**\n     * Get sort type configured by the current user.\n     *\n     * @return Promise resolved with the sort type.\n     */\n    protected async getUserSort(): Promise<SortType> {\n        try {\n            const value = await this.sitesProvider.getCurrentSite().getLocalSiteConfig('AddonModForumDiscussionSort');\n\n            return value;\n        } catch (error) {\n            try {\n                const value = await this.userProvider.getUserPreference('forum_displaymode');\n\n                switch (Number(value)) {\n                    case 1:\n                        return 'flat-oldest';\n                    case -1:\n                        return 'flat-newest';\n                    case 3:\n                        return 'nested';\n                    case 2: // Threaded not implemented.\n                    default:\n                        // Not set, use default sort.\n                        // @TODO add fallback to $CFG->forum_displaymode.\n                }\n            } catch (error) {\n                // Ignore errors.\n            }\n        }\n\n        return 'flat-oldest';\n    }\n\n    /**\n     * User entered the page that contains the component.\n     */\n    ionViewDidEnter(): void {\n        // Refresh data if this discussion is synchronized automatically.\n        this.syncObserver = this.eventsProvider.on(AddonModForumSyncProvider.AUTO_SYNCED, (data) => {\n            if (data.forumId == this.forumId && this.discussionId == data.discussionId\n                    && data.userId == this.sitesProvider.getCurrentSiteUserId()) {\n                // Refresh the data.\n                this.discussionLoaded = false;\n                this.refreshPosts();\n            }\n        }, this.sitesProvider.getCurrentSiteId());\n\n        // Refresh data if this forum discussion is synchronized from discussions list.\n        this.syncManualObserver = this.eventsProvider.on(AddonModForumSyncProvider.MANUAL_SYNCED, (data) => {\n            if (data.source != 'discussion' && data.forumId == this.forumId &&\n                    data.userId == this.sitesProvider.getCurrentSiteUserId()) {\n                // Refresh the data.\n                this.discussionLoaded = false;\n                this.refreshPosts();\n            }\n        }, this.sitesProvider.getCurrentSiteId());\n\n        // Trigger view event, to highlight the current opened discussion in the split view.\n        this.eventsProvider.trigger(AddonModForumProvider.VIEW_DISCUSSION_EVENT, {\n            forumId: this.forumId,\n            discussion: this.discussionId\n        }, this.sitesProvider.getCurrentSiteId());\n\n        // Listen for offline ratings saved and synced.\n        this.ratingOfflineObserver = this.eventsProvider.on(CoreRatingProvider.RATING_SAVED_EVENT, (data) => {\n            if (data.component == 'mod_forum' && data.ratingArea == 'post' && data.contextLevel == 'module' &&\n                    data.instanceId == this.cmId && data.itemSetId == this.discussionId) {\n                this.hasOfflineRatings = true;\n            }\n        });\n        this.ratingSyncObserver = this.eventsProvider.on(CoreRatingSyncProvider.SYNCED_EVENT, (data) => {\n            if (data.component == 'mod_forum' && data.ratingArea == 'post' && data.contextLevel == 'module' &&\n                    data.instanceId == this.cmId && data.itemSetId == this.discussionId) {\n                this.hasOfflineRatings = false;\n            }\n        });\n\n        this.changeDiscObserver = this.eventsProvider.on(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, (data) => {\n            if ((this.forumId && this.forumId === data.forumId) || data.cmId === this.cmId) {\n                this.forumProvider.invalidateDiscussionsList(this.forumId).finally(() => {\n                    if (typeof data.locked != 'undefined') {\n                        this.discussion.locked = data.locked;\n                    }\n                    if (typeof data.pinned != 'undefined') {\n                        this.discussion.pinned = data.pinned;\n                    }\n                    if (typeof data.starred != 'undefined') {\n                        this.discussion.starred = data.starred;\n                    }\n\n                    if (typeof data.deleted != 'undefined' && data.deleted) {\n                        if (data.post.parent == 0) {\n                            if (this.svComponent && this.svComponent.isOn()) {\n                                this.svComponent.emptyDetails();\n                            } else {\n                                this.navCtrl.pop();\n                            }\n                        } else {\n                            this.discussionLoaded = false;\n                            this.refreshPosts();\n                        }\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @return Resolved if we can leave it, rejected if not.\n     */\n    async ionViewCanLeave(): Promise<void> {\n\n        if (this.forumHelper.hasPostDataChanged(this.replyData, this.originalData)) {\n            // Show confirmation if some data has been modified.\n            await this.domUtils.showConfirm(this.translate.instant('core.confirmcanceledit'));\n        }\n\n        // Delete the local files from the tmp folder.\n        this.uploaderProvider.clearTmpFiles(this.replyData.files);\n\n        this.leavingPage = true;\n    }\n\n    /**\n     * Convenience function to get the forum.\n     *\n     * @return Promise resolved with the forum.\n     */\n    protected fetchForum(): Promise<any> {\n        if (this.courseId && this.cmId) {\n            return this.forumProvider.getForum(this.courseId, this.cmId);\n        } else if (this.courseId && this.forumId) {\n            return this.forumProvider.getForumById(this.courseId, this.forumId);\n        } else {\n            // Cannot get the forum.\n            return Promise.reject(null);\n        }\n    }\n\n    /**\n     * Convenience function to get the posts.\n     *\n     * @param sync Whether to try to synchronize the discussion.\n     * @param showErrors Whether to show errors in a modal.\n     * @param forceMarkAsRead Whether to mark all posts as read.\n     * @return Promise resolved when done.\n     */\n    protected fetchPosts(sync?: boolean, showErrors?: boolean, forceMarkAsRead?: boolean): Promise<any> {\n        let syncPromise;\n        if (sync) {\n            // Try to synchronize the forum.\n            syncPromise = this.syncDiscussion(showErrors).catch(() => {\n                // Ignore errors.\n            });\n        } else {\n            syncPromise = Promise.resolve();\n        }\n\n        let onlinePosts = [];\n        const offlineReplies = [];\n        let hasUnreadPosts = false;\n        let ratingInfo;\n\n        return syncPromise.then(() => {\n            return this.forumProvider.getDiscussionPosts(this.discussionId).then((response) => {\n                onlinePosts = response.posts;\n                ratingInfo = response.ratinginfo;\n            }).then(() => {\n                // Check if there are responses stored in offline.\n                return this.forumOffline.getDiscussionReplies(this.discussionId).then((replies) => {\n                    this.postHasOffline = !!replies.length;\n                    const convertPromises = [];\n\n                    // Index posts to allow quick access. Also check unread field.\n                    const posts = {};\n                    onlinePosts.forEach((post) => {\n                        posts[post.id] = post;\n                        hasUnreadPosts = hasUnreadPosts || !post.postread;\n                    });\n\n                    replies.forEach((offlineReply) => {\n                        // If we don't have forumId and courseId, get it from the post.\n                        if (!this.forumId) {\n                            this.forumId = offlineReply.forumid;\n                        }\n                        if (!this.courseId) {\n                            this.courseId = offlineReply.courseid;\n                        }\n\n                        convertPromises.push(this.forumHelper.convertOfflineReplyToOnline(offlineReply).then((reply) => {\n                            offlineReplies.push(reply);\n\n                            // Disable reply of the parent. Reply in offline to the same post is not allowed, edit instead.\n                            posts[reply.parent].canreply = false;\n                        }));\n                    });\n\n                    return Promise.all(convertPromises).then(() => {\n                        // Convert back to array.\n                        onlinePosts = this.utils.objectToArray(posts);\n                    });\n                });\n            });\n        }).then(() => {\n            let posts = offlineReplies.concat(onlinePosts);\n\n            const startingPost = this.forumProvider.extractStartingPost(posts);\n            if (startingPost) {\n                // Update discussion data from first post.\n                this.discussion = Object.assign(this.discussion || {}, startingPost);\n            }\n\n            // If sort type is nested, normal sorting is disabled and nested posts will be displayed.\n            if (this.sort == 'nested') {\n                // Sort first by creation date to make format tree work.\n                this.forumProvider.sortDiscussionPosts(posts, 'ASC');\n\n                posts = this.utils.formatTree(posts, 'parent', 'id', this.discussion.id);\n            } else {\n                // Set default reply subject.\n                const direction = this.sort == 'flat-newest' ? 'DESC' : 'ASC';\n                this.forumProvider.sortDiscussionPosts(posts, direction);\n            }\n\n            // Now try to get the forum.\n            return this.fetchForum().then((forum) => {\n                // \"forum.istracked\" is more reliable than \"trackPosts\".\n                if (typeof forum.istracked != 'undefined') {\n                    this.trackPosts = forum.istracked;\n                }\n\n                this.forumId = forum.id;\n                this.cmId = forum.cmid;\n                this.courseId = forum.course;\n                this.forum = forum;\n                this.availabilityMessage = this.forumHelper.getAvailabilityMessage(forum);\n\n                const promises = [];\n\n                promises.push(this.forumProvider.getAccessInformation(this.forumId).then((accessInfo) => {\n                    this.accessInfo = accessInfo;\n\n                    // Disallow replying if cut-off date is reached and the user has not the capability to override it.\n                    // Just in case the posts were fetched from WS when the cut-off date was not reached but it is now.\n                    if (this.forumHelper.isCutoffDateReached(forum) && !accessInfo.cancanoverridecutoff) {\n                        posts.forEach((post) => {\n                            post.canreply = false;\n                        });\n                    }\n                }));\n\n                // The discussion object was not passed as parameter and there is no starting post. Should not happen.\n                if (!this.discussion) {\n                    promises.push(this.loadDiscussion(this.forumId, this.discussionId));\n                }\n\n                return Promise.all(promises);\n            }).catch(() => {\n                // Ignore errors.\n            }).then(() => {\n\n                if (!this.discussion) {\n                    // The discussion object was not passed as parameter and there is no starting post. Should not happen.\n                    return Promise.reject('Invalid forum discussion.');\n                }\n\n                if (this.discussion.userfullname && this.discussion.parent == 0 && this.forum.type == 'single') {\n                    // Hide author for first post and type single.\n                    this.discussion.userfullname = null;\n                }\n\n                this.posts = posts;\n                this.ratingInfo = ratingInfo;\n                this.postSubjects = this.getAllPosts().reduce((postSubjects, post) => {\n                    postSubjects[post.id] = post.subject;\n\n                    return postSubjects;\n                }, { [this.discussion.id]: this.discussion.subject });\n            });\n        }).then(() => {\n            if (this.forumProvider.isSetPinStateAvailableForSite()) {\n                // Use the canAddDiscussion WS to check if the user can pin discussions.\n                return this.forumProvider.canAddDiscussionToAll(this.forumId).then((response) => {\n                    this.canPin = !!response.canpindiscussions;\n                }).catch(() => {\n                    this.canPin = false;\n                });\n            } else {\n                this.canPin = false;\n            }\n        }).then(() => {\n            return this.ratingOffline.hasRatings('mod_forum', 'post', 'module', this.cmId, this.discussionId).then((hasRatings) => {\n                this.hasOfflineRatings = hasRatings;\n            });\n        }).catch((message) => {\n            this.domUtils.showErrorModal(message);\n        }).finally(() => {\n            this.discussionLoaded = true;\n            this.refreshIcon = 'refresh';\n            this.syncIcon = 'sync';\n\n            if (forceMarkAsRead || (hasUnreadPosts && this.trackPosts)) {\n                // // Add log in Moodle and mark unread posts as readed.\n                this.forumProvider.logDiscussionView(this.discussionId, this.forumId || -1, this.forum.name).catch(() => {\n                    // Ignore errors.\n                }).finally(() => {\n                    // Trigger mark read posts.\n                    this.eventsProvider.trigger(AddonModForumProvider.MARK_READ_EVENT, {\n                        courseId: this.courseId,\n                        moduleId: this.cmId\n                    }, this.sitesProvider.getCurrentSiteId());\n                });\n            }\n        });\n    }\n\n    /**\n     * Convenience function to load discussion.\n     *\n     * @param  forumId Forum ID.\n     * @param  discussionId Discussion ID.\n     * @return Promise resolved when done.\n     */\n    protected loadDiscussion(forumId: number, discussionId: number): Promise<void> {\n        // Fetch the discussion if not passed as parameter.\n        if (!this.discussion && forumId) {\n            return this.forumHelper.getDiscussionById(forumId, discussionId).then((discussion) => {\n                this.discussion = discussion;\n                this.discussionId = this.discussion.discussion;\n            }).catch(() => {\n                // Ignore errors.\n            });\n        }\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Tries to synchronize the posts discussion.\n     *\n     * @param showErrors Whether to show errors in a modal.\n     * @return Promise resolved when done.\n     */\n    protected syncDiscussion(showErrors: boolean): Promise<any> {\n        const promises = [];\n\n        promises.push(this.forumSync.syncDiscussionReplies(this.discussionId).then((result) => {\n            if (result.warnings && result.warnings.length) {\n                this.domUtils.showErrorModal(result.warnings[0]);\n            }\n\n            if (result && result.updated) {\n                // Sync successful, send event.\n                this.eventsProvider.trigger(AddonModForumSyncProvider.MANUAL_SYNCED, {\n                    forumId: this.forumId,\n                    userId: this.sitesProvider.getCurrentSiteUserId(),\n                    source: 'discussion'\n                }, this.sitesProvider.getCurrentSiteId());\n            }\n\n            return result.updated;\n        }));\n\n        promises.push(this.forumSync.syncRatings(this.cmId, this.discussionId).then((result) => {\n            if (result.warnings && result.warnings.length) {\n                this.domUtils.showErrorModal(result.warnings[0]);\n            }\n        }));\n\n        return Promise.all(promises).catch((error) => {\n            if (showErrors) {\n                this.domUtils.showErrorModalDefault(error, 'core.errorsync', true);\n            }\n\n            return Promise.reject(null);\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @param done Function to call when done.\n     * @param showErrors If show errors to the user of hide them.\n     * @return Promise resolved when done.\n     */\n    doRefresh(refresher?: any, done?: () => void, showErrors: boolean = false): Promise<any> {\n        if (this.discussionLoaded) {\n            return this.refreshPosts(true, showErrors).finally(() => {\n                refresher && refresher.complete();\n                done && done();\n            });\n        }\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Refresh posts.\n     *\n     * @param sync Whether to try to synchronize the discussion.\n     * @param showErrors Whether to show errors in a modal.\n     * @return Promise resolved when done.\n     */\n    refreshPosts(sync?: boolean, showErrors?: boolean): Promise<any> {\n        this.domUtils.scrollToTop(this.content);\n        this.refreshIcon = 'spinner';\n        this.syncIcon = 'spinner';\n\n        const promises = [\n            this.forumProvider.invalidateForumData(this.courseId),\n            this.forumProvider.invalidateDiscussionPosts(this.discussionId, this.forumId),\n            this.forumProvider.invalidateAccessInformation(this.forumId),\n            this.forumProvider.invalidateCanAddDiscussion(this.forumId)\n        ];\n\n        return this.utils.allPromises(promises).catch(() => {\n            // Ignore errors.\n        }).then(() => {\n            return this.fetchPosts(sync, showErrors);\n        });\n    }\n\n    /**\n     * Function to change posts sorting\n     *\n     * @param type Sort type.\n     * @return Promised resolved when done.\n     */\n    changeSort(type: SortType): Promise<any> {\n        this.discussionLoaded = false;\n        this.sort = type;\n        this.sitesProvider.getCurrentSite().setLocalSiteConfig('AddonModForumDiscussionSort', this.sort);\n        this.domUtils.scrollToTop(this.content);\n\n        return this.fetchPosts();\n    }\n\n    /**\n     * Lock or unlock the discussion.\n     *\n     * @param locked True to lock the discussion, false to unlock.\n     */\n    setLockState(locked: boolean): void {\n        const modal = this.domUtils.showModalLoading('core.sending', true);\n\n        this.forumProvider.setLockState(this.forumId, this.discussionId, locked).then((response) => {\n            this.discussion.locked = response.locked;\n\n            const data = {\n                forumId: this.forumId,\n                discussionId: this.discussionId,\n                cmId: this.cmId,\n                locked: this.discussion.locked\n            };\n            this.eventsProvider.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, this.sitesProvider.getCurrentSiteId());\n\n            this.domUtils.showToast('addon.mod_forum.lockupdated', true);\n        }).catch((error) => {\n            this.domUtils.showErrorModal(error);\n        }).finally(() => {\n            modal.dismiss();\n        });\n    }\n\n    /**\n     * Pin or unpin the discussion.\n     *\n     * @param pinned True to pin the discussion, false to unpin it.\n     */\n    setPinState(pinned: boolean): void {\n        const modal = this.domUtils.showModalLoading('core.sending', true);\n\n        this.forumProvider.setPinState(this.discussionId, pinned).then(() => {\n            this.discussion.pinned = pinned;\n\n            const data = {\n                forumId: this.forumId,\n                discussionId: this.discussionId,\n                cmId: this.cmId,\n                pinned: this.discussion.pinned\n            };\n            this.eventsProvider.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, this.sitesProvider.getCurrentSiteId());\n\n            this.domUtils.showToast('addon.mod_forum.pinupdated', true);\n        }).catch((error) => {\n            this.domUtils.showErrorModal(error);\n        }).finally(() => {\n            modal.dismiss();\n        });\n    }\n\n    /**\n     * Star or unstar the discussion.\n     *\n     * @param starred True to star the discussion, false to unstar it.\n     */\n    toggleFavouriteState(starred: boolean): void {\n        const modal = this.domUtils.showModalLoading('core.sending', true);\n\n        this.forumProvider.toggleFavouriteState(this.discussionId, starred).then(() => {\n            this.discussion.starred = starred;\n\n            const data = {\n                forumId: this.forumId,\n                discussionId: this.discussionId,\n                cmId: this.cmId,\n                starred: this.discussion.starred\n            };\n            this.eventsProvider.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, this.sitesProvider.getCurrentSiteId());\n\n            this.domUtils.showToast('addon.mod_forum.favouriteupdated', true);\n        }).catch((error) => {\n            this.domUtils.showErrorModal(error);\n        }).finally(() => {\n            modal.dismiss();\n        });\n    }\n\n    /**\n     * New post added.\n     */\n    postListChanged(): void {\n        // Trigger an event to notify a new reply.\n        const data = {\n            forumId: this.forumId,\n            discussionId: this.discussionId,\n            cmId: this.cmId\n        };\n        this.eventsProvider.trigger(AddonModForumProvider.REPLY_DISCUSSION_EVENT, data, this.sitesProvider.getCurrentSiteId());\n\n        this.discussionLoaded = false;\n        this.refreshPosts().finally(() => {\n            this.discussionLoaded = true;\n        });\n    }\n\n    /**\n     * Runs when the page is about to leave and no longer be the active page.\n     */\n    ionViewWillLeave(): void {\n        this.syncObserver && this.syncObserver.off();\n        this.syncManualObserver && this.syncManualObserver.off();\n        this.ratingOfflineObserver && this.ratingOfflineObserver.off();\n        this.ratingSyncObserver && this.ratingSyncObserver.off();\n        this.changeDiscObserver && this.changeDiscObserver.off();\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.onlineObserver && this.onlineObserver.unsubscribe();\n    }\n\n    /**\n     * Get all the posts contained in the discussion.\n     *\n     * @return Array containing all the posts of the discussion.\n     */\n    protected getAllPosts(): Post[] {\n        return [].concat(...this.posts.map(this.flattenPostHierarchy.bind(this)));\n    }\n\n    /**\n     * Flatten a post's hierarchy into an array.\n     *\n     * @param parent Parent post.\n     * @return Array containing all the posts within the hierarchy (including the parent).\n     */\n    protected flattenPostHierarchy(parent: Post): Post[] {\n        const posts = [parent];\n        const children = parent.children || [];\n\n        for (const child of children) {\n            posts.push(...this.flattenPostHierarchy(child));\n        }\n\n        return posts;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/forum/pages/discussion/discussion.ts"],"sourceRoot":""}