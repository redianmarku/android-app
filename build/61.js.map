{"version":3,"sources":["../../src/core/comments/pages/viewer/viewer.module.ts","../../src/core/comments/pages/viewer/viewer.ts"],"names":[],"mappings":"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","file":"61.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreCommentsViewerPage } from './viewer';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { CoreCommentsComponentsModule } from '../../components/components.module';\n\n@NgModule({\n    declarations: [\n        CoreCommentsViewerPage\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule,\n        CoreCommentsComponentsModule,\n        IonicPageModule.forChild(CoreCommentsViewerPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class CoreCommentsViewerPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/comments/pages/viewer/viewer.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild, OnDestroy } from '@angular/core';\nimport { IonicPage, Content, NavParams, ModalController } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { coreSlideInOut } from '@classes/animations';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreUserProvider } from '@core/user/providers/user';\nimport { CoreCommentsProvider } from '../../providers/comments';\nimport { CoreCommentsOfflineProvider } from '../../providers/offline';\nimport { CoreCommentsSyncProvider } from '../../providers/sync';\n\n/**\n * Page that displays comments.\n */\n@IonicPage({ segment: 'core-comments-viewer' })\n@Component({\n    selector: 'page-core-comments-viewer',\n    templateUrl: 'viewer.html',\n    animations: [coreSlideInOut]\n})\nexport class CoreCommentsViewerPage implements OnDestroy {\n    @ViewChild(Content) content: Content;\n\n    comments = [];\n    commentsLoaded = false;\n    contextLevel: string;\n    instanceId: number;\n    componentName: string;\n    itemId: number;\n    area: string;\n    page: number;\n    title: string;\n    courseId: number;\n    canLoadMore = false;\n    loadMoreError = false;\n    canAddComments = false;\n    canDeleteComments = false;\n    showDelete = false;\n    hasOffline = false;\n    refreshIcon = 'spinner';\n    syncIcon = 'spinner';\n    offlineComment: any;\n    currentUserId: number;\n\n    protected addDeleteCommentsAvailable = false;\n    protected syncObserver: any;\n    protected currentUser: any;\n\n    constructor(navParams: NavParams,\n            protected sitesProvider: CoreSitesProvider,\n            protected userProvider: CoreUserProvider,\n            protected domUtils: CoreDomUtilsProvider,\n            protected translate: TranslateService,\n            protected modalCtrl: ModalController,\n            protected commentsProvider: CoreCommentsProvider,\n            protected offlineComments: CoreCommentsOfflineProvider,\n            protected eventsProvider: CoreEventsProvider,\n            protected commentsSync: CoreCommentsSyncProvider,\n            protected textUtils: CoreTextUtilsProvider,\n            protected timeUtils: CoreTimeUtilsProvider) {\n\n        this.contextLevel = navParams.get('contextLevel');\n        this.instanceId = navParams.get('instanceId');\n        this.componentName = navParams.get('componentName');\n        this.itemId = navParams.get('itemId');\n        this.area = navParams.get('area') || '';\n        this.title = navParams.get('title') || this.translate.instant('core.comments.comments');\n        this.courseId = navParams.get('courseId');\n        this.page = 0;\n\n        // Refresh data if comments are synchronized automatically.\n        this.syncObserver = eventsProvider.on(CoreCommentsSyncProvider.AUTO_SYNCED, (data) => {\n            if (data.contextLevel == this.contextLevel && data.instanceId == this.instanceId &&\n                    data.componentName == this.componentName && data.itemId == this.itemId && data.area == this.area) {\n                // Show the sync warnings.\n                this.showSyncWarnings(data.warnings);\n\n                // Refresh the data.\n                this.commentsLoaded = false;\n                this.refreshIcon = 'spinner';\n                this.syncIcon = 'spinner';\n\n                this.domUtils.scrollToTop(this.content);\n\n                this.page = 0;\n                this.comments = [];\n                this.fetchComments(false);\n            }\n        }, sitesProvider.getCurrentSiteId());\n    }\n\n    /**\n     * View loaded.\n     */\n    ionViewDidLoad(): void {\n        this.commentsProvider.isAddCommentsAvailable().then((enabled) => {\n            // Is implicit the user can delete if he can add.\n            this.addDeleteCommentsAvailable = enabled;\n        });\n\n        this.currentUserId = this.sitesProvider.getCurrentSiteUserId();\n        this.fetchComments(true);\n    }\n\n    /**\n     * Fetches the comments.\n     *\n     * @param sync When to resync comments.\n     * @param showErrors When to display errors or not.\n     * @return Resolved when done.\n     */\n    protected fetchComments(sync: boolean, showErrors?: boolean): Promise<any> {\n        this.loadMoreError = false;\n\n        const promise = sync ? this.syncComments(showErrors) : Promise.resolve();\n\n        return promise.catch(() => {\n            // Ignore errors.\n        }).then(() => {\n            // Get comments data.\n            return this.commentsProvider.getComments(this.contextLevel, this.instanceId, this.componentName, this.itemId,\n                    this.area, this.page).then((response) => {\n                this.canAddComments = this.addDeleteCommentsAvailable && response.canpost;\n\n                const comments = response.comments.sort((a, b) => b.timecreated - a.timecreated);\n                if (typeof response.count != 'undefined') {\n                    this.canLoadMore = (this.comments.length + comments.length) > response.count;\n                } else {\n                    // Old style.\n                    this.canLoadMore = response.comments.length > 0 && response.comments.length >= CoreCommentsProvider.pageSize;\n                }\n\n                return Promise.all(comments.map((comment) => this.loadCommentProfile(comment)));\n            }).then((comments) => {\n                this.comments = this.comments.concat(comments);\n\n                this.canDeleteComments = this.addDeleteCommentsAvailable && (this.hasOffline || this.comments.some((comment) => {\n                    return !!comment.delete;\n                }));\n            });\n        }).then(() => {\n            return this.loadOfflineData();\n        }).catch((error) => {\n            this.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\n            if (error && this.componentName == 'assignsubmission_comments') {\n                this.domUtils.showAlertTranslated('core.notice', 'core.comments.commentsnotworking');\n            } else {\n                this.domUtils.showErrorModalDefault(error, this.translate.instant('core.error') + ': get_comments');\n            }\n        }).finally(() => {\n            this.commentsLoaded = true;\n            this.refreshIcon = 'refresh';\n            this.syncIcon = 'sync';\n        });\n\n    }\n\n    /**\n     * Function to load more commemts.\n     *\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n     * @return Resolved when done.\n     */\n    loadMore(infiniteComplete?: any): Promise<any> {\n        this.page++;\n        this.canLoadMore = false;\n\n        return this.fetchComments(true).finally(() => {\n            infiniteComplete && infiniteComplete();\n        });\n    }\n\n    /**\n     * Refresh the comments.\n     *\n     * @param showErrors Whether to display errors or not.\n     * @param refresher Refresher.\n     * @return Resolved when done.\n     */\n    refreshComments(showErrors: boolean, refresher?: any): Promise<any> {\n        this.commentsLoaded = false;\n        this.refreshIcon = 'spinner';\n        this.syncIcon = 'spinner';\n\n        return this.invalidateComments().finally(() => {\n            this.page = 0;\n            this.comments = [];\n\n            return this.fetchComments(true, showErrors).finally(() => {\n                refresher && refresher.complete();\n            });\n        });\n    }\n\n    /**\n     * Show sync warnings if any.\n     *\n     * @param warnings the warnings\n     */\n    private showSyncWarnings(warnings: string[]): void {\n        const message = this.textUtils.buildMessage(warnings);\n        if (message) {\n            this.domUtils.showErrorModal(message);\n        }\n    }\n\n    /**\n     * Tries to synchronize comments.\n     *\n     * @param showErrors Whether to display errors or not.\n     * @return Promise resolved if sync is successful, rejected otherwise.\n     */\n    private syncComments(showErrors: boolean): Promise<any> {\n        return this.commentsSync.syncComments(this.contextLevel, this.instanceId, this.componentName, this.itemId,\n                this.area).then((warnings) => {\n            this.showSyncWarnings(warnings);\n        }).catch((error) => {\n            if (showErrors) {\n                this.domUtils.showErrorModalDefault(error, 'core.errorsync', true);\n            }\n\n            return Promise.reject(null);\n        });\n    }\n\n    /**\n     * Add a new comment to the list.\n     *\n     * @param e Event.\n     */\n    addComment(e: Event): void {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const params = {\n            contextLevel: this.contextLevel,\n            instanceId: this.instanceId,\n            componentName: this.componentName,\n            itemId: this.itemId,\n            area: this.area,\n            content: this.hasOffline ? this.offlineComment.content : ''\n        };\n\n        const modal = this.modalCtrl.create('CoreCommentsAddPage', params);\n        modal.onDidDismiss((data) => {\n            if (data && data.comments) {\n                this.invalidateComments();\n\n                return Promise.all(data.comments.map((comment) => this.loadCommentProfile(comment))).then((addedComments) => {\n                    // Add the comment to the top.\n                    this.comments = addedComments.concat(this.comments);\n                    this.canDeleteComments = this.addDeleteCommentsAvailable;\n\n                    this.eventsProvider.trigger(CoreCommentsProvider.COMMENTS_COUNT_CHANGED_EVENT, {\n                            contextLevel: this.contextLevel,\n                            instanceId: this.instanceId,\n                            component: this.componentName,\n                            itemId: this.itemId,\n                            area: this.area,\n                            countChange: addedComments.length,\n                        }, this.sitesProvider.getCurrentSiteId());\n                });\n            } else if (data && !data.comments) {\n                // Comments added in offline mode.\n                return this.loadOfflineData();\n            }\n        });\n        modal.present();\n    }\n\n    /**\n     * Delete a comment.\n     *\n     * @param e Click event.\n     * @param deleteComment Comment to delete.\n     */\n    deleteComment(e: Event, deleteComment: any): void {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const time = this.timeUtils.userDate((deleteComment.lastmodified || deleteComment.timecreated) * 1000,\n            'core.strftimerecentfull');\n\n        deleteComment.contextlevel = this.contextLevel;\n        deleteComment.instanceid = this.instanceId;\n        deleteComment.component = this.componentName;\n        deleteComment.itemid = this.itemId;\n        deleteComment.area = this.area;\n\n        this.domUtils.showDeleteConfirm('core.comments.deletecommentbyon', {$a:\n                { user: deleteComment.fullname || '', time: time } }).then(() => {\n            this.commentsProvider.deleteComment(deleteComment).then((deletedOnline) => {\n                this.showDelete = false;\n\n                if (deletedOnline) {\n                    const index = this.comments.findIndex((comment) => comment.id == deleteComment.id);\n                    if (index >= 0) {\n                        this.comments.splice(index, 1);\n\n                        this.eventsProvider.trigger(CoreCommentsProvider.COMMENTS_COUNT_CHANGED_EVENT, {\n                            contextLevel: this.contextLevel,\n                            instanceId: this.instanceId,\n                            component: this.componentName,\n                            itemId: this.itemId,\n                            area: this.area,\n                            countChange: -1,\n                        }, this.sitesProvider.getCurrentSiteId());\n                    }\n                } else {\n                    this.loadOfflineData();\n                }\n\n                this.invalidateComments();\n\n                this.domUtils.showToast('core.comments.eventcommentdeleted', true, 3000);\n            }).catch((error) => {\n                this.domUtils.showErrorModalDefault(error, 'Delete comment failed.');\n            });\n        }).catch(() => {\n            // User cancelled, nothing to do.\n        });\n    }\n\n    /**\n     * Invalidate comments.\n     *\n     * @return Resolved when done.\n     */\n    protected invalidateComments(): Promise<void> {\n        return this.commentsProvider.invalidateCommentsData(this.contextLevel, this.instanceId, this.componentName, this.itemId,\n                    this.area);\n    }\n\n    /**\n     * Loads the profile info onto the comment object.\n     *\n     * @param  comment Comment object.\n     * @return Promise resolved with modified comment when done.\n     */\n    protected loadCommentProfile(comment: any): Promise<any> {\n        // Get the user profile image.\n        return this.userProvider.getProfile(comment.userid, undefined, true).then((user) => {\n            comment.profileimageurl = user.profileimageurl;\n            comment.fullname = user.fullname;\n            comment.userid = user.id;\n\n            return comment;\n        }).catch(() => {\n            // Ignore errors.\n            return comment;\n        });\n    }\n\n    /**\n     * Load offline comments.\n     *\n     * @return Promise resolved when done.\n     */\n    protected loadOfflineData(): Promise<void> {\n        const promises = [];\n        let hasDeletedComments = false;\n\n        // Load the only offline comment allowed if any.\n        promises.push(this.offlineComments.getComment(this.contextLevel, this.instanceId, this.componentName, this.itemId,\n                this.area).then((offlineComment) => {\n\n            if (offlineComment && !this.currentUser) {\n                offlineComment.userid = this.currentUserId;\n\n                this.loadCommentProfile(offlineComment).then((comment) => {\n                    // Save this fields for further requests.\n                    if (comment.fullname) {\n                        this.currentUser = {};\n                        this.currentUser.profileimageurl = comment.profileimageurl;\n                        this.currentUser.fullname = comment.fullname;\n                        this.currentUser.userid = comment.userid;\n                    }\n                });\n            } else if (offlineComment) {\n                offlineComment.profileimageurl = this.currentUser.profileimageurl;\n                offlineComment.fullname = this.currentUser.fullname;\n                offlineComment.userid = this.currentUser.id;\n            }\n\n            this.offlineComment = offlineComment;\n        }));\n\n        // Load deleted comments offline.\n        promises.push(this.offlineComments.getDeletedComments(this.contextLevel, this.instanceId, this.componentName, this.itemId,\n                this.area).then((deletedComments) => {\n            hasDeletedComments = deletedComments && deletedComments.length > 0;\n\n            hasDeletedComments && deletedComments.forEach((deletedComment) => {\n                const comment = this.comments.find((comment) => {\n                    return comment.id == deletedComment.commentid;\n                });\n\n                if (comment) {\n                    comment.deleted = deletedComment.deleted;\n                }\n            });\n        }));\n\n        return Promise.all(promises).then(() => {\n            this.hasOffline = !!this.offlineComment || hasDeletedComments;\n        });\n    }\n\n    /**\n     * Restore a comment.\n     *\n     * @param e Click event.\n     * @param comment Comment to delete.\n     */\n    undoDeleteComment(e: Event, comment: any): void {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.offlineComments.undoDeleteComment(comment.id).then(() => {\n            comment.deleted = false;\n            this.showDelete = false;\n        });\n    }\n\n    /**\n     * Toggle delete.\n     */\n    toggleDelete(): void {\n        this.showDelete = !this.showDelete;\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.syncObserver && this.syncObserver.off();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/comments/pages/viewer/viewer.ts"],"sourceRoot":""}