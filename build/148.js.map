{"version":3,"sources":["../../src/addon/badges/pages/user-badges/user-badges.module.ts","../../src/addon/badges/pages/user-badges/user-badges.ts"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;;;AAEQ;AACO;AACM;AACe;AACA;AACf;AACI;AAc1D;IAAA;IAA8C,CAAC;IAAlC,+BAA+B;QAZ3C,uEAAQ,CAAC;YACN,YAAY,EAAE;gBACV,+EAAyB;aAC5B;YACD,OAAO,EAAE;gBACL,2FAAoB;gBACpB,2FAAoB;gBACpB,4EAAe;gBACf,sEAAe,CAAC,QAAQ,CAAC,+EAAyB,CAAC;gBACnD,4EAAe,CAAC,QAAQ,EAAE;aAC7B;SACJ,CAAC;OACW,+BAA+B,CAAG;IAAD,sCAAC;CAAA;AAAH;;;;;;;;;AClC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;;;;;;AAEoB;AACF;AACgC;AACrB;AACF;AACP;AACsB;AAE3E;;GAEG;AAMH;IAYI,mCAAY,SAAoB,EAAE,aAAgC,EAAU,cAAmC,EAC/F,QAA8B,EAAU,SAAgC;QADZ,mBAAc,GAAd,cAAc,CAAqB;QAC/F,aAAQ,GAAR,QAAQ,CAAsB;QAAU,cAAS,GAAT,SAAS,CAAuB;QANxF,iBAAY,GAAG,KAAK,CAAC;QACrB,WAAM,GAA2B,EAAE,CAAC;QACpC,gBAAW,GAAG,CAAC,CAAC;QAMZ,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,yBAAyB;QACzE,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,aAAa,CAAC,cAAc,EAAE,CAAC,SAAS,EAAE,CAAC;IACxF,CAAC;IAED;;OAEG;IACH,kDAAc,GAAd;QAAA,iBASC;QAPG,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC;YACvB,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,SAAS,IAAI,KAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,KAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACzE,0BAA0B;gBAC1B,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YACpD,CAAC;YACD,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,+CAAW,GAAX;QAAA,iBAQC;QAPG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;QAE9C,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YAC7E,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,OAAO;YACb,KAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,OAAO,EAAE,4BAA4B,CAAC,CAAC;QAC/E,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,iDAAa,GAAb,UAAc,SAAc;QAA5B,iBAMC;QALG,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;YACzE,KAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC;gBACvB,SAAS,CAAC,QAAQ,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,mDAAe,GAAf,UAAgB,SAAiB;QAC7B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAM,MAAM,GAAG,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAC,CAAC;QACpF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,4BAA4B,EAAE,MAAM,CAAC,CAAC;IAClE,CAAC;IArEmB;QAAnB,yEAAS,CAAC,8DAAO,CAAC;kCAAU,8DAAO;8DAAC;IACF;QAAlC,yEAAS,CAAC,iGAAsB,CAAC;kCAAgB,iGAAsB;oEAAC;IAFhE,yBAAyB;QAJrC,wEAAS,CAAC;YACP,QAAQ,EAAE,+BAA+B;WACV;SAClC,CAAC;oLAamD,EAA8D;YACrF,oBAAoB,EAA0C;OAb/E,yBAAyB,CAuErC;IAAD,CAAC;AAAA;SAvEY,yBAAyB,K","file":"148.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { AddonBadgesUserBadgesPage } from './user-badges';\n\n@NgModule({\n    declarations: [\n        AddonBadgesUserBadgesPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule,\n        IonicPageModule.forChild(AddonBadgesUserBadgesPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonBadgesUserBadgesPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/badges/pages/user-badges/user-badges.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild } from '@angular/core';\nimport { IonicPage, Content, NavParams } from 'ionic-angular';\nimport { AddonBadgesProvider, AddonBadgesUserBadge } from '../../providers/badges';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\n\n/**\n * Page that displays the list of calendar events.\n */\n@IonicPage({ segment: 'addon-badges-user-badges' })\n@Component({\n    selector: 'page-addon-badges-user-badges',\n    templateUrl: 'user-badges.html',\n})\nexport class AddonBadgesUserBadgesPage {\n    @ViewChild(Content) content: Content;\n    @ViewChild(CoreSplitViewComponent) splitviewCtrl: CoreSplitViewComponent;\n\n    courseId: number;\n    userId: number;\n\n    badgesLoaded = false;\n    badges: AddonBadgesUserBadge[] = [];\n    currentTime = 0;\n    badgeHash: string;\n\n    constructor(navParams: NavParams, sitesProvider: CoreSitesProvider, private badgesProvider: AddonBadgesProvider,\n            private domUtils: CoreDomUtilsProvider, private timeUtils: CoreTimeUtilsProvider) {\n\n        this.courseId = navParams.get('courseId') || 0; // Use 0 for site badges.\n        this.userId = navParams.get('userId') || sitesProvider.getCurrentSite().getUserId();\n    }\n\n    /**\n     * View loaded.\n     */\n    ionViewDidLoad(): void {\n\n        this.fetchBadges().finally(() => {\n            if (!this.badgeHash && this.splitviewCtrl.isOn() && this.badges.length > 0) {\n                // Take first and load it.\n                this.loadIssuedBadge(this.badges[0].uniquehash);\n            }\n            this.badgesLoaded = true;\n        });\n    }\n\n    /**\n     * Fetch all the badges required for the view.\n     *\n     * @return Promise resolved when done.\n     */\n    fetchBadges(): Promise<any> {\n        this.currentTime = this.timeUtils.timestamp();\n\n        return this.badgesProvider.getUserBadges(this.courseId, this.userId).then((badges) => {\n            this.badges = badges;\n        }).catch((message) => {\n            this.domUtils.showErrorModalDefault(message, 'Error getting badges data.');\n        });\n    }\n\n    /**\n     * Refresh the badges.\n     *\n     * @param refresher Refresher.\n     */\n    refreshBadges(refresher: any): void {\n        this.badgesProvider.invalidateUserBadges(this.courseId, this.userId).finally(() => {\n            this.fetchBadges().finally(() => {\n                refresher.complete();\n            });\n        });\n    }\n\n    /**\n     * Navigate to a particular badge.\n     *\n     * @param badgeHash Badge to load.\n     */\n    loadIssuedBadge(badgeHash: string): void {\n        this.badgeHash = badgeHash;\n        const params = {courseId: this.courseId, userId: this.userId, badgeHash: badgeHash};\n        this.splitviewCtrl.push('AddonBadgesIssuedBadgePage', params);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/badges/pages/user-badges/user-badges.ts"],"sourceRoot":""}