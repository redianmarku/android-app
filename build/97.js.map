{"version":3,"sources":["../../src/addon/mod/h5pactivity/pages/attempt-results/attempt-results.module.ts","../../src/addon/mod/h5pactivity/pages/attempt-results/attempt-results.ts"],"names":[],"mappings":"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","file":"97.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { AddonModH5PActivityAttemptResultsPage } from './attempt-results';\n\n@NgModule({\n    declarations: [\n        AddonModH5PActivityAttemptResultsPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule,\n        IonicPageModule.forChild(AddonModH5PActivityAttemptResultsPage),\n        TranslateModule.forChild(),\n    ],\n})\nexport class AddonModH5PActivityAttemptResultsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/h5pactivity/pages/attempt-results/attempt-results.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { IonicPage, NavParams } from 'ionic-angular';\nimport { CoreDomUtils } from '@providers/utils/dom';\nimport { CoreUser } from '@core/user/providers/user';\nimport {\n    AddonModH5PActivity, AddonModH5PActivityProvider, AddonModH5PActivityData, AddonModH5PActivityAttemptResults\n} from '../../providers/h5pactivity';\n\n/**\n * Page that displays results of an attempt.\n */\n@IonicPage({ segment: 'addon-mod-h5pactivity-attempt-results' })\n@Component({\n    selector: 'page-addon-mod-h5pactivity-attempt-results',\n    templateUrl: 'attempt-results.html',\n})\nexport class AddonModH5PActivityAttemptResultsPage implements OnInit {\n    loaded: boolean;\n    h5pActivity: AddonModH5PActivityData;\n    attempt: AddonModH5PActivityAttemptResults;\n    user: any;\n    component = AddonModH5PActivityProvider.COMPONENT;\n\n    protected courseId: number;\n    protected h5pActivityId: number;\n    protected attemptId: number;\n\n    constructor(navParams: NavParams) {\n        this.courseId = navParams.get('courseId');\n        this.h5pActivityId = navParams.get('h5pActivityId');\n        this.attemptId = navParams.get('attemptId');\n    }\n\n    /**\n     * Component being initialized.\n     *\n     * @return Promise resolved when done.\n     */\n    async ngOnInit(): Promise<void> {\n        try {\n            await this.fetchData();\n        } catch (error) {\n            CoreDomUtils.instance.showErrorModalDefault(error, 'Error loading attempt.');\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     */\n    doRefresh(refresher: any): void {\n        this.refreshData().finally(() => {\n            refresher.complete();\n        });\n    }\n\n    /**\n     * Get quiz data and attempt data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchData(): Promise<void> {\n        await Promise.all([\n            this.fetchActivity(),\n            this.fetchAttempt(),\n        ]);\n\n        await this.fetchUserProfile();\n    }\n\n    /**\n     * Get activity data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchActivity(): Promise<void> {\n        this.h5pActivity = await AddonModH5PActivity.instance.getH5PActivityById(this.courseId, this.h5pActivityId);\n    }\n\n    /**\n     * Get attempts.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchAttempt(): Promise<void> {\n        this.attempt = await AddonModH5PActivity.instance.getAttemptResults(this.h5pActivityId, this.attemptId);\n    }\n\n    /**\n     * Get user profile.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchUserProfile(): Promise<void> {\n        try {\n            this.user = await CoreUser.instance.getProfile(this.attempt.userid, this.courseId, true);\n        } catch (error) {\n            // Ignore errors.\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async refreshData(): Promise<void> {\n\n        try {\n            await Promise.all([\n                AddonModH5PActivity.instance.invalidateActivityData(this.courseId),\n                AddonModH5PActivity.instance.invalidateAttemptResults(this.h5pActivityId, this.attemptId),\n            ]);\n        } catch (error) {\n            // Ignore errors.\n        }\n\n        await this.fetchData();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/h5pactivity/pages/attempt-results/attempt-results.ts"],"sourceRoot":""}