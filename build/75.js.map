{"version":3,"sources":["../../src/addon/mod/wiki/pages/edit/edit.module.ts","../../src/addon/mod/wiki/pages/edit/edit.ts"],"names":[],"mappings":"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","file":"75.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { AddonModWikiEditPage } from './edit';\nimport { CoreEditorComponentsModule } from '@core/editor/components/components.module';\n\n@NgModule({\n    declarations: [\n        AddonModWikiEditPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CoreEditorComponentsModule,\n        IonicPageModule.forChild(AddonModWikiEditPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonModWikiEditPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/wiki/pages/edit/edit.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { FormControl, FormGroup, FormBuilder } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreSyncProvider } from '@providers/sync';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { AddonModWikiProvider } from '../../providers/wiki';\nimport { AddonModWikiOfflineProvider } from '../../providers/wiki-offline';\nimport { AddonModWikiSyncProvider, AddonModWikiSyncSubwikiResult } from '../../providers/wiki-sync';\n\n/**\n * Page that allows adding or editing a wiki page.\n */\n@IonicPage({ segment: 'addon-mod-wiki-edit' })\n@Component({\n    selector: 'page-addon-mod-wiki-edit',\n    templateUrl: 'edit.html',\n})\nexport class AddonModWikiEditPage implements OnInit, OnDestroy {\n\n    @ViewChild('editPageForm') formElement: ElementRef;\n\n    title: string; // Title to display.\n    pageForm: FormGroup; // The form group.\n    contentControl: FormControl; // The FormControl for the page content.\n    canEditTitle: boolean; // Whether title can be edited.\n    loaded: boolean; // Whether the data has been loaded.\n    component = AddonModWikiProvider.COMPONENT; // Component to link the files to.\n    componentId: number; // Component ID to link the files to.\n    wrongVersionLock: boolean; // Whether the page lock doesn't match the initial one.\n    editorExtraParams: {[name: string]: any} = {};\n\n    protected module: any; // Wiki module instance.\n    protected courseId: number; // Course the wiki belongs to.\n    protected subwikiId: number; // Subwiki ID the page belongs to.\n    protected initialSubwikiId: number; // Same as subwikiId, but it won't be updated, it'll always be the value received.\n    protected wikiId: number; // Wiki ID the page belongs to.\n    protected pageId: number; // The page ID (if editing a page).\n    protected section: string; // The section being edited.\n    protected groupId: number; // The group the subwiki belongs to.\n    protected userId: number; // The user the subwiki belongs to.\n    protected blockId: string; // ID to block the subwiki.\n    protected editing: boolean; // Whether the user is editing a page (true) or creating a new one (false).\n    protected editOffline: boolean; // Whether the user is editing an offline page.\n    protected subwikiFiles: any[]; // List of files of the subwiki.\n    protected originalContent: string; // The original page content.\n    protected version: number; // Page version.\n    protected renewLockInterval: any; // An interval to renew the lock every certain time.\n    protected forceLeave = false; // To allow leaving the page without checking for changes.\n    protected isDestroyed = false; // Whether the page has been destroyed.\n    protected pageParamsToLoad: any; // Params of the page to load when this page is closed.\n\n    constructor(navParams: NavParams, fb: FormBuilder, protected navCtrl: NavController, protected sitesProvider: CoreSitesProvider,\n            protected syncProvider: CoreSyncProvider, protected domUtils: CoreDomUtilsProvider,\n            protected translate: TranslateService, protected courseProvider: CoreCourseProvider,\n            protected eventsProvider: CoreEventsProvider, protected wikiProvider: AddonModWikiProvider,\n            protected wikiOffline: AddonModWikiOfflineProvider, protected wikiSync: AddonModWikiSyncProvider,\n            protected textUtils: CoreTextUtilsProvider, protected courseHelper: CoreCourseHelperProvider) {\n\n        this.module = navParams.get('module') || {};\n        this.courseId = navParams.get('courseId');\n        this.subwikiId = navParams.get('subwikiId');\n        this.wikiId = navParams.get('wikiId');\n        this.pageId = navParams.get('pageId');\n        this.section = navParams.get('section');\n        this.groupId = navParams.get('groupId');\n        this.userId = navParams.get('userId');\n\n        let pageTitle = navParams.get('pageTitle');\n        pageTitle = pageTitle ? pageTitle.replace(/\\+/g, ' ') : '';\n\n        this.initialSubwikiId = this.subwikiId;\n        this.componentId = this.module.id;\n        this.canEditTitle = !pageTitle;\n        this.title = pageTitle ? this.translate.instant('addon.mod_wiki.editingpage', {$a: pageTitle}) :\n                this.translate.instant('addon.mod_wiki.newpagehdr');\n        this.blockId = this.wikiSync.getSubwikiBlockId(this.subwikiId, this.wikiId, this.userId, this.groupId);\n\n        // Create the form group and its controls.\n        this.contentControl = fb.control('');\n        this.pageForm = fb.group({\n            title: pageTitle\n        });\n        this.pageForm.addControl('text', this.contentControl);\n\n        // Block the wiki so it cannot be synced.\n        this.syncProvider.blockOperation(this.component, this.blockId);\n\n        if (!this.module.id) {\n            this.editorExtraParams.type = 'wiki';\n        }\n\n        if (this.pageId) {\n            this.editorExtraParams.pageid = this.pageId;\n\n            if (this.section) {\n                this.editorExtraParams.section = this.section;\n            }\n        } else if (pageTitle) {\n            this.editorExtraParams.pagetitle = pageTitle;\n        }\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.fetchWikiPageData().then((success) => {\n            if (success && this.blockId && !this.isDestroyed) {\n                // Block the subwiki now that we have blockId for sure.\n                const newBlockId = this.wikiSync.getSubwikiBlockId(this.subwikiId, this.wikiId, this.userId, this.groupId);\n                if (newBlockId != this.blockId) {\n                    this.syncProvider.unblockOperation(this.component, this.blockId);\n                    this.blockId = newBlockId;\n                    this.syncProvider.blockOperation(this.component, this.blockId);\n                }\n            }\n        }).finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Convenience function to get wiki page data.\n     *\n     * @return Promise resolved with boolean: whether it was successful.\n     */\n    protected fetchWikiPageData(): Promise<boolean> {\n        let promise,\n            canEdit = false;\n\n        if (this.pageId) {\n            // Editing a page that already exists.\n            this.canEditTitle = false;\n            this.editing = true;\n            this.editOffline = false; // Cannot edit pages in offline.\n\n            // Get page contents to obtain title and editing permission\n            promise = this.wikiProvider.getPageContents(this.pageId).then((pageContents) => {\n                this.pageForm.controls.title.setValue(pageContents.title); // Set the title in the form group.\n                this.wikiId = pageContents.wikiid;\n                this.subwikiId = pageContents.subwikiid;\n                this.title = this.translate.instant('addon.mod_wiki.editingpage', {$a: pageContents.title});\n                this.groupId = pageContents.groupid;\n                this.userId = pageContents.userid;\n                canEdit = pageContents.caneditpage;\n\n                // Wait for sync to be over (if any).\n                return this.wikiSync.waitForSync(this.blockId);\n            }).then(() => {\n                // Get subwiki files, needed to replace URLs for rich text editor.\n                return this.wikiProvider.getSubwikiFiles(this.wikiId, this.groupId, this.userId);\n            }).then((files) => {\n                this.subwikiFiles = files;\n\n                // Get editable text of the page/section.\n                return this.wikiProvider.getPageForEditing(this.pageId, this.section);\n            }).then((editContents) => {\n                // Get the original page contents, treating file URLs if needed.\n                const content = this.textUtils.replacePluginfileUrls(editContents.content, this.subwikiFiles);\n\n                this.contentControl.setValue(content);\n                this.originalContent = content;\n                this.version = editContents.version;\n\n                if (canEdit) {\n                    // Renew the lock every certain time.\n                    this.renewLockInterval = setInterval(() => {\n                        this.renewLock();\n                    }, AddonModWikiProvider.RENEW_LOCK_TIME);\n                }\n            });\n        } else {\n            const pageTitle = this.pageForm.controls.title.value;\n\n            // New page. Wait for sync to be over (if any).\n            promise = this.wikiSync.waitForSync(this.blockId);\n\n            if (pageTitle) {\n                // Title is set, it could be editing an offline page or creating a new page using an edit link.\n                promise = promise.then((result: AddonModWikiSyncSubwikiResult) => {\n\n                    // First of all, verify if this page was created in the current sync.\n                    if (result) {\n                        const page = result.created.find((page) => {\n                                return page.title == pageTitle;\n                            });\n\n                        if (page && page.pageId > 0) {\n                            // Page was created, now it exists in the site.\n                            this.pageId = page.pageId;\n\n                            return this.fetchWikiPageData();\n                        }\n                    }\n\n                    // Check if there's already some offline data for this page.\n                    return this.wikiOffline.getNewPage(pageTitle, this.subwikiId, this.wikiId, this.userId, this.groupId);\n                }).then((page) => {\n                    // Load offline content.\n                    this.contentControl.setValue(page.cachedcontent);\n                    this.originalContent = page.cachedcontent;\n                    this.editOffline = true;\n                }).catch(() => {\n                    // No offline data found.\n                    this.editOffline = false;\n                });\n            } else {\n                this.editOffline = false;\n            }\n\n            promise.then(() => {\n                this.editing = false;\n                canEdit = !!this.blockId; // If no blockId, the user cannot edit the page.\n            });\n        }\n\n        return promise.then(() => {\n            return true;\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error getting wiki data.');\n\n            // Go back.\n            this.forceLeavePage();\n\n            return false;\n        }).finally(() => {\n            if (!canEdit) {\n                // Cannot edit, show alert and go back.\n                this.domUtils.showAlert(this.translate.instant('core.notice'),\n                        this.translate.instant('addon.mod_wiki.cannoteditpage'));\n                this.forceLeavePage();\n            }\n        });\n    }\n\n    /**\n     * Force leaving the page, without checking for changes.\n     */\n    protected forceLeavePage(): void {\n        this.forceLeave = true;\n        this.navCtrl.pop();\n    }\n\n    /**\n     * Navigate to a new offline page.\n     *\n     * @param title Page title.\n     */\n    protected goToNewOfflinePage(title: string): void {\n        if (this.courseId && (this.module.id || this.wikiId)) {\n            // We have enough data to navigate to the page.\n            if (!this.editOffline || this.previousViewPageIsDifferentOffline(title)) {\n                this.pageParamsToLoad = {\n                    module: this.module,\n                    courseId: this.courseId,\n                    pageId: null,\n                    pageTitle: title,\n                    wikiId: this.wikiId,\n                    subwikiId: this.subwikiId,\n                    userId: this.userId,\n                    groupId: this.groupId\n                };\n            }\n        } else {\n            this.domUtils.showAlert(this.translate.instant('core.success'), this.translate.instant('core.datastoredoffline'));\n        }\n\n        this.forceLeavePage();\n    }\n\n    /**\n     * Check if we need to navigate to a new state.\n     *\n     * @param title Page title.\n     * @return Promise resolved when done.\n     */\n    protected gotoPage(title: string): Promise<any> {\n        return this.retrieveModuleInfo(this.wikiId).then(() => {\n            let openPage = false;\n\n            // Not the firstpage.\n            if (this.initialSubwikiId) {\n                if (!this.editing && this.editOffline && this.previousViewPageIsDifferentOffline(title)) {\n                    // The user submitted an offline page that isn't loaded in the back view, open it.\n                    openPage = true;\n                } else if (!this.editOffline && this.previousViewIsDifferentPageOnline()) {\n                    // The user submitted an offline page that isn't loaded in the back view, open it.\n                    openPage = true;\n                }\n            }\n\n            if (openPage) {\n                // Setting that will do the app navigate to the page.\n                this.pageParamsToLoad = {\n                    module: this.module,\n                    courseId: this.courseId,\n                    pageId: this.pageId,\n                    pageTitle: title,\n                    wikiId: this.wikiId,\n                    subwikiId: this.subwikiId,\n                    userId: this.userId,\n                    groupId: this.groupId\n                };\n            }\n\n            this.forceLeavePage();\n        }).catch(() => {\n            // Go back if it fails.\n            this.forceLeavePage();\n        });\n    }\n\n    /**\n     * Check if data has changed.\n     *\n     * @return Whether data has changed.\n     */\n    protected hasDataChanged(): boolean {\n        const values = this.pageForm.value;\n\n        return !(this.originalContent == values.text || (!this.editing && !values.text && !values.title));\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @return Resolved if we can leave it, rejected if not.\n     */\n    async ionViewCanLeave(): Promise<void> {\n        if (this.forceLeave) {\n            return;\n        }\n\n        // Check if data has changed.\n        if (this.hasDataChanged()) {\n            await this.domUtils.showConfirm(this.translate.instant('core.confirmcanceledit'));\n        }\n\n        this.domUtils.triggerFormCancelledEvent(this.formElement, this.sitesProvider.getCurrentSiteId());\n    }\n\n    /**\n     * View left.\n     */\n    ionViewDidLeave(): void {\n        if (this.pageParamsToLoad) {\n            // Go to the page we've just created/edited.\n            this.navCtrl.push('AddonModWikiIndexPage', this.pageParamsToLoad);\n        }\n    }\n\n    /**\n     * In case we are NOT editing an offline page, check if the page loaded in previous view is different than this view.\n     *\n     * @return Whether previous view wiki page is different than current page.\n     */\n    protected previousViewIsDifferentPageOnline(): boolean {\n        // We cannot precisely detect when the state is the same but this is close to it.\n        const previousView = this.navCtrl.getPrevious();\n\n        return !this.editing || previousView.component.name != 'AddonModWikiIndexPage' ||\n                previousView.data.module.id != this.module.id || previousView.data.pageId != this.pageId;\n    }\n\n    /**\n     * In case we're editing an offline page, check if the page loaded in previous view is different than this view.\n     *\n     * @param title The current page title.\n     * @return Whether previous view wiki page is different than current page.\n     */\n    protected previousViewPageIsDifferentOffline(title: string): boolean {\n        // We cannot precisely detect when the state is the same but this is close to it.\n        const previousView = this.navCtrl.getPrevious();\n\n        if (previousView.component.name != 'AddonModWikiIndexPage' || previousView.data.module.id != this.module.id ||\n                previousView.data.wikiId != this.wikiId || previousView.data.pageTitle != title) {\n            return true;\n        }\n\n        // Check subwiki using subwiki or user and group.\n        const previousSubwikiId = parseInt(previousView.data.subwikiId, 10) || 0;\n        if (previousSubwikiId > 0 && this.subwikiId > 0) {\n            return previousSubwikiId != this.subwikiId;\n        }\n\n        const previousUserId = parseInt(previousView.data.userId, 10) || 0,\n            previousGroupId = parseInt(previousView.data.groupId, 10) || 0;\n\n        return this.userId != previousUserId || this.groupId != previousGroupId;\n    }\n\n    /**\n     * Save the data.\n     */\n    save(): void {\n        const values = this.pageForm.value,\n            title = values.title,\n            modal = this.domUtils.showModalLoading('core.sending', true);\n        let promise,\n            text = values.text;\n\n        text = this.textUtils.restorePluginfileUrls(text, this.subwikiFiles);\n        text = this.textUtils.formatHtmlLines(text);\n\n        if (this.editing) {\n            // Edit existing page.\n            promise = this.wikiProvider.editPage(this.pageId, text, this.section).then(() => {\n\n                this.domUtils.triggerFormSubmittedEvent(this.formElement, true, this.sitesProvider.getCurrentSiteId());\n\n                // Invalidate page since it changed.\n                return this.wikiProvider.invalidatePage(this.pageId).then(() => {\n                    return this.gotoPage(title);\n                });\n            });\n        } else {\n            // Creating a new page.\n            if (!title) {\n                // Title is mandatory, stop.\n                this.domUtils.showAlert(this.translate.instant('core.notice'),\n                        this.translate.instant('addon.mod_wiki.titleshouldnotbeempty'));\n                modal.dismiss();\n\n                return;\n            }\n\n            if (!this.editOffline) {\n                // Check if the user has an offline page with the same title.\n                promise = this.wikiOffline.getNewPage(title, this.subwikiId, this.wikiId, this.userId, this.groupId).then(() => {\n                    // There's a page with same name, reject with error message.\n                    return Promise.reject(this.translate.instant('addon.mod_wiki.pageexists'));\n                }, () => {\n                    // Not found, page can be sent.\n                });\n            } else {\n                promise = Promise.resolve();\n            }\n\n            promise = promise.then(() => {\n                // Try to send the page.\n                let wikiId = this.wikiId || (this.module && this.module.instance);\n\n                return this.wikiProvider.newPage(title, text, this.subwikiId, wikiId, this.userId, this.groupId).then((id) => {\n\n                    this.domUtils.triggerFormSubmittedEvent(this.formElement, id > 0, this.sitesProvider.getCurrentSiteId());\n\n                    if (id > 0) {\n                        this.eventsProvider.trigger(CoreEventsProvider.ACTIVITY_DATA_SENT, { module: 'wiki' });\n\n                        // Page was created, get its data and go to the page.\n                        this.pageId = id;\n\n                        return this.wikiProvider.getPageContents(this.pageId).then((pageContents) => {\n                            const promises = [];\n\n                            wikiId = parseInt(pageContents.wikiid, 10);\n                            if (!this.subwikiId) {\n                                // Subwiki was not created, invalidate subwikis as well.\n                                promises.push(this.wikiProvider.invalidateSubwikis(wikiId));\n                            }\n\n                            this.subwikiId = parseInt(pageContents.subwikiid, 10);\n                            this.userId = parseInt(pageContents.userid, 10);\n                            this.groupId = parseInt(pageContents.groupid, 10);\n\n                            // Invalidate subwiki pages since there are new.\n                            promises.push(this.wikiProvider.invalidateSubwikiPages(wikiId));\n\n                            return Promise.all(promises).then(() => {\n                                return this.gotoPage(title);\n                            });\n                        }).finally(() => {\n                            // Notify page created.\n                            this.eventsProvider.trigger(AddonModWikiProvider.PAGE_CREATED_EVENT, {\n                                pageId: this.pageId,\n                                subwikiId: this.subwikiId,\n                                pageTitle: title,\n                            }, this.sitesProvider.getCurrentSiteId());\n                        });\n                    } else {\n                        // Page stored in offline. Go to see the offline page.\n                        this.goToNewOfflinePage(title);\n                    }\n                });\n            });\n        }\n\n        return promise.catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error saving wiki data.');\n        }).finally(() => {\n            modal.dismiss();\n        });\n    }\n\n    /**\n     * Renew lock and control versions.\n     */\n    protected renewLock(): void {\n        this.wikiProvider.getPageForEditing(this.pageId, this.section, true).then((response) => {\n            if (response.version && this.version != response.version) {\n                this.wrongVersionLock = true;\n            }\n        });\n    }\n\n    /**\n     * Fetch module information to redirect when needed.\n     *\n     * @param wikiId Wiki ID.\n     * @return Promise resolved when done.\n     */\n    protected retrieveModuleInfo(wikiId: number): Promise<any> {\n        if (this.module.id && this.courseId) {\n            // We have enough data.\n            return Promise.resolve();\n        }\n\n        const promise = this.module.id ? Promise.resolve(this.module) :\n                this.courseProvider.getModuleBasicInfoByInstance(wikiId, 'wiki');\n\n        return promise.then((mod) => {\n            this.module = mod;\n            this.componentId = this.module.id;\n\n            if (!this.courseId && this.module.course) {\n                this.courseId = this.module.course;\n            } else if (!this.courseId) {\n                return this.courseHelper.getModuleCourseIdByInstance(wikiId, 'wiki').then((course) => {\n                    this.courseId = course;\n                });\n            }\n        });\n    }\n\n    /**\n     * Component being destroyed.\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n        clearInterval(this.renewLockInterval);\n\n        // Unblock the subwiki.\n        if (this.blockId) {\n            this.syncProvider.unblockOperation(this.component, this.blockId);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/wiki/pages/edit/edit.ts"],"sourceRoot":""}