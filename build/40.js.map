{"version":3,"sources":["../../src/core/login/pages/init/init.module.ts","../../src/core/login/pages/init/init.ts"],"names":[],"mappings":"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","file":"40.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { CoreLoginInitPage } from './init';\n\n@NgModule({\n    declarations: [\n        CoreLoginInitPage,\n    ],\n    imports: [\n        IonicPageModule.forChild(CoreLoginInitPage),\n    ],\n})\nexport class CoreLoginInitPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/login/pages/init/init.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreInitDelegate } from '@providers/init';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreConstants } from '../../../constants';\nimport { CoreLoginHelperProvider } from '../../providers/helper';\n\n/**\n * Page that displays a \"splash screen\" while the app is being initialized.\n */\n@IonicPage({ segment: 'core-login-init' })\n@Component({\n    selector: 'page-core-login-init',\n    templateUrl: 'init.html',\n})\nexport class CoreLoginInitPage {\n\n    constructor(private navCtrl: NavController, private appProvider: CoreAppProvider, private initDelegate: CoreInitDelegate,\n        private sitesProvider: CoreSitesProvider, private loginHelper: CoreLoginHelperProvider,\n        private splashScreen: SplashScreen) { }\n\n    /**\n     * View loaded.\n     */\n    ionViewDidLoad(): void {\n        // Wait for the app to be ready.\n        this.initDelegate.ready().then(() => {\n            // Check if there was a pending redirect.\n            const redirectData = this.appProvider.getRedirect();\n            if (redirectData.siteId) {\n                // Unset redirect data.\n                this.appProvider.storeRedirect('', '', '');\n\n                // Only accept the redirect if it was stored less than 20 seconds ago.\n                if (Date.now() - redirectData.timemodified < 20000) {\n                    if (redirectData.siteId != CoreConstants.NO_SITE_ID) {\n                        // The redirect is pointing to a site, load it.\n                        return this.sitesProvider.loadSite(redirectData.siteId, redirectData.page, redirectData.params)\n                                .then((loggedIn) => {\n\n                            if (loggedIn) {\n                                return this.loginHelper.goToSiteInitialPage(this.navCtrl, redirectData.page, redirectData.params,\n                                        { animate: false });\n                            }\n                        }).catch(() => {\n                            // Site doesn't exist.\n                            return this.loadPage();\n                        });\n                    } else {\n                        // No site to load, open the page.\n                        return this.loginHelper.goToNoSitePage(this.navCtrl, redirectData.page, redirectData.params);\n                    }\n                }\n            }\n\n            return this.loadPage();\n        }).then(() => {\n            // If we hide the splash screen now, the init view is still seen for an instant. Wait a bit to make sure it isn't seen.\n            setTimeout(() => {\n                this.splashScreen.hide();\n            }, 100);\n        });\n    }\n\n    /**\n     * Load the right page.\n     *\n     * @return Promise resolved when done.\n     */\n    protected loadPage(): Promise<any> {\n        if (this.sitesProvider.isLoggedIn()) {\n            if (this.loginHelper.isSiteLoggedOut()) {\n                return this.sitesProvider.logout().then(() => {\n                    return this.loadPage();\n                });\n            }\n\n            return this.loginHelper.goToSiteInitialPage();\n        }\n\n        return this.navCtrl.setRoot('CoreLoginSitesPage');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/login/pages/init/init.ts"],"sourceRoot":""}