{"version":3,"sources":["../../src/core/settings/pages/general/general.module.ts","../../src/core/settings/pages/general/general.ts"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;;;AAEQ;AACO;AACM;AACF;AACiB;AACA;AAarE;IAAA;IAA4C,CAAC;IAAhC,6BAA6B;QAXzC,uEAAQ,CAAC;YACN,YAAY,EAAE;gBACV,yEAAuB;aAC1B;YACD,OAAO,EAAE;gBACL,2FAAoB;gBACpB,2FAAoB;gBACpB,sEAAe,CAAC,QAAQ,CAAC,yEAAuB,CAAC;gBACjD,4EAAe,CAAC,QAAQ,EAAE;aAC7B;SACJ,CAAC;OACW,6BAA6B,CAAG;IAAD,oCAAC;CAAA;AAAH;;;;;;;;;AChC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;;;;;;AAEoB;AACb;AACQ;AACO;AACJ;AACI;AACJ;AACS;AACwC;AAClC;AACN;AAE5D;;GAEG;AAMH;IAeI,iCAAsB,cAAkC,EAChD,YAA8B,EACpB,cAAkC,EAClC,YAA8B,EAC9B,QAA8B,EAC9B,yBAAwD,EACxD,cAAkC;QANpD,iBAoFC;QApFqB,mBAAc,GAAd,cAAc,CAAoB;QAEtC,mBAAc,GAAd,cAAc,CAAoB;QAClC,iBAAY,GAAZ,YAAY,CAAkB;QAC9B,aAAQ,GAAR,QAAQ,CAAsB;QAC9B,8BAAyB,GAAzB,yBAAyB,CAA+B;QACxD,mBAAc,GAAd,cAAc,CAAoB;QAnBpD,cAAS,GAAG,EAAE,CAAC;QAEf,cAAS,GAAG,EAAE,CAAC;QAOf,iBAAY,GAAG,EAAE,CAAC;QAYd,+BAA+B;QAC/B,IAAM,SAAS,GAAG,6EAAmB,CAAC,SAAS,CAAC;QAChD,GAAG,CAAC,CAAC,IAAM,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAChB,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC;aACxB,CAAC,CAAC;QACP,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,6EAAmB,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC,2BAA2B,EAAE,CAAC;YAE7E,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAChC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC/C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,kBAAkB,GAAG,OAAO,CAAC;gBAEjC,EAAE,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,8BAA8B,CAAC,CAAC,OAAO;oBACzC,MAAM,CAAC,UAAU,CAAC,+BAA+B,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC7E,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC/B,kBAAkB,GAAG,MAAM,CAAC;gBAChC,CAAC;gBACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAE/B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,sEAAa,CAAC,qBAAqB,EAAE,kBAAkB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;oBACzF,KAAI,CAAC,cAAc,GAAG,MAAM,CAAC;gBACjC,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC;QAED,qBAAqB;QACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACrB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,YAAY,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,UAAC,eAAe;YACnD,KAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,sEAAa,CAAC,kBAAkB,EAAE,6EAAmB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ;YAClH,KAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;YACjC,KAAI,CAAC,SAAS,GAAG,6EAAmB,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,IAAI;gBACrD,MAAM,CAAC;oBACH,IAAI,EAAE,IAAI;oBACV,4EAA4E;oBAC5E,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC;oBACxC,QAAQ,EAAE,IAAI,KAAK,KAAI,CAAC,gBAAgB;iBAC3C,CAAC;YACN,CAAC,CAAC,CAAC;YACH,6GAA6G;YAC7G,UAAU,CAAC;gBACP,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBACf,KAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;gBACtC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,yBAAyB,EAAE,CAAC;QAC9D,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,sEAAa,CAAC,yBAAyB,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,qBAAqB;gBAC9F,KAAI,CAAC,cAAc,GAAG,CAAC,CAAC,qBAAqB,CAAC;YAClD,CAAC,CAAC,CAAC;QACP,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,sEAAa,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,YAAY;YACnF,KAAI,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY,CAAC;QACvC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,GAAG,6EAAmB,CAAC,eAAe,CAAC;QAC9D,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,sEAAa,CAAC,0BAA0B,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO;gBACjF,KAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,OAAO,CAAC;YACtC,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAKD;;OAEG;IACH,iDAAe,GAAf;QAAA,iBAIC;QAHG,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC;YACnE,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,6EAAkB,CAAC,gBAAgB,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC;QAC5F,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACH,iDAAe,GAAf;QAAA,iBASC;QARG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,QAAQ;YACzC,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,KAAK,KAAI,CAAC,gBAAgB,CAAC;YAE5D,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACvD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,sEAAa,CAAC,kBAAkB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACrF,CAAC;IAED;;OAEG;IACH,oDAAkB,GAAlB;QACI,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACxD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,sEAAa,CAAC,qBAAqB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACtF,CAAC;IAED;;OAEG;IACH,uDAAqB,GAArB;QACI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,sEAAa,CAAC,yBAAyB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClG,CAAC;IAED;;OAEG;IACH,qDAAmB,GAAnB;QACI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,sEAAa,CAAC,sBAAsB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzF,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACrD,CAAC;IAED;;OAEG;IACH,yDAAuB,GAAvB;QAAA,iBAIC;QAHG,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC;YACvE,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,sEAAa,CAAC,0BAA0B,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrG,CAAC,CAAC,CAAC;IACP,CAAC;IAvDD;QADC,yEAAS,CAAC,8DAAO,CAAC;kCACF,8DAAO;4DAAC;IAtGhB,uBAAuB;QAJnC,wEAAS,CAAC;YACP,QAAQ,EAAE,4BAA4B;WACX;SAC9B,CAAC;sFAgB0D;YAClC,6EAAgB;YACJ,0EAAkB;YACpB,kFAAgB;YACpB,0HAAoB;YACH,gFAA6B;YACxC,kBAAkB;OArB3C,uBAAuB,CA8JnC;IAAD,CAAC;AAAA;SA9JY,uBAAuB,G","file":"28.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreSettingsGeneralPage } from './general';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\n\n@NgModule({\n    declarations: [\n        CoreSettingsGeneralPage\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        IonicPageModule.forChild(CoreSettingsGeneralPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class CoreSettingsGeneralPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/settings/pages/general/general.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild } from '@angular/core';\nimport { IonicPage, Segment } from 'ionic-angular';\nimport { CoreConstants } from '@core/constants';\nimport { CoreConfigProvider } from '@providers/config';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreLangProvider } from '@providers/lang';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CorePushNotificationsProvider } from '@core/pushnotifications/providers/pushnotifications';\nimport { CoreConfigConstants } from '../../../../configconstants';\nimport { CoreSettingsHelper } from '../../providers/helper';\n\n/**\n * Page that displays the general settings.\n */\n@IonicPage({segment: 'core-settings-general'})\n@Component({\n    selector: 'page-core-settings-general',\n    templateUrl: 'general.html',\n})\nexport class CoreSettingsGeneralPage {\n\n    languages = [];\n    selectedLanguage: string;\n    fontSizes = [];\n    selectedFontSize: string;\n    rteSupported: boolean;\n    richTextEditor: boolean;\n    debugDisplay: boolean;\n    analyticsSupported: boolean;\n    analyticsEnabled: boolean;\n    colorSchemes = [];\n    selectedScheme: string;\n    colorSchemeDisabled: boolean;\n\n    constructor(protected configProvider: CoreConfigProvider,\n            fileProvider: CoreFileProvider,\n            protected eventsProvider: CoreEventsProvider,\n            protected langProvider: CoreLangProvider,\n            protected domUtils: CoreDomUtilsProvider,\n            protected pushNotificationsProvider: CorePushNotificationsProvider,\n            protected settingsHelper: CoreSettingsHelper) {\n\n        // Get the supported languages.\n        const languages = CoreConfigConstants.languages;\n        for (const code in languages) {\n            this.languages.push({\n                code: code,\n                name: languages[code]\n            });\n        }\n\n        if (!CoreConfigConstants.forceColorScheme) {\n            this.colorSchemeDisabled = this.settingsHelper.isColorSchemeDisabledInSite();\n\n            if (this.colorSchemeDisabled) {\n                this.colorSchemes.push('light');\n                this.selectedScheme = this.colorSchemes[0];\n            } else {\n                let defaultColorScheme = 'light';\n\n                if (window.matchMedia('(prefers-color-scheme: dark)').matches ||\n                                    window.matchMedia('(prefers-color-scheme: light)').matches) {\n                    this.colorSchemes.push('auto');\n                    defaultColorScheme = 'auto';\n                }\n                this.colorSchemes.push('light');\n                this.colorSchemes.push('dark');\n\n                this.configProvider.get(CoreConstants.SETTINGS_COLOR_SCHEME, defaultColorScheme).then((scheme) => {\n                    this.selectedScheme = scheme;\n                });\n            }\n        }\n\n        // Sort them by name.\n        this.languages.sort((a, b) => {\n            return a.name.localeCompare(b.name);\n        });\n\n        langProvider.getCurrentLanguage().then((currentLanguage) => {\n            this.selectedLanguage = currentLanguage;\n        });\n\n        this.configProvider.get(CoreConstants.SETTINGS_FONT_SIZE, CoreConfigConstants.font_sizes[0].toString()).then((fontSize) => {\n            this.selectedFontSize = fontSize;\n            this.fontSizes = CoreConfigConstants.font_sizes.map((size) => {\n                return {\n                    size: size,\n                    // Absolute pixel size based on 1.4rem body text when this size is selected.\n                    style: Math.round(size * 16 * 1.4 / 100),\n                    selected: size === this.selectedFontSize\n                };\n            });\n            // Workaround for segment control bug https://github.com/ionic-team/ionic/issues/6923, fixed in Ionic 4 only.\n            setTimeout(() => {\n                if (this.segment) {\n                    this.segment.ngAfterContentInit();\n                }\n            });\n        });\n\n        this.rteSupported = this.domUtils.isRichTextEditorSupported();\n        if (this.rteSupported) {\n            this.configProvider.get(CoreConstants.SETTINGS_RICH_TEXT_EDITOR, true).then((richTextEditorEnabled) => {\n                this.richTextEditor = !!richTextEditorEnabled;\n            });\n        }\n\n        this.configProvider.get(CoreConstants.SETTINGS_DEBUG_DISPLAY, false).then((debugDisplay) => {\n            this.debugDisplay = !!debugDisplay;\n        });\n\n        this.analyticsSupported = CoreConfigConstants.enableanalytics;\n        if (this.analyticsSupported) {\n            this.configProvider.get(CoreConstants.SETTINGS_ANALYTICS_ENABLED, true).then((enabled) => {\n                this.analyticsEnabled = !!enabled;\n            });\n        }\n    }\n\n    @ViewChild(Segment)\n    private segment: Segment;\n\n    /**\n     * Called when a new language is selected.\n     */\n    languageChanged(): void {\n        this.langProvider.changeCurrentLanguage(this.selectedLanguage).finally(() => {\n            this.eventsProvider.trigger(CoreEventsProvider.LANGUAGE_CHANGED, this.selectedLanguage);\n        });\n    }\n\n    /**\n     * Called when a new font size is selected.\n     */\n    fontSizeChanged(): void {\n        this.fontSizes = this.fontSizes.map((fontSize) => {\n            fontSize.selected = fontSize.size === this.selectedFontSize;\n\n            return fontSize;\n        });\n\n        this.settingsHelper.setFontSize(this.selectedFontSize);\n        this.configProvider.set(CoreConstants.SETTINGS_FONT_SIZE, this.selectedFontSize);\n    }\n\n    /**\n     * Called when a new color scheme is selected.\n     */\n    colorSchemeChanged(): void {\n        this.settingsHelper.setColorScheme(this.selectedScheme);\n        this.configProvider.set(CoreConstants.SETTINGS_COLOR_SCHEME, this.selectedScheme);\n    }\n\n    /**\n     * Called when the rich text editor is enabled or disabled.\n     */\n    richTextEditorChanged(): void {\n        this.configProvider.set(CoreConstants.SETTINGS_RICH_TEXT_EDITOR, this.richTextEditor ? 1 : 0);\n    }\n\n    /**\n     * Called when the debug display setting is enabled or disabled.\n     */\n    debugDisplayChanged(): void {\n        this.configProvider.set(CoreConstants.SETTINGS_DEBUG_DISPLAY, this.debugDisplay ? 1 : 0);\n        this.domUtils.setDebugDisplay(this.debugDisplay);\n    }\n\n    /**\n     * Called when the analytics setting is enabled or disabled.\n     */\n    analyticsEnabledChanged(): void {\n        this.pushNotificationsProvider.enableAnalytics(this.analyticsEnabled).then(() => {\n            this.configProvider.set(CoreConstants.SETTINGS_ANALYTICS_ENABLED, this.analyticsEnabled ? 1 : 0);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/settings/pages/general/general.ts"],"sourceRoot":""}