{"version":3,"sources":["../../src/core/courses/pages/available-courses/available-courses.module.ts","../../src/core/courses/pages/available-courses/available-courses.ts"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;;;AAEQ;AACO;AACM;AACgB;AACD;AACA;AACY;AAcjF;IAAA;IAAoD,CAAC;IAAxC,qCAAqC;QAZjD,uEAAQ,CAAC;YACN,YAAY,EAAE;gBACV,2FAA+B;aAClC;YACD,OAAO,EAAE;gBACL,2FAAoB;gBACpB,2FAAoB;gBACpB,kGAA2B;gBAC3B,sEAAe,CAAC,QAAQ,CAAC,2FAA+B,CAAC;gBACzD,4EAAe,CAAC,QAAQ,EAAE;aAC7B;SACJ,CAAC;OACW,qCAAqC,CAAG;IAAD,4CAAC;CAAA;AAAH;;;;;;;;;AClClD;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;;;;;;AAES;AAEW;AACO;AACE;AAE9D;;GAEG;AAMH;IAII,yCAAoB,eAAoC,EAAU,QAA8B,EACpF,aAAgC;QADxB,oBAAe,GAAf,eAAe,CAAqB;QAAU,aAAQ,GAAR,QAAQ,CAAsB;QACpF,kBAAa,GAAb,aAAa,CAAmB;QAJ5C,YAAO,GAAU,EAAE,CAAC;IAI4B,CAAC;IAEjD;;OAEG;IACH,wDAAc,GAAd;QAAA,iBAIC;QAHG,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC;YACvB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACO,qDAAW,GAArB;QAAA,iBAUC;QATG,IAAM,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,aAAa,EAAE,CAAC;QAE9E,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,UAAC,OAAO;YACzD,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAC,MAAM;gBACjC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,iBAAiB,CAAC;YAC1C,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YACX,KAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,KAAK,EAAE,+BAA+B,EAAE,IAAI,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,wDAAc,GAAd,UAAe,SAAc;QAA7B,iBAWC;QAVG,IAAM,QAAQ,GAAG,EAAE,CAAC;QAEpB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,qBAAqB,EAAE,CAAC,CAAC;QAC5D,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,wBAAwB,EAAE,CAAC,CAAC;QAE/D,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC;YAC1B,KAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC;gBACvB,SAAS,CAAC,QAAQ,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAjDQ,+BAA+B;QAJ3C,wEAAS,CAAC;YACP,QAAQ,EAAE,qCAAqC;WACV;SACxC,CAAC;yFAKkG;YACrE,iBAAiB;OALnC,+BAA+B,CAkD3C;IAAD,CAAC;AAAA;SAlDY,+BAA+B,K","file":"56.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreCoursesAvailableCoursesPage } from './available-courses';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CoreCoursesComponentsModule } from '../../components/components.module';\n\n@NgModule({\n    declarations: [\n        CoreCoursesAvailableCoursesPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CoreCoursesComponentsModule,\n        IonicPageModule.forChild(CoreCoursesAvailableCoursesPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class CoreCoursesAvailableCoursesPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/pages/available-courses/available-courses.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { IonicPage } from 'ionic-angular';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreCoursesProvider } from '../../providers/courses';\n\n/**\n * Page that displays available courses in current site.\n */\n@IonicPage({ segment: 'core-courses-available-courses' })\n@Component({\n    selector: 'page-core-courses-available-courses',\n    templateUrl: 'available-courses.html',\n})\nexport class CoreCoursesAvailableCoursesPage {\n    courses: any[] = [];\n    coursesLoaded: boolean;\n\n    constructor(private coursesProvider: CoreCoursesProvider, private domUtils: CoreDomUtilsProvider,\n        private sitesProvider: CoreSitesProvider) { }\n\n    /**\n     * View loaded.\n     */\n    ionViewDidLoad(): void {\n        this.loadCourses().finally(() => {\n            this.coursesLoaded = true;\n        });\n    }\n\n    /**\n     * Load the courses.\n     *\n     * @return Promise resolved when done.\n     */\n    protected loadCourses(): Promise<any> {\n        const frontpageCourseId = this.sitesProvider.getCurrentSite().getSiteHomeId();\n\n        return this.coursesProvider.getCoursesByField().then((courses) => {\n            this.courses = courses.filter((course) => {\n                return course.id != frontpageCourseId;\n            });\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'core.courses.errorloadcourses', true);\n        });\n    }\n\n    /**\n     * Refresh the courses.\n     *\n     * @param refresher Refresher.\n     */\n    refreshCourses(refresher: any): void {\n        const promises = [];\n\n        promises.push(this.coursesProvider.invalidateUserCourses());\n        promises.push(this.coursesProvider.invalidateCoursesByField());\n\n        Promise.all(promises).finally(() => {\n            this.loadCourses().finally(() => {\n                refresher.complete();\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/pages/available-courses/available-courses.ts"],"sourceRoot":""}