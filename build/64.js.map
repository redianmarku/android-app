{"version":3,"sources":["../../src/addon/storagemanager/pages/courses-storage/courses-storage.module.ts","../../src/addon/storagemanager/pages/courses-storage/courses-storage.ts"],"names":[],"mappings":"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","file":"64.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { AddonStorageManagerCoursesStoragePage } from './courses-storage';\n\n@NgModule({\n    declarations: [\n        AddonStorageManagerCoursesStoragePage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule,\n        IonicPageModule.forChild(AddonStorageManagerCoursesStoragePage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonStorageManagerCoursesStoragePageModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/storagemanager/pages/courses-storage/courses-storage.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { IonicPage } from 'ionic-angular';\nimport { CoreCourse, CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreCourses } from '@core/courses/providers/courses';\nimport { CoreArray } from '@singletons/array';\nimport { CoreCourseModulePrefetch } from '@core/course/providers/module-prefetch-delegate';\nimport { CoreConstants } from '@core/constants';\nimport { CoreDomUtils } from '@providers/utils/dom';\nimport { Translate } from '@singletons/core.singletons';\nimport { CoreEvents, CoreEventsProvider, CoreEventObserver } from '@providers/events';\nimport { CoreCourseHelper } from '@core/course/providers/helper';\n\n/**\n * Core course data.\n */\ninterface Course {\n    id: number;\n    displayname: string;\n}\n\n/**\n * Downloaded course data.\n */\ninterface DownloadedCourse extends Course {\n    totalSize: number;\n    isDownloading: boolean;\n}\n\n/**\n * Page that displays downloaded courses and allows the user to delete them.\n */\n@IonicPage({ segment: 'addon-storagemanager-courses-storage' })\n@Component({\n    selector: 'page-addon-storagemanager-courses-storage',\n    templateUrl: 'courses-storage.html',\n})\nexport class AddonStorageManagerCoursesStoragePage {\n\n    userCourses: Course[] = [];\n    downloadedCourses: DownloadedCourse[] = [];\n    completelyDownloadedCourses: DownloadedCourse[] = [];\n    totalSize = 0;\n    loaded = false;\n\n    courseStatusObserver: CoreEventObserver;\n\n    /**\n     * View loaded.\n     */\n    async ionViewDidLoad(): Promise<void> {\n        this.userCourses = await CoreCourses.instance.getUserCourses();\n        this.courseStatusObserver = CoreEvents.instance.on(\n            CoreEventsProvider.COURSE_STATUS_CHANGED,\n            ({ courseId, status }) => this.onCourseUpdated(courseId, status),\n        );\n\n        const downloadedCourseIds = await CoreCourse.instance.getDownloadedCourseIds();\n        const downloadedCourses = await Promise.all(\n            this.userCourses\n                .filter((course) => downloadedCourseIds.indexOf(course.id) !== -1)\n                .map((course) => this.getDownloadedCourse(course)),\n        );\n\n        this.setDownloadedCourses(downloadedCourses);\n\n        this.loaded = true;\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        this.courseStatusObserver && this.courseStatusObserver.off();\n    }\n\n    /**\n     * Delete all courses that have been downloaded.\n     */\n    async deleteCompletelyDownloadedCourses(): Promise<void> {\n        try {\n            await CoreDomUtils.instance.showDeleteConfirm('core.course.confirmdeletemodulefiles');\n        } catch (error) {\n            if (!error.coreCanceled) {\n                throw error;\n            }\n\n            return;\n        }\n\n        const modal = CoreDomUtils.instance.showModalLoading();\n        const deletedCourseIds = this.completelyDownloadedCourses.map((course) => course.id);\n\n        try {\n            await Promise.all(deletedCourseIds.map((courseId) => CoreCourseHelper.instance.deleteCourseFiles(courseId)));\n\n            this.setDownloadedCourses(this.downloadedCourses.filter((course) => !CoreArray.contains(deletedCourseIds, course.id)));\n        } catch (error) {\n            CoreDomUtils.instance.showErrorModalDefault(error, Translate.instance.instant('core.errordeletefile'));\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Delete course.\n     *\n     * @param course Course to delete.\n     */\n    async deleteCourse(course: DownloadedCourse): Promise<void> {\n        try {\n            await CoreDomUtils.instance.showDeleteConfirm('core.course.confirmdeletemodulefiles');\n        } catch (error) {\n            if (!error.coreCanceled) {\n                throw error;\n            }\n\n            return;\n        }\n\n        const modal = CoreDomUtils.instance.showModalLoading();\n\n        try {\n            await CoreCourseHelper.instance.deleteCourseFiles(course.id);\n\n            this.setDownloadedCourses(CoreArray.withoutItem(this.downloadedCourses, course));\n        } catch (error) {\n            CoreDomUtils.instance.showErrorModalDefault(error, Translate.instance.instant('core.errordeletefile'));\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Handle course updated event.\n     *\n     * @param courseId Updated course id.\n     */\n    private async onCourseUpdated(courseId: number, status: string): Promise<void> {\n        if (courseId == CoreCourseProvider.ALL_COURSES_CLEARED) {\n            this.setDownloadedCourses([]);\n\n            return;\n        }\n\n        const course = this.downloadedCourses.find((course) => course.id === courseId);\n\n        if (!course) {\n            return;\n        }\n\n        course.isDownloading = status === CoreConstants.DOWNLOADING;\n        course.totalSize = await this.calculateDownloadedCourseSize(course.id);\n\n        this.setDownloadedCourses(this.downloadedCourses);\n    }\n\n    /**\n     * Set downloaded courses data.\n     *\n     * @param courses Courses info.\n     */\n    private setDownloadedCourses(courses: DownloadedCourse[]): void {\n        this.downloadedCourses = courses;\n        this.completelyDownloadedCourses = courses.filter((course) => !course.isDownloading);\n        this.totalSize = this.downloadedCourses.reduce((totalSize, course) => totalSize + course.totalSize, 0);\n    }\n\n    /**\n     * Get downloaded course data.\n     *\n     * @param course Course.\n     * @return Course info.\n     */\n    private async getDownloadedCourse(course: Course): Promise<DownloadedCourse> {\n        const totalSize = await this.calculateDownloadedCourseSize(course.id);\n        const status = await CoreCourse.instance.getCourseStatus(course.id);\n\n        return {\n            ...course,\n            totalSize,\n            isDownloading: status === CoreConstants.DOWNLOADING,\n        };\n    }\n\n    /**\n     * Calculate the size of a downloaded course.\n     *\n     * @param courseId Downloaded course id.\n     * @return Promise to be resolved with the course size.\n     */\n    private async calculateDownloadedCourseSize(courseId: number): Promise<number> {\n        const sections = await CoreCourse.instance.getSections(courseId);\n        const modules = CoreArray.flatten(sections.map((section) => section.modules));\n        const promisedModuleSizes = modules.map(async (module) => {\n            const size = await CoreCourseModulePrefetch.instance.getModuleDownloadedSize(module, courseId);\n\n            return isNaN(size) ? 0 : size;\n        });\n        const moduleSizes = await Promise.all(promisedModuleSizes);\n\n        return moduleSizes.reduce((totalSize, moduleSize) => totalSize + moduleSize, 0);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/storagemanager/pages/courses-storage/courses-storage.ts"],"sourceRoot":""}