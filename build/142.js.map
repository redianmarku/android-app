{"version":3,"sources":["../../src/addon/calendar/pages/list/list.module.ts","../../src/addon/calendar/pages/list/list.ts"],"names":[],"mappings":"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","file":"142.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { AddonCalendarListPage } from './list';\n\n@NgModule({\n    declarations: [\n        AddonCalendarListPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule,\n        IonicPageModule.forChild(AddonCalendarListPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonCalendarListPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/calendar/pages/list/list.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild, OnDestroy, NgZone } from '@angular/core';\nimport { IonicPage, Content, NavParams, NavController, PopoverController } from 'ionic-angular';\nimport { AddonCalendarProvider, AddonCalendarGetEventsEvent } from '../../providers/calendar';\nimport { AddonCalendarOfflineProvider } from '../../providers/calendar-offline';\nimport { AddonCalendarHelperProvider, AddonCalendarFilter } from '../../providers/helper';\nimport { AddonCalendarSyncProvider } from '../../providers/calendar-sync';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\nimport { CoreCoursesHelperProvider } from '@core/courses/providers/helper';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreLocalNotificationsProvider } from '@providers/local-notifications';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport * as moment from 'moment';\nimport { Network } from '@ionic-native/network';\nimport { CoreConstants } from '@core/constants';\nimport { AddonCalendarFilterPopoverComponent } from '../../components/filter/filter';\n\n/**\n * Page that displays the list of calendar events.\n */\n@IonicPage({ segment: 'addon-calendar-list' })\n@Component({\n    selector: 'page-addon-calendar-list',\n    templateUrl: 'list.html',\n})\nexport class AddonCalendarListPage implements OnDestroy {\n    @ViewChild(Content) content: Content;\n    @ViewChild(CoreSplitViewComponent) splitviewCtrl: CoreSplitViewComponent;\n\n    protected initialTime = 0;\n    protected daysLoaded = 0;\n    protected emptyEventsTimes = 0; // Variable to identify consecutive calls returning 0 events.\n    protected categoriesRetrieved = false;\n    protected getCategories = false;\n    protected categories = {};\n    protected siteHomeId: number;\n    protected eventId: number;\n    protected currentSiteId: string;\n    protected onlineEvents: AddonCalendarGetEventsEvent[] = [];\n    protected offlineEvents = [];\n    protected deletedEvents = [];\n\n    // Observers.\n    protected obsDefaultTimeChange: any;\n    protected newEventObserver: any;\n    protected discardedObserver: any;\n    protected editEventObserver: any;\n    protected deleteEventObserver: any;\n    protected undeleteEventObserver: any;\n    protected syncObserver: any;\n    protected manualSyncObserver: any;\n    protected onlineObserver: any;\n    protected filterChangedObserver: any;\n\n    courses: any[];\n    eventsLoaded = false;\n    events = []; // Events (both online and offline).\n    notificationsEnabled = false;\n    filteredEvents: AddonCalendarGetEventsEvent[] = [];\n    canLoadMore = false;\n    loadMoreError = false;\n    canCreate = false;\n    hasOffline = false;\n    isOnline = false;\n    syncIcon: string; // Sync icon.\n    filter: AddonCalendarFilter = {\n        filtered: false,\n        courseId: null,\n        categoryId: null,\n        course: false,\n        group: false,\n        site: false,\n        user: false,\n        category: false\n    };\n\n    constructor(\n            navParams: NavParams,\n            sitesProvider: CoreSitesProvider,\n            network: Network,\n            zone: NgZone,\n            localNotificationsProvider: CoreLocalNotificationsProvider,\n            private calendarProvider: AddonCalendarProvider,\n            private domUtils: CoreDomUtilsProvider,\n            private coursesProvider: CoreCoursesProvider,\n            private utils: CoreUtilsProvider,\n            private calendarHelper: AddonCalendarHelperProvider,\n            private coursesHelper: CoreCoursesHelperProvider,\n            private eventsProvider: CoreEventsProvider,\n            private navCtrl: NavController,\n            private appProvider: CoreAppProvider,\n            private calendarOffline: AddonCalendarOfflineProvider,\n            private calendarSync: AddonCalendarSyncProvider,\n            private timeUtils: CoreTimeUtilsProvider,\n            private popoverCtrl: PopoverController) {\n\n        this.siteHomeId = sitesProvider.getCurrentSite().getSiteHomeId();\n        this.notificationsEnabled = localNotificationsProvider.isAvailable();\n        this.currentSiteId = sitesProvider.getCurrentSiteId();\n\n        if (this.notificationsEnabled) {\n            // Re-schedule events if default time changes.\n            this.obsDefaultTimeChange = eventsProvider.on(AddonCalendarProvider.DEFAULT_NOTIFICATION_TIME_CHANGED, () => {\n                calendarProvider.scheduleEventsNotifications(this.onlineEvents);\n            }, this.currentSiteId);\n        }\n\n        this.eventId = navParams.get('eventId') || false;\n\n        AddonCalendarProvider.ALL_TYPES.forEach((name) => {\n            this.filter[name] = true;\n        });\n        this.filter['courseId'] = navParams.get('courseId');\n\n        // Listen for events added. When an event is added, reload the data.\n        this.newEventObserver = eventsProvider.on(AddonCalendarProvider.NEW_EVENT_EVENT, (data) => {\n            if (data && data.event) {\n                if (this.splitviewCtrl.isOn()) {\n                    // Discussion added, clear details page.\n                    this.splitviewCtrl.emptyDetails();\n                }\n\n                this.eventsLoaded = false;\n                this.refreshEvents(true, false).finally(() => {\n\n                    // In tablet mode try to open the event (only if it's an online event).\n                    if (this.splitviewCtrl.isOn() && data.event.id > 0) {\n                        this.gotoEvent(data.event.id);\n                    }\n                });\n            }\n        }, this.currentSiteId);\n\n        // Listen for new event discarded event. When it does, reload the data.\n        this.discardedObserver = eventsProvider.on(AddonCalendarProvider.NEW_EVENT_DISCARDED_EVENT, () => {\n            if (this.splitviewCtrl.isOn()) {\n                // Discussion added, clear details page.\n                this.splitviewCtrl.emptyDetails();\n            }\n\n            this.eventsLoaded = false;\n            this.refreshEvents(true, false);\n        }, this.currentSiteId);\n\n        // Listen for events edited. When an event is edited, reload the data.\n        this.editEventObserver = eventsProvider.on(AddonCalendarProvider.EDIT_EVENT_EVENT, (data) => {\n            if (data && data.event) {\n                this.eventsLoaded = false;\n                this.refreshEvents(true, false);\n            }\n        }, this.currentSiteId);\n\n        // Refresh data if calendar events are synchronized automatically.\n        this.syncObserver = eventsProvider.on(AddonCalendarSyncProvider.AUTO_SYNCED, (data) => {\n            this.eventsLoaded = false;\n            this.refreshEvents();\n\n            if (this.splitviewCtrl.isOn() && this.eventId && data && data.deleted && data.deleted.indexOf(this.eventId) != -1) {\n                // Current selected event was deleted. Clear details.\n                this.splitviewCtrl.emptyDetails();\n            }\n        }, this.currentSiteId);\n\n        // Refresh data if calendar events are synchronized manually but not by this page.\n        this.manualSyncObserver = eventsProvider.on(AddonCalendarSyncProvider.MANUAL_SYNCED, (data) => {\n            if (data && data.source != 'list') {\n                this.eventsLoaded = false;\n                this.refreshEvents();\n            }\n\n            if (this.splitviewCtrl.isOn() && this.eventId && data && data.deleted && data.deleted.indexOf(this.eventId) != -1) {\n                // Current selected event was deleted. Clear details.\n                this.splitviewCtrl.emptyDetails();\n            }\n        }, this.currentSiteId);\n\n        // Update the list when an event is deleted.\n        this.deleteEventObserver = eventsProvider.on(AddonCalendarProvider.DELETED_EVENT_EVENT, (data) => {\n            if (data && !data.sent) {\n                // Event was deleted in offline. Just mark it as deleted, no need to refresh.\n                this.markAsDeleted(data.eventId, true);\n                this.deletedEvents.push(data.eventId);\n                this.hasOffline = true;\n            } else {\n                // Event deleted, clear the details if needed and refresh the view.\n                if (this.splitviewCtrl.isOn()) {\n                    this.splitviewCtrl.emptyDetails();\n                }\n\n                this.eventsLoaded = false;\n                this.refreshEvents();\n            }\n        }, this.currentSiteId);\n\n        // Listen for events \"undeleted\" (offline).\n        this.undeleteEventObserver = eventsProvider.on(AddonCalendarProvider.UNDELETED_EVENT_EVENT, (data) => {\n            if (data && data.eventId) {\n                // Mark it as undeleted, no need to refresh.\n                this.markAsDeleted(data.eventId, false);\n\n                // Remove it from the list of deleted events if it's there.\n                const index = this.deletedEvents.indexOf(data.eventId);\n                if (index != -1) {\n                    this.deletedEvents.splice(index, 1);\n                }\n\n                this.hasOffline = !!this.offlineEvents.length || !!this.deletedEvents.length;\n            }\n        }, this.currentSiteId);\n\n        this.filterChangedObserver = this.eventsProvider.on(AddonCalendarProvider.FILTER_CHANGED_EVENT, (data) => {\n            this.filter = data;\n\n            // Course viewed has changed, check if the user can create events for this course calendar.\n            this.calendarHelper.canEditEvents(this.filter['courseId']).then((canEdit) => {\n                this.canCreate = canEdit;\n            });\n\n            this.filterEvents();\n\n            this.domUtils.scrollToTop(this.content);\n        });\n\n        // Refresh online status when changes.\n        this.onlineObserver = network.onchange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            zone.run(() => {\n                this.isOnline = this.appProvider.isOnline();\n            });\n        });\n    }\n\n    /**\n     * View loaded.\n     */\n    ionViewDidLoad(): void {\n        if (this.eventId) {\n            // There is an event to load, open the event in a new state.\n            this.gotoEvent(this.eventId);\n        }\n\n        this.syncIcon = 'spinner';\n\n        this.fetchData(false, true, false).then(() => {\n            if (!this.eventId && this.splitviewCtrl.isOn() && this.events.length > 0) {\n                // Take first online event and load it. If no online event, load the first offline.\n                if (this.onlineEvents[0]) {\n                    this.gotoEvent(this.onlineEvents[0].id);\n                } else {\n                    this.gotoEvent(this.offlineEvents[0].id);\n                }\n            }\n        });\n    }\n\n    /**\n     * Fetch all the data required for the view.\n     *\n     * @param refresh Empty events array first.\n     * @param sync Whether it should try to synchronize offline events.\n     * @param showErrors Whether to show sync errors to the user.\n     * @return Promise resolved when done.\n     */\n    fetchData(refresh?: boolean, sync?: boolean, showErrors?: boolean): Promise<any> {\n        this.initialTime = this.timeUtils.timestamp();\n        this.daysLoaded = 0;\n        this.emptyEventsTimes = 0;\n        this.isOnline = this.appProvider.isOnline();\n\n        let promise;\n\n        if (sync) {\n            // Try to synchronize offline events.\n            promise = this.calendarSync.syncEvents().then((result) => {\n                if (result.warnings && result.warnings.length) {\n                    this.domUtils.showErrorModal(result.warnings[0]);\n                }\n\n                if (result.updated) {\n                    // Trigger a manual sync event.\n                    result.source = 'list';\n\n                    this.eventsProvider.trigger(AddonCalendarSyncProvider.MANUAL_SYNCED, result, this.currentSiteId);\n                }\n            }).catch((error) => {\n                if (showErrors) {\n                    this.domUtils.showErrorModalDefault(error, 'core.errorsync', true);\n                }\n            });\n        } else {\n            promise = Promise.resolve();\n        }\n\n        return promise.then(() => {\n\n            const promises = [];\n\n            this.hasOffline = false;\n\n            promises.push(this.calendarHelper.canEditEvents(this.filter['courseId']).then((canEdit) => {\n                this.canCreate = canEdit;\n            }));\n\n            // Load courses for the popover.\n            promises.push(this.coursesHelper.getCoursesForPopover(this.filter['courseId']).then((result) => {\n                this.courses = result.courses;\n\n                return this.fetchEvents(refresh);\n            }));\n\n            // Get offline events.\n            promises.push(this.calendarOffline.getAllEditedEvents().then((events) => {\n                this.hasOffline = this.hasOffline || !!events.length;\n\n                // Format data and sort by timestart.\n                events.forEach((event) => {\n                    event.offline = true;\n                    this.calendarHelper.formatEventData(event);\n                });\n                this.offlineEvents = this.sortEvents(events);\n            }));\n\n            // Get events deleted in offline.\n            promises.push(this.calendarOffline.getAllDeletedEventsIds().then((ids) => {\n                this.hasOffline = this.hasOffline || !!ids.length;\n                this.deletedEvents = ids;\n            }));\n\n            return Promise.all(promises);\n        }).finally(() => {\n            this.eventsLoaded = true;\n            this.syncIcon = 'sync';\n        });\n    }\n\n    /**\n     * Fetches the events and updates the view.\n     *\n     * @param refresh Empty events array first.\n     * @return Promise resolved when done.\n     */\n    fetchEvents(refresh?: boolean): Promise<any> {\n        this.loadMoreError = false;\n\n        return this.calendarProvider.getEventsList(this.initialTime, this.daysLoaded, AddonCalendarProvider.DAYS_INTERVAL)\n                .then((onlineEvents) => {\n\n            if (onlineEvents.length === 0) {\n                this.emptyEventsTimes++;\n                if (this.emptyEventsTimes > 5) { // Stop execution if we retrieve empty list 6 consecutive times.\n                    this.canLoadMore = false;\n                    if (refresh) {\n                        this.onlineEvents = [];\n                        this.filteredEvents = [];\n                        this.events = this.offlineEvents;\n                    }\n                } else {\n                    // No events returned, load next events.\n                    this.daysLoaded += AddonCalendarProvider.DAYS_INTERVAL;\n\n                    return this.fetchEvents();\n                }\n            } else {\n                onlineEvents.forEach(this.calendarHelper.formatEventData.bind(this.calendarHelper));\n\n                // Get the merged events of this period.\n                const events = this.mergeEvents(onlineEvents);\n\n                this.getCategories = this.shouldLoadCategories(onlineEvents);\n\n                if (refresh) {\n                    this.onlineEvents = onlineEvents;\n                    this.events = events;\n                } else {\n                    // Filter events with same ID. Repeated events are returned once per WS call, show them only once.\n                    this.onlineEvents = this.utils.mergeArraysWithoutDuplicates(this.onlineEvents, onlineEvents, 'id');\n                    this.events = this.utils.mergeArraysWithoutDuplicates(this.events, events, 'id');\n                }\n                this.filterEvents();\n\n                // Calculate which evemts need to display the date.\n                this.filteredEvents.forEach((event, index): any => {\n                    event.showDate = this.showDate(event, this.filteredEvents[index - 1]);\n                    event.endsSameDay = this.endsSameDay(event);\n                });\n                this.canLoadMore = true;\n\n                // Schedule notifications for the events retrieved (might have new events).\n                this.calendarProvider.scheduleEventsNotifications(this.onlineEvents);\n\n                this.daysLoaded += AddonCalendarProvider.DAYS_INTERVAL;\n            }\n\n            // Resize the content so infinite loading is able to calculate if it should load more items or not.\n            // @todo: Infinite loading is not working if content is not high enough.\n            this.content.resize();\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevents', true);\n            this.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\n        }).then(() => {\n            // Success retrieving events. Get categories if needed.\n            if (this.getCategories) {\n                this.getCategories = false;\n\n                return this.loadCategories();\n            }\n        });\n    }\n\n    /**\n     * Function to load more events.\n     *\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n     * @return Resolved when done.\n     */\n    loadMoreEvents(infiniteComplete?: any): Promise<any> {\n        return this.fetchEvents().finally(() => {\n            infiniteComplete && infiniteComplete();\n        });\n    }\n\n    protected filterEvents(): void {\n        this.filteredEvents = this.calendarHelper.getFilteredEvents(this.events, this.filter, this.categories);\n    }\n\n    /**\n     * Returns if the current state should load categories or not.\n     * @param events Events to parse.\n     * @return True if categories should be loaded.\n     */\n    protected shouldLoadCategories(events: any[]): boolean {\n        if (this.categoriesRetrieved || this.getCategories) {\n            // Use previous value\n            return this.getCategories;\n        }\n\n        // Categories not loaded yet. We should get them if there's any category event.\n        const found = events.some((event) => event.categoryid != 'undefined' && event.categoryid > 0);\n\n        return found || this.getCategories;\n    }\n\n    /**\n     * Load categories to be able to filter events.\n     *\n     * @return Promise resolved when done.\n     */\n    protected loadCategories(): Promise<any> {\n        return this.coursesProvider.getCategories(0, true).then((cats) => {\n            this.categoriesRetrieved = true;\n            this.categories = {};\n            // Index categories by ID.\n            cats.forEach((category) => {\n                this.categories[category.id] = category;\n            });\n        }).catch(() => {\n            // Ignore errors.\n        });\n    }\n\n    /**\n     * Merge a period of online events with the offline events of that period.\n     *\n     * @param onlineEvents Online events.\n     * @return Merged events.\n     */\n    protected mergeEvents(onlineEvents: any[]): any[] {\n        if (!this.offlineEvents.length && !this.deletedEvents.length) {\n            // No offline events, nothing to merge.\n            return onlineEvents;\n        }\n\n        const start = this.initialTime + (CoreConstants.SECONDS_DAY * this.daysLoaded),\n            end = start + (CoreConstants.SECONDS_DAY * AddonCalendarProvider.DAYS_INTERVAL) - 1;\n        let result = onlineEvents;\n\n        if (this.deletedEvents.length) {\n            // Mark as deleted the events that were deleted in offline.\n            result.forEach((event) => {\n                event.deleted = this.deletedEvents.indexOf(event.id) != -1;\n            });\n        }\n\n        if (this.offlineEvents.length) {\n            // Remove the online events that were modified in offline.\n            result = result.filter((event) => {\n                const offlineEvent = this.offlineEvents.find((ev) => {\n                    return ev.id == event.id;\n                });\n\n                return !offlineEvent;\n            });\n        }\n\n        // Now get the offline events that belong to this period.\n        const periodOfflineEvents = this.offlineEvents.filter((event) => {\n            if (this.daysLoaded == 0 && event.timestart < start) {\n                // Display offline events that are previous to current time to allow editing them.\n                return true;\n            }\n\n            return (event.timestart >= start || event.timestart + event.timeduration >= start) && event.timestart <= end;\n        });\n\n        // Merge both arrays and sort them.\n        result = result.concat(periodOfflineEvents);\n\n        return this.sortEvents(result);\n    }\n\n    /**\n     * Sort events by timestart.\n     *\n     * @param events List to sort.\n     */\n    protected sortEvents(events: any[]): any[] {\n        return events.sort((a, b) => {\n            if (a.timestart == b.timestart) {\n                return a.timeduration - b.timeduration;\n            }\n\n            return a.timestart - b.timestart;\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @param done Function to call when done.\n     * @param showErrors Whether to show sync errors to the user.\n     * @return Promise resolved when done.\n     */\n    doRefresh(refresher?: any, done?: () => void, showErrors?: boolean): Promise<any> {\n        if (this.eventsLoaded) {\n            return this.refreshEvents(true, showErrors).finally(() => {\n                refresher && refresher.complete();\n                done && done();\n            });\n        }\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Refresh the events.\n     *\n     * @param sync Whether it should try to synchronize offline events.\n     * @param showErrors Whether to show sync errors to the user.\n     * @return Promise resolved when done.\n     */\n    refreshEvents(sync?: boolean, showErrors?: boolean): Promise<any> {\n        this.syncIcon = 'spinner';\n\n        const promises = [];\n\n        promises.push(this.calendarProvider.invalidateEventsList());\n        promises.push(this.calendarProvider.invalidateAllowedEventTypes());\n\n        if (this.categoriesRetrieved) {\n            promises.push(this.coursesProvider.invalidateCategories(0, true));\n            this.categoriesRetrieved = false;\n        }\n\n        return Promise.all(promises).finally(() => {\n            return this.fetchData(true, sync, showErrors);\n        });\n    }\n\n    /**\n     * Check date should be shown on event list for the current event.\n     * If date has changed from previous to current event it should be shown.\n     *\n     * @param event Current event where to show the date.\n     * @param prevEvent Previous event where to compare the date with.\n     * @return If date has changed and should be shown.\n     */\n    protected showDate(event: any, prevEvent?: any): boolean {\n        if (!prevEvent) {\n            // First event, show it.\n            return true;\n        }\n\n        // Check if day has changed.\n        return !moment(event.timestart * 1000).isSame(prevEvent.timestart * 1000, 'day');\n    }\n\n    /**\n     * Check if event ends the same date or not.\n     *\n     * @param event Event info.\n     * @return If date has changed and should be shown.\n     */\n    protected endsSameDay(event: AddonCalendarGetEventsEvent): boolean {\n        if (!event.timeduration) {\n            // No duration.\n            return true;\n        }\n\n        // Check if day has changed.\n        return moment(event.timestart * 1000).isSame((event.timestart + event.timeduration) * 1000, 'day');\n    }\n\n    /**\n     * Show the context menu.\n     *\n     * @param event Event.\n     */\n    openFilter(event: MouseEvent): void {\n        const popover = this.popoverCtrl.create(AddonCalendarFilterPopoverComponent, {\n            courses: this.courses,\n            filter: this.filter\n        });\n\n        popover.present({\n            ev: event\n        });\n    }\n\n    /**\n     * Open page to create/edit an event.\n     *\n     * @param eventId Event ID to edit.\n     */\n    openEdit(eventId?: number): void {\n        this.eventId = undefined;\n\n        const params: any = {};\n\n        if (eventId) {\n            params.eventId = eventId;\n        }\n        if (this.filter['courseId']) {\n            params.courseId = this.filter['courseId'];\n        }\n\n        this.splitviewCtrl.push('AddonCalendarEditEventPage', params);\n    }\n\n    /**\n     * Open calendar events settings.\n     */\n    openSettings(): void {\n        this.navCtrl.push('AddonCalendarSettingsPage');\n    }\n\n    /**\n     * Navigate to a particular event.\n     *\n     * @param eventId Event to load.\n     */\n    gotoEvent(eventId: number): void {\n        this.eventId = eventId;\n\n        if (eventId < 0) {\n            // It's an offline event, go to the edit page.\n            this.openEdit(eventId);\n        } else {\n            this.splitviewCtrl.push('AddonCalendarEventPage', {\n                id: eventId\n            });\n        }\n    }\n\n    /**\n     * Find an event and mark it as deleted.\n     *\n     * @param eventId Event ID.\n     * @param deleted Whether to mark it as deleted or not.\n     */\n    protected markAsDeleted(eventId: number, deleted: boolean): void {\n        const event = this.onlineEvents.find((event) => {\n            return event.id == eventId;\n        });\n\n        if (event) {\n            event.deleted = deleted;\n        }\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.obsDefaultTimeChange && this.obsDefaultTimeChange.off();\n        this.newEventObserver && this.newEventObserver.off();\n        this.discardedObserver && this.discardedObserver.off();\n        this.editEventObserver && this.editEventObserver.off();\n        this.deleteEventObserver && this.deleteEventObserver.off();\n        this.undeleteEventObserver && this.undeleteEventObserver.off();\n        this.syncObserver && this.syncObserver.off();\n        this.manualSyncObserver && this.manualSyncObserver.off();\n        this.filterChangedObserver && this.filterChangedObserver.off();\n        this.onlineObserver && this.onlineObserver.unsubscribe();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/calendar/pages/list/list.ts"],"sourceRoot":""}