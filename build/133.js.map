{"version":3,"sources":["../../src/addon/files/pages/list/list.module.ts","../../src/addon/files/pages/list/list.ts"],"names":[],"mappings":"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","file":"133.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { AddonFilesListPage } from './list';\n\n@NgModule({\n    declarations: [\n        AddonFilesListPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        IonicPageModule.forChild(AddonFilesListPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonFilesListPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/files/pages/list/list.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy } from '@angular/core';\nimport { IonicPage, NavParams } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { AddonFilesProvider, AddonFilesFile, AddonFilesGetUserPrivateFilesInfoResult } from '../../providers/files';\nimport { AddonFilesHelperProvider } from '../../providers/helper';\n\n/**\n * Page that displays the list of files.\n */\n@IonicPage({ segment: 'addon-files-list' })\n@Component({\n    selector: 'page-addon-files-list',\n    templateUrl: 'list.html',\n})\nexport class AddonFilesListPage implements OnDestroy {\n\n    title: string; // Page title.\n    showPrivateFiles: boolean; // Whether the user can view private files.\n    showSiteFiles: boolean; // Whether the user can view site files.\n    showUpload: boolean; // Whether the user can upload files.\n    root: string; // The root of the files loaded: 'my' or 'site'.\n    path: string; // The path of the directory being loaded. If empty path it means the root is being loaded.\n    userQuota: number; // The user quota (in bytes).\n    filesInfo: AddonFilesGetUserPrivateFilesInfoResult; // Info about private files (size, number of files, etc.).\n    spaceUsed: string; // Space used in a readable format.\n    userQuotaReadable: string; // User quota in a readable format.\n    files: AddonFilesFile[]; // List of files.\n    component: string; // Component to link the file downloads to.\n    filesLoaded: boolean; // Whether the files are loaded.\n\n    protected updateSiteObserver;\n\n    constructor(navParams: NavParams, eventsProvider: CoreEventsProvider, private sitesProvider: CoreSitesProvider,\n            private domUtils: CoreDomUtilsProvider, private translate: TranslateService, private appProvider: CoreAppProvider,\n            private filesProvider: AddonFilesProvider, private filesHelper: AddonFilesHelperProvider,\n            private textUtils: CoreTextUtilsProvider) {\n        this.title = navParams.get('title') || this.translate.instant('addon.files.files');\n        this.root = navParams.get('root');\n        this.path = navParams.get('path');\n\n        // Update visibility if current site info is updated.\n        this.updateSiteObserver = eventsProvider.on(CoreEventsProvider.SITE_UPDATED, () => {\n            this.setVisibility();\n        }, sitesProvider.getCurrentSiteId());\n    }\n\n    /**\n     * View loaded.\n     */\n    ionViewDidLoad(): void {\n        this.setVisibility();\n        this.userQuota = this.sitesProvider.getCurrentSite().getInfo().userquota;\n\n        if (!this.root) {\n            // Load private files by default.\n            if (this.showPrivateFiles) {\n                this.root = 'my';\n            } else if (this.showSiteFiles) {\n                this.root = 'site';\n            }\n        }\n\n        if (this.root) {\n            this.rootChanged();\n        } else {\n            this.filesLoaded = true;\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     */\n    refreshData(refresher: any): void {\n        this.refreshFiles().finally(() => {\n            refresher.complete();\n        });\n    }\n\n    /**\n     * Function called when the root has changed.\n     */\n    rootChanged(): void {\n        this.filesLoaded = false;\n        this.component = this.root == 'my' ? AddonFilesProvider.PRIVATE_FILES_COMPONENT : AddonFilesProvider.SITE_FILES_COMPONENT;\n\n        this.fetchFiles().finally(() => {\n            this.filesLoaded = true;\n        });\n    }\n\n    /**\n     * Upload a new file.\n     */\n    uploadFile(): void {\n        this.filesProvider.versionCanUploadFiles().then((canUpload) => {\n            if (!canUpload) {\n                this.domUtils.showAlertTranslated('core.notice', 'addon.files.erroruploadnotworking');\n            } else if (!this.appProvider.isOnline()) {\n                this.domUtils.showErrorModal('core.fileuploader.errormustbeonlinetoupload', true);\n            } else {\n                this.filesHelper.uploadPrivateFile(this.filesInfo).then(() => {\n                    // File uploaded, refresh the list.\n                    this.filesLoaded = false;\n                    this.refreshFiles().finally(() => {\n                        this.filesLoaded = true;\n                    });\n                }).catch(() => {\n                    // Ignore errors, they're handled inside the function.\n                });\n            }\n        });\n    }\n\n    /**\n     * Set visibility of some items based on site data.\n     */\n    protected setVisibility(): void {\n        this.showPrivateFiles = this.filesProvider.canViewPrivateFiles();\n        this.showSiteFiles = this.filesProvider.canViewSiteFiles();\n        this.showUpload = this.filesProvider.canUploadFiles();\n    }\n\n    /**\n     * Fetch the files.\n     *\n     * @return Promise resolved when done.\n     */\n    protected fetchFiles(): Promise<any> {\n        let promise: Promise<AddonFilesFile[]>;\n\n        if (!this.path) {\n            // The path is unknown, the user must be requesting a root.\n            if (this.root == 'site') {\n                this.title = this.translate.instant('addon.files.sitefiles');\n                promise = this.filesProvider.getSiteFiles();\n            } else if (this.root == 'my') {\n                this.title = this.translate.instant('addon.files.files');\n\n                promise = this.filesProvider.getPrivateFiles().then((files) => {\n                    if (this.showUpload && this.filesProvider.canGetPrivateFilesInfo() && this.userQuota > 0) {\n                        // Get the info to calculate the available size.\n                        return this.filesProvider.getPrivateFilesInfo().then((info) => {\n                            this.filesInfo = info;\n                            this.spaceUsed = this.textUtils.bytesToSize(info.filesizewithoutreferences, 1);\n                            this.userQuotaReadable = this.textUtils.bytesToSize(this.userQuota, 1);\n\n                            return files;\n                        });\n                    } else {\n                        // User quota isn't useful, delete it.\n                        delete this.userQuota;\n                    }\n\n                    return files;\n                });\n            } else {\n                // Unknown root.\n                promise = Promise.reject(null);\n            }\n        } else {\n            // Path is set, serve the files the user requested.\n            promise = this.filesProvider.getFiles(this.path);\n        }\n\n        return promise.then((files) => {\n            this.files = files;\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'addon.files.couldnotloadfiles', true);\n        });\n    }\n\n    /**\n     * Refresh the displayed files.\n     *\n     * @return Promise resolved when done.\n     */\n    protected refreshFiles(): Promise<any> {\n        const promises = [];\n\n        promises.push(this.filesProvider.invalidateDirectory(this.root, this.path));\n        promises.push(this.filesProvider.invalidatePrivateFilesInfoForUser());\n\n        return Promise.all(promises).finally(() => {\n            return this.fetchFiles();\n        });\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.updateSiteObserver && this.updateSiteObserver.off();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/files/pages/list/list.ts"],"sourceRoot":""}