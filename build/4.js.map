{"version":3,"sources":["../../src/addon/notifications/pages/list/list.module.ts","../../src/addon/notifications/components/components.module.ts","../../src/addon/notifications/components/actions/actions.ts","../../src/addon/notifications/pages/list/list.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { AddonNotificationsComponentsModule } from '../../components/components.module';\nimport { AddonNotificationsListPage } from './list';\n\n@NgModule({\n    declarations: [\n        AddonNotificationsListPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule,\n        IonicPageModule.forChild(AddonNotificationsListPage),\n        TranslateModule.forChild(),\n        AddonNotificationsComponentsModule,\n    ],\n})\nexport class AddonNotificationsListPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/notifications/pages/list/list.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AddonNotificationsActionsComponent } from './actions/actions';\n\n@NgModule({\n    declarations: [\n        AddonNotificationsActionsComponent\n    ],\n    imports: [\n        CommonModule,\n        IonicModule,\n        TranslateModule.forChild(),\n    ],\n    providers: [\n    ],\n    exports: [\n        AddonNotificationsActionsComponent\n    ],\n})\nexport class AddonNotificationsComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/notifications/components/components.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { CoreContentLinksDelegate, CoreContentLinksAction } from '@core/contentlinks/providers/delegate';\nimport { CoreSitesProvider } from '@providers/sites';\n\n/**\n * Component that displays the actions for a notification.\n */\n@Component({\n    selector: 'addon-notifications-actions',\n    templateUrl: 'addon-notifications-actions.html',\n})\nexport class AddonNotificationsActionsComponent implements OnInit {\n    @Input() contextUrl: string;\n    @Input() courseId: number;\n    @Input() data?: any; // Extra data to handle the URL.\n\n    actions: CoreContentLinksAction[] = [];\n\n    constructor(private contentLinksDelegate: CoreContentLinksDelegate, private sitesProvider: CoreSitesProvider,\n            public navCtrl: NavController) {}\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        if (!this.contextUrl && (!this.data || !this.data.appurl)) {\n            // No URL, nothing to do.\n            return;\n        }\n\n        let promise;\n\n        // Treat appurl first if any.\n        if (this.data && this.data.appurl) {\n            promise = this.contentLinksDelegate.getActionsFor(this.data.appurl, this.courseId, undefined, this.data);\n        } else {\n            promise = Promise.resolve([]);\n        }\n\n        promise.then((actions) => {\n            if (!actions.length && this.contextUrl) {\n                // No appurl or cannot handle it. Try with contextUrl.\n                return this.contentLinksDelegate.getActionsFor(this.contextUrl, this.courseId, undefined, this.data);\n            }\n\n            return actions;\n        }).then((actions) => {\n\n            if (!actions.length) {\n                // URL is not supported. Add an action to open it in browser.\n                actions.push({\n                    message: 'core.view',\n                    icon: 'eye',\n                    action: this.defaultAction.bind(this)\n                });\n            }\n\n            this.actions = actions;\n        });\n    }\n\n    /**\n     * Default action. Open in browser.\n     *\n     * @param siteId Site ID to use.\n     * @param navCtrl NavController.\n     */\n    protected defaultAction(siteId: string, navCtrl?: NavController): void {\n        const url = (this.data && this.data.appurl) || this.contextUrl;\n\n        this.sitesProvider.getCurrentSite().openInBrowserWithAutoLogin(url);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/notifications/components/actions/actions.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { IonicPage, NavParams } from 'ionic-angular';\nimport { Subscription } from 'rxjs';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreEventsProvider, CoreEventObserver } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { AddonNotificationsProvider, AddonNotificationsAnyNotification } from '../../providers/notifications';\nimport { AddonNotificationsHelperProvider } from '../../providers/helper';\nimport { CorePushNotificationsDelegate } from '@core/pushnotifications/providers/delegate';\n\n/**\n * Page that displays the list of notifications.\n */\n@IonicPage({ segment: 'addon-notifications-list' })\n@Component({\n    selector: 'page-addon-notifications-list',\n    templateUrl: 'list.html',\n})\nexport class AddonNotificationsListPage {\n\n    notifications: AddonNotificationsAnyNotification[] = [];\n    notificationsLoaded = false;\n    canLoadMore = false;\n    loadMoreError = false;\n    canMarkAllNotificationsAsRead = false;\n    loadingMarkAllNotificationsAsRead = false;\n\n    protected isCurrentView: boolean;\n    protected cronObserver: CoreEventObserver;\n    protected pushObserver: Subscription;\n    protected pendingRefresh = false;\n\n    constructor(navParams: NavParams, private domUtils: CoreDomUtilsProvider, private eventsProvider: CoreEventsProvider,\n            private sitesProvider: CoreSitesProvider, private textUtils: CoreTextUtilsProvider,\n            private utils: CoreUtilsProvider, private notificationsProvider: AddonNotificationsProvider,\n            private pushNotificationsDelegate: CorePushNotificationsDelegate,\n            private notificationsHelper: AddonNotificationsHelperProvider) {\n    }\n\n    /**\n     * View loaded.\n     */\n    ionViewDidLoad(): void {\n        this.fetchNotifications();\n\n        this.cronObserver = this.eventsProvider.on(AddonNotificationsProvider.READ_CRON_EVENT, () => {\n            if (this.isCurrentView) {\n                this.notificationsLoaded = false;\n                this.refreshNotifications();\n            }\n        }, this.sitesProvider.getCurrentSiteId());\n\n        this.pushObserver = this.pushNotificationsDelegate.on('receive').subscribe((notification) => {\n            // New notification received. If it's from current site, refresh the data.\n            if (this.isCurrentView && this.utils.isTrueOrOne(notification.notif) &&\n                    this.sitesProvider.isCurrentSite(notification.site)) {\n\n                this.notificationsLoaded = false;\n                this.refreshNotifications();\n            } else if (!this.isCurrentView) {\n                this.pendingRefresh = true;\n            }\n        });\n    }\n\n    /**\n     * Convenience function to get notifications. Gets unread notifications first.\n     *\n     * @param refreh Whether we're refreshing data.\n     * @return Resolved when done.\n     */\n    protected fetchNotifications(refresh?: boolean): Promise<any> {\n        this.loadMoreError = false;\n\n        return this.notificationsHelper.getNotifications(refresh ? [] : this.notifications).then((result) => {\n            result.notifications.forEach(this.formatText.bind(this));\n\n            if (refresh) {\n                this.notifications = result.notifications;\n            } else {\n                this.notifications = this.notifications.concat(result.notifications);\n            }\n            this.canLoadMore = result.canLoadMore;\n\n            this.markNotificationsAsRead(result.notifications);\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'addon.notifications.errorgetnotifications', true);\n            this.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\n        }).finally(() => {\n            this.notificationsLoaded = true;\n        });\n    }\n\n    /**\n     * Mark all notifications as read.\n     */\n    markAllNotificationsAsRead(): void {\n        this.loadingMarkAllNotificationsAsRead = true;\n        this.notificationsProvider.markAllNotificationsAsRead().catch(() => {\n            // Omit failure.\n        }).then(() => {\n            const siteId = this.sitesProvider.getCurrentSiteId();\n            this.eventsProvider.trigger(AddonNotificationsProvider.READ_CHANGED_EVENT, null, siteId);\n\n            // All marked as read, refresh the list.\n            this.notificationsLoaded = false;\n\n            return this.refreshNotifications();\n        });\n    }\n\n    /**\n     * Mark notifications as read.\n     *\n     * @param notifications Array of notification objects.\n     */\n    protected markNotificationsAsRead(notifications: AddonNotificationsAnyNotification[]): void {\n\n        let promise;\n\n        if (notifications.length > 0) {\n            const promises: Promise<any>[] = notifications.map((notification) => {\n                if (notification.read) {\n                    // Already read, don't mark it.\n                    return Promise.resolve();\n                }\n\n                return this.notificationsProvider.markNotificationRead(notification.id);\n            });\n\n            promise = Promise.all(promises).catch(() => {\n                // Ignore errors.\n            }).finally(() => {\n                this.notificationsProvider.invalidateNotificationsList().finally(() => {\n                    const siteId = this.sitesProvider.getCurrentSiteId();\n                    this.eventsProvider.trigger(AddonNotificationsProvider.READ_CHANGED_EVENT, null, siteId);\n                });\n            });\n        } else {\n            promise = Promise.resolve();\n        }\n\n        promise.finally(() => {\n            // Check if mark all notifications as read is enabled and there are some to read.\n            if (this.notificationsProvider.isMarkAllNotificationsAsReadEnabled()) {\n                this.loadingMarkAllNotificationsAsRead = true;\n\n                return this.notificationsProvider.getUnreadNotificationsCount().then((unread) => {\n                    this.canMarkAllNotificationsAsRead = unread > 0;\n                }).finally(() => {\n                    this.loadingMarkAllNotificationsAsRead = false;\n                });\n            }\n            this.canMarkAllNotificationsAsRead = false;\n        });\n    }\n\n    /**\n     * Refresh notifications.\n     *\n     * @param refresher Refresher.\n     * @return Promise<any> Promise resolved when done.\n     */\n    refreshNotifications(refresher?: any): Promise<any> {\n        return this.notificationsProvider.invalidateNotificationsList().finally(() => {\n            return this.fetchNotifications(true).finally(() => {\n                if (refresher) {\n                    refresher.complete();\n                }\n            });\n        });\n    }\n\n    /**\n     * Load more results.\n     *\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n     */\n    loadMoreNotifications(infiniteComplete?: any): void {\n        this.fetchNotifications().finally(() => {\n            infiniteComplete && infiniteComplete();\n        });\n    }\n\n    /**\n     * Formats the text of a notification.\n     *\n     * @param notification The notification object.\n     */\n    protected formatText(notification: AddonNotificationsAnyNotification): void {\n        notification.displayfullhtml = this.shouldDisplayFullHtml(notification);\n\n        notification.mobiletext = notification.displayfullhtml ?\n                        notification.fullmessagehtml :\n                        this.textUtils.replaceNewLines(notification.mobiletext.replace(/-{4,}/ig, ''), '<br>');\n    }\n\n    /**\n     * Check whether we should display full HTML of the notification.\n     *\n     * @param notification Notification.\n     * @return Whether to display full HTML.\n     */\n    protected shouldDisplayFullHtml(notification: AddonNotificationsAnyNotification): boolean {\n        return notification.component == 'mod_forum' && notification.eventtype == 'digests';\n    }\n\n    /**\n     * User entered the page.\n     */\n    ionViewDidEnter(): void {\n        this.isCurrentView = true;\n\n        if (this.pendingRefresh) {\n            this.pendingRefresh = false;\n            this.notificationsLoaded = false;\n\n            this.refreshNotifications();\n        }\n    }\n\n    /**\n     * User left the page.\n     */\n    ionViewDidLeave(): void {\n        this.isCurrentView = false;\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.cronObserver && this.cronObserver.off();\n        this.pushObserver && this.pushObserver.unsubscribe();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/notifications/pages/list/list.ts"],"sourceRoot":""}