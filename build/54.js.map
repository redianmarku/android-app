{"version":3,"sources":["../../src/core/courses/pages/course-preview/course-preview.module.ts","../../src/core/courses/pages/course-preview/course-preview.ts"],"names":[],"mappings":"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","file":"54.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreCoursesCoursePreviewPage } from './course-preview';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\n\n@NgModule({\n    declarations: [\n        CoreCoursesCoursePreviewPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule,\n        IonicPageModule.forChild(CoreCoursesCoursePreviewPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class CoreCoursesCoursePreviewPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/pages/course-preview/course-preview.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, NgZone } from '@angular/core';\nimport { IonicPage, NavController, NavParams, Platform, ModalController, Modal } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreCoursesProvider } from '../../providers/courses';\nimport { CoreCourseOptionsDelegate } from '@core/course/providers/options-delegate';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { CoreCourseFormatDelegate } from '@core/course/providers/format-delegate';\n\n/**\n * Page that allows \"previewing\" a course and enrolling in it if enabled and not enrolled.\n */\n@IonicPage({ segment: 'core-courses-course-preview' })\n@Component({\n    selector: 'page-core-courses-course-preview',\n    templateUrl: 'course-preview.html',\n})\nexport class CoreCoursesCoursePreviewPage implements OnDestroy {\n    course: any;\n    isEnrolled: boolean;\n    canAccessCourse = true;\n    component = 'CoreCoursesCoursePreview';\n    selfEnrolInstances: any[] = [];\n    paypalEnabled: boolean;\n    dataLoaded: boolean;\n    avoidOpenCourse = false;\n    prefetchCourseData = {\n        downloadSucceeded: false,\n        prefetchCourseIcon: 'spinner',\n        title: 'core.course.downloadcourse'\n    };\n    downloadCourseEnabled: boolean;\n    courseUrl: string;\n\n    protected guestWSAvailable: boolean;\n    protected isGuestEnabled = false;\n    protected guestInstanceId: number;\n    protected enrollmentMethods: any[];\n    protected waitStart = 0;\n    protected enrolUrl: string;\n    protected paypalReturnUrl: string;\n    protected isMobile: boolean;\n    protected isDesktop: boolean;\n    protected selfEnrolModal: Modal;\n    protected pageDestroyed = false;\n    protected currentInstanceId: number;\n    protected courseStatusObserver;\n\n    constructor(private navCtrl: NavController, navParams: NavParams, private sitesProvider: CoreSitesProvider,\n            private domUtils: CoreDomUtilsProvider, private textUtils: CoreTextUtilsProvider, appProvider: CoreAppProvider,\n            private coursesProvider: CoreCoursesProvider, private platform: Platform, private modalCtrl: ModalController,\n            private translate: TranslateService, private eventsProvider: CoreEventsProvider,\n            private courseOptionsDelegate: CoreCourseOptionsDelegate, private courseHelper: CoreCourseHelperProvider,\n            private courseProvider: CoreCourseProvider, private courseFormatDelegate: CoreCourseFormatDelegate,\n            private zone: NgZone) {\n\n        this.course = navParams.get('course');\n        this.avoidOpenCourse = navParams.get('avoidOpenCourse');\n        this.isMobile = appProvider.isMobile();\n        this.isDesktop = appProvider.isDesktop();\n        this.downloadCourseEnabled = !this.coursesProvider.isDownloadCourseDisabledInSite();\n\n        if (this.downloadCourseEnabled) {\n            // Listen for status change in course.\n            this.courseStatusObserver = this.eventsProvider.on(CoreEventsProvider.COURSE_STATUS_CHANGED, (data) => {\n                if (data.courseId == this.course.id || data.courseId == CoreCourseProvider.ALL_COURSES_CLEARED) {\n                    this.updateCourseStatus(data.status);\n                }\n            }, this.sitesProvider.getCurrentSiteId());\n        }\n    }\n\n    /**\n     * View loaded.\n     */\n    ionViewDidLoad(): void {\n        const currentSite = this.sitesProvider.getCurrentSite(),\n            currentSiteUrl = currentSite && currentSite.getURL();\n\n        this.paypalEnabled = this.course.enrollmentmethods && this.course.enrollmentmethods.indexOf('paypal') > -1;\n        this.guestWSAvailable = this.coursesProvider.isGuestWSAvailable();\n        this.enrolUrl = this.textUtils.concatenatePaths(currentSiteUrl, 'enrol/index.php?id=' + this.course.id);\n        this.courseUrl = this.textUtils.concatenatePaths(currentSiteUrl, 'course/view.php?id=' + this.course.id);\n        this.paypalReturnUrl = this.textUtils.concatenatePaths(currentSiteUrl, 'enrol/paypal/return.php');\n        if (this.course.overviewfiles && this.course.overviewfiles.length > 0) {\n            this.course.courseImage = this.course.overviewfiles[0].fileurl;\n        }\n\n        // Initialize the self enrol modal.\n        this.selfEnrolModal = this.modalCtrl.create('CoreCoursesSelfEnrolPasswordPage');\n        this.selfEnrolModal.onDidDismiss((password: string) => {\n            if (typeof password != 'undefined') {\n                this.selfEnrolInCourse(password, this.currentInstanceId);\n            }\n        });\n\n        this.getCourse().finally(() => {\n            if (!this.downloadCourseEnabled) {\n                // Cannot download the whole course, stop.\n                return;\n            }\n\n            // Determine course prefetch icon.\n            this.courseHelper.getCourseStatusIconAndTitle(this.course.id).then((data) => {\n                this.prefetchCourseData.prefetchCourseIcon = data.icon;\n                this.prefetchCourseData.title = data.title;\n\n                if (data.icon == 'spinner') {\n                    // Course is being downloaded. Get the download promise.\n                    const promise = this.courseHelper.getCourseDownloadPromise(this.course.id);\n                    if (promise) {\n                        // There is a download promise. If it fails, show an error.\n                        promise.catch((error) => {\n                            if (!this.pageDestroyed) {\n                                this.domUtils.showErrorModalDefault(error, 'core.course.errordownloadingcourse', true);\n                            }\n                        });\n                    } else {\n                        // No download, this probably means that the app was closed while downloading. Set previous status.\n                        this.courseProvider.setCoursePreviousStatus(this.course.id);\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.pageDestroyed = true;\n\n        if (this.courseStatusObserver) {\n            this.courseStatusObserver.off();\n        }\n    }\n\n    /**\n     * Check if the user can access as guest.\n     *\n     * @return Promise resolved if can access as guest, rejected otherwise. Resolve param indicates if\n     *         password is required for guest access.\n     */\n    protected canAccessAsGuest(): Promise<boolean> {\n        if (!this.isGuestEnabled) {\n            return Promise.reject(null);\n        }\n\n        // Search instance ID of guest enrolment method.\n        this.guestInstanceId = undefined;\n        for (let i = 0; i < this.enrollmentMethods.length; i++) {\n            const method = this.enrollmentMethods[i];\n            if (method.type == 'guest') {\n                this.guestInstanceId = method.id;\n                break;\n            }\n        }\n\n        if (this.guestInstanceId) {\n            return this.coursesProvider.getCourseGuestEnrolmentInfo(this.guestInstanceId).then((info) => {\n                if (!info.status) {\n                    // Not active, reject.\n                    return Promise.reject(null);\n                }\n\n                return info.passwordrequired;\n            });\n        }\n\n        return Promise.reject(null);\n    }\n\n    /**\n     * Convenience function to get course. We use this to determine if a user can see the course or not.\n     *\n     * @param refresh Whether the user is refreshing the data.\n     */\n    protected getCourse(refresh?: boolean): Promise<any> {\n        // Get course enrolment methods.\n        this.selfEnrolInstances = [];\n\n        return this.coursesProvider.getCourseEnrolmentMethods(this.course.id).then((methods) => {\n            this.enrollmentMethods = methods;\n\n            this.enrollmentMethods.forEach((method) => {\n                if (method.type === 'self') {\n                    this.selfEnrolInstances.push(method);\n                } else if (this.guestWSAvailable && method.type === 'guest') {\n                    this.isGuestEnabled = true;\n                }\n            });\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error getting enrolment data');\n        }).then(() => {\n            // Check if user is enrolled in the course.\n            return this.coursesProvider.getUserCourse(this.course.id).then((course) => {\n                this.isEnrolled = true;\n\n                return course;\n            }).catch(() => {\n                // The user is not enrolled in the course. Use getCourses to see if it's an admin/manager and can see the course.\n                this.isEnrolled = false;\n\n                return this.coursesProvider.getCourse(this.course.id);\n            }).then((course) => {\n                // Success retrieving the course, we can assume the user has permissions to view it.\n                this.course.fullname = course.fullname || this.course.fullname;\n                this.course.summary = course.summary || this.course.summary;\n                this.canAccessCourse = true;\n            }).catch(() => {\n                // The user is not an admin/manager. Check if we can provide guest access to the course.\n                return this.canAccessAsGuest().then((passwordRequired) => {\n                    this.canAccessCourse = !passwordRequired;\n                }).catch(() => {\n                    this.canAccessCourse = false;\n                });\n            });\n        }).finally(() => {\n            if (this.sitesProvider.getCurrentSite() && !this.sitesProvider.getCurrentSite().isVersionGreaterEqualThan('3.7')) {\n                return this.coursesProvider.isGetCoursesByFieldAvailableInSite().then((available) => {\n                    if (available) {\n                        return this.coursesProvider.getCourseByField('id', this.course.id).then((course) => {\n                            this.course.customfields = course.customfields;\n                        });\n                    }\n                }).catch(() => {\n                    // Ignore errors.\n                });\n            }\n        }).finally(() => {\n            this.dataLoaded = true;\n        });\n    }\n\n    /**\n     * Open the course.\n     */\n    openCourse(): void {\n        if (!this.canAccessCourse || this.avoidOpenCourse) {\n            // Course cannot be opened or we are avoiding opening because we accessed from inside a course.\n            return;\n        }\n\n        this.courseFormatDelegate.openCourse(this.navCtrl, this.course);\n    }\n\n    /**\n     * Enrol using PayPal.\n     */\n    paypalEnrol(): void {\n        let window,\n            hasReturnedFromPaypal = false,\n            inAppLoadSubscription,\n            inAppFinishSubscription,\n            inAppExitSubscription,\n            appResumeSubscription;\n\n        const urlLoaded = (event): void => {\n                if (event.url.indexOf(this.paypalReturnUrl) != -1) {\n                    hasReturnedFromPaypal = true;\n                } else if (event.url.indexOf(this.courseUrl) != -1 && hasReturnedFromPaypal) {\n                    // User reached the course index page after returning from PayPal, close the InAppBrowser.\n                    inAppClosed();\n                    window.close();\n                }\n            },\n            inAppClosed = (): void => {\n                // InAppBrowser closed, refresh data.\n                unsubscribeAll();\n\n                if (!this.dataLoaded) {\n                    return;\n                }\n                this.dataLoaded = false;\n                this.refreshData();\n            },\n            unsubscribeAll = (): void => {\n                inAppLoadSubscription && inAppLoadSubscription.unsubscribe();\n                inAppFinishSubscription && inAppFinishSubscription.unsubscribe();\n                inAppExitSubscription && inAppExitSubscription.unsubscribe();\n                appResumeSubscription && appResumeSubscription.unsubscribe();\n            };\n\n        // Open the enrolment page in InAppBrowser.\n        this.sitesProvider.getCurrentSite().openInAppWithAutoLogin(this.enrolUrl).then((w) => {\n            window = w;\n\n            if (this.isDesktop || this.isMobile) {\n                // Observe loaded pages in the InAppBrowser to check if the enrol process has ended.\n                inAppLoadSubscription = window.on('loadstart').subscribe((event) => {\n                    // Execute the callback in the Angular zone, so change detection doesn't stop working.\n                    this.zone.run(() => urlLoaded(event));\n                });\n                // Observe window closed.\n                inAppExitSubscription = window.on('exit').subscribe(() => {\n                    // Execute the callback in the Angular zone, so change detection doesn't stop working.\n                    this.zone.run(inAppClosed);\n                });\n            }\n\n            if (this.isDesktop) {\n                // In desktop, also observe stop loading since some pages don't throw the loadstart event.\n                inAppFinishSubscription = window.on('loadstop').subscribe(urlLoaded);\n\n                // Since the user can switch windows, reload the data if he comes back to the app.\n                appResumeSubscription = this.platform.resume.subscribe(() => {\n                    if (!this.dataLoaded) {\n                        return;\n                    }\n                    this.dataLoaded = false;\n                    this.refreshData();\n                });\n            }\n        });\n    }\n\n    /**\n     * User clicked in a self enrol button.\n     *\n     * @param instanceId The instance ID of the enrolment method.\n     */\n    selfEnrolClicked(instanceId: number): void {\n        this.domUtils.showConfirm(this.translate.instant('core.courses.confirmselfenrol')).then(() => {\n            this.selfEnrolInCourse('', instanceId);\n        }).catch(() => {\n            // User cancelled.\n        });\n    }\n\n    /**\n     * Self enrol in a course.\n     *\n     * @param password Password to use.\n     * @param instanceId The instance ID.\n     * @return Promise resolved when self enrolled.\n     */\n    selfEnrolInCourse(password: string, instanceId: number): Promise<any> {\n        const modal = this.domUtils.showModalLoading('core.loading', true);\n\n        return this.coursesProvider.selfEnrol(this.course.id, password, instanceId).then(() => {\n            // Close modal and refresh data.\n            this.isEnrolled = true;\n            this.dataLoaded = false;\n\n            // Sometimes the list of enrolled courses takes a while to be updated. Wait for it.\n            this.waitForEnrolled(true).then(() => {\n                this.refreshData().finally(() => {\n                    // My courses have been updated, trigger event.\n                    this.eventsProvider.trigger(CoreCoursesProvider.EVENT_MY_COURSES_UPDATED, {\n                        courseId: this.course.id,\n                        course: this.course,\n                        action: CoreCoursesProvider.ACTION_ENROL,\n                    }, this.sitesProvider.getCurrentSiteId());\n                });\n            });\n        }).catch((error) => {\n            if (error && error.code === CoreCoursesProvider.ENROL_INVALID_KEY) {\n                // Invalid password, show the modal to enter the password.\n                this.selfEnrolModal.present();\n                this.currentInstanceId = instanceId;\n\n                if (!password) {\n                    // No password entered, don't show error.\n                    return;\n                }\n            }\n\n            this.domUtils.showErrorModalDefault(error, 'core.courses.errorselfenrol', true);\n        }).finally(() => {\n            modal.dismiss();\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher The refresher if this was triggered by a Pull To Refresh.\n     */\n    refreshData(refresher?: any): Promise<any> {\n        const promises = [];\n\n        promises.push(this.coursesProvider.invalidateUserCourses());\n        promises.push(this.coursesProvider.invalidateCourse(this.course.id));\n        promises.push(this.coursesProvider.invalidateCourseEnrolmentMethods(this.course.id));\n        promises.push(this.courseOptionsDelegate.clearAndInvalidateCoursesOptions(this.course.id));\n        if (this.sitesProvider.getCurrentSite() && !this.sitesProvider.getCurrentSite().isVersionGreaterEqualThan('3.7')) {\n            promises.push(this.coursesProvider.invalidateCoursesByField('id', this.course.id));\n        }\n        if (this.guestInstanceId) {\n            promises.push(this.coursesProvider.invalidateCourseGuestEnrolmentInfo(this.guestInstanceId));\n        }\n\n        return Promise.all(promises).finally(() => {\n            return this.getCourse(true);\n        }).finally(() => {\n            if (refresher) {\n                refresher.complete();\n            }\n        });\n    }\n\n    /**\n     * Update the course status icon and title.\n     *\n     * @param status Status to show.\n     */\n    protected updateCourseStatus(status: string): void {\n        const statusData = this.courseHelper.getCourseStatusIconAndTitleFromStatus(status);\n\n        this.prefetchCourseData.prefetchCourseIcon = statusData.icon;\n        this.prefetchCourseData.title = statusData.title;\n    }\n\n    /**\n     * Wait for the user to be enrolled in the course.\n     *\n     * @param first If it's the first call (true) or it's a recursive call (false).\n     * @return Promise resolved when enrolled or timeout.\n     */\n    protected waitForEnrolled(first?: boolean): Promise<any> {\n        if (first) {\n            this.waitStart = Date.now();\n        }\n\n        // Check if user is enrolled in the course.\n        return this.coursesProvider.invalidateUserCourses().catch(() => {\n            // Ignore errors.\n        }).then(() => {\n            return this.coursesProvider.getUserCourse(this.course.id);\n        }).catch(() => {\n            // Not enrolled, wait a bit and try again.\n            if (this.pageDestroyed || (Date.now() - this.waitStart > 60000)) {\n                // Max time reached or the user left the view, stop.\n                return;\n            }\n\n            return new Promise((resolve, reject): void => {\n                setTimeout(() => {\n                    if (!this.pageDestroyed) {\n                        // Wait again.\n                        this.waitForEnrolled().then(resolve);\n                    } else {\n                        resolve();\n                    }\n                }, 5000);\n            });\n        });\n    }\n\n    /**\n     * Prefetch the course.\n     */\n    prefetchCourse(): void {\n        this.courseHelper.confirmAndPrefetchCourse(this.prefetchCourseData, this.course).catch((error) => {\n            if (!this.pageDestroyed) {\n                this.domUtils.showErrorModalDefault(error, 'core.course.errordownloadingcourse', true);\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/pages/course-preview/course-preview.ts"],"sourceRoot":""}