{"version":3,"sources":["../../src/addon/messages/pages/conversation-info/conversation-info.module.ts","../../src/addon/messages/pages/conversation-info/conversation-info.ts"],"names":[],"mappings":"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","file":"131.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AddonMessagesConversationInfoPage } from './conversation-info';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\n\n@NgModule({\n    declarations: [\n        AddonMessagesConversationInfoPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        IonicPageModule.forChild(AddonMessagesConversationInfoPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonMessagesConversationInfoPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/pages/conversation-info/conversation-info.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { IonicPage, NavParams, ViewController } from 'ionic-angular';\nimport {\n    AddonMessagesProvider, AddonMessagesConversationFormatted, AddonMessagesConversationMember\n} from '../../providers/messages';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreSitesProvider } from '@providers/sites';\n\n/**\n * Page that displays the list of conversations, including group conversations.\n */\n@IonicPage({ segment: 'addon-messages-conversation-info' })\n@Component({\n    selector: 'page-addon-messages-conversation-info',\n    templateUrl: 'conversation-info.html',\n})\nexport class AddonMessagesConversationInfoPage implements OnInit {\n\n    loaded = false;\n    conversation: AddonMessagesConversationFormatted;\n    members: AddonMessagesConversationMember[] = [];\n    canLoadMore = false;\n    loadMoreError = false;\n\n    protected conversationId: number;\n\n    constructor(private messagesProvider: AddonMessagesProvider, private domUtils: CoreDomUtilsProvider, navParams: NavParams,\n            protected viewCtrl: ViewController, sitesProvider: CoreSitesProvider) {\n        this.conversationId = navParams.get('conversationId');\n    }\n\n    /**\n     * Component loaded.\n     */\n    ngOnInit(): void {\n        this.fetchData().finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Fetch the required data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected fetchData(): Promise<any> {\n        // Get the conversation data first.\n        return this.messagesProvider.getConversation(this.conversationId, false, true, 0, 0).then((conversation) => {\n            this.conversation = conversation;\n\n            // Now get the members.\n            return this.fetchMembers();\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error getting members.');\n        });\n    }\n\n    /**\n     * Get conversation members.\n     *\n     * @param loadingMore Whether we are loading more data or just the first ones.\n     * @return Promise resolved when done.\n     */\n    protected fetchMembers(loadingMore?: boolean): Promise<any> {\n        this.loadMoreError = false;\n\n        const limitFrom = loadingMore ? this.members.length : 0;\n\n        return this.messagesProvider.getConversationMembers(this.conversationId, limitFrom).then((data) => {\n            if (loadingMore) {\n                this.members = this.members.concat(data.members);\n            } else {\n                this.members = data.members;\n            }\n\n            this.canLoadMore = data.canLoadMore;\n        });\n    }\n\n    /**\n     * Function to load more members.\n     *\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n     * @return Resolved when done.\n     */\n    loadMoreMembers(infiniteComplete?: any): Promise<any> {\n        return this.fetchMembers(true).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error getting members.');\n            this.loadMoreError = true;\n        }).finally(() => {\n            infiniteComplete && infiniteComplete();\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @return Promise resolved when done.\n     */\n    refreshData(refresher?: any): Promise<any> {\n        const promises = [];\n\n        promises.push(this.messagesProvider.invalidateConversation(this.conversationId));\n        promises.push(this.messagesProvider.invalidateConversationMembers(this.conversationId));\n\n        return Promise.all(promises).then(() => {\n            return this.fetchData().finally(() => {\n                refresher && refresher.complete();\n            });\n        });\n    }\n\n    /**\n     * Close modal.\n     *\n     * @param userId User conversation to load.\n     */\n    closeModal(userId?: number): void {\n        this.viewCtrl.dismiss(userId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/pages/conversation-info/conversation-info.ts"],"sourceRoot":""}