{"version":3,"sources":["../../src/core/login/pages/site/site.module.ts","../../src/core/login/pages/site/site.ts"],"names":[],"mappings":"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","file":"35.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { CoreLoginSitePage } from './site';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CoreComponentsModule } from '@components/components.module';\n\n@NgModule({\n    declarations: [\n        CoreLoginSitePage\n    ],\n    imports: [\n        CoreDirectivesModule,\n        CoreComponentsModule,\n        IonicPageModule.forChild(CoreLoginSitePage),\n        TranslateModule.forChild()\n    ]\n})\nexport class CoreLoginSitePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/login/pages/site/site.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild, ElementRef } from '@angular/core';\nimport { IonicPage, NavController, ModalController, AlertController, NavParams } from 'ionic-angular';\nimport { CoreSite } from '@classes/site';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider, CoreSiteCheckResponse, CoreLoginSiteInfo } from '@providers/sites';\nimport { CoreCustomURLSchemesProvider, CoreCustomURLSchemesHandleError } from '@providers/urlschemes';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUrlUtilsProvider } from '@providers/utils/url';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreConfig } from '@providers/config';\nimport { CoreConfigConstants } from '../../../../configconstants';\nimport { CoreLoginHelperProvider } from '../../providers/helper';\nimport { FormBuilder, FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { CoreUrl } from '@singletons/url';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * Extended data for UI implementation.\n */\ntype CoreLoginSiteInfoExtended = CoreLoginSiteInfo & {\n    noProtocolUrl?: string; // Url wihtout protocol.\n    country?: string; // Based on countrycode.\n};\n\n/**\n * Page to enter or select the site URL to connect to.\n */\n@IonicPage({ segment: 'core-login-site' })\n@Component({\n    selector: 'page-core-login-site',\n    templateUrl: 'site.html',\n})\nexport class CoreLoginSitePage {\n\n    @ViewChild('siteFormEl') formElement: ElementRef;\n\n    siteForm: FormGroup;\n    fixedSites: CoreLoginSiteInfo[];\n    filteredSites: CoreLoginSiteInfo[];\n    siteSelector = 'sitefinder';\n    showKeyboard = false;\n    filter = '';\n    sites: CoreLoginSiteInfoExtended[] = [];\n    hasSites = false;\n    loadingSites = false;\n    searchFnc: Function;\n    showScanQR: boolean;\n    enteredSiteUrl: CoreLoginSiteInfoExtended;\n\n    constructor(navParams: NavParams,\n            protected navCtrl: NavController,\n            fb: FormBuilder,\n            protected appProvider: CoreAppProvider,\n            protected sitesProvider: CoreSitesProvider,\n            protected loginHelper: CoreLoginHelperProvider,\n            protected modalCtrl: ModalController,\n            protected alertCtrl: AlertController,\n            protected urlUtils: CoreUrlUtilsProvider,\n            protected domUtils: CoreDomUtilsProvider,\n            protected eventsProvider: CoreEventsProvider,\n            protected translate: TranslateService,\n            protected utils: CoreUtilsProvider,\n            protected urlSchemesProvider: CoreCustomURLSchemesProvider,\n            protected textUtils: CoreTextUtilsProvider) {\n\n        this.showKeyboard = !!navParams.get('showKeyboard');\n\n        let url = '';\n        this.siteSelector = CoreConfigConstants.multisitesdisplay;\n\n        // Load fixed sites if they're set.\n        if (this.loginHelper.hasSeveralFixedSites()) {\n            this.fixedSites = <any[]> this.loginHelper.getFixedSites();\n            // Autoselect if not defined.\n            if (['list', 'listnourl', 'select', 'buttons'].indexOf(this.siteSelector) < 0) {\n                this.siteSelector = this.fixedSites.length > 8 ? 'list' : (this.fixedSites.length > 3 ? 'select' : 'buttons');\n            }\n            this.filteredSites = this.fixedSites;\n            url = this.fixedSites[0].url;\n        } else if (CoreConfigConstants.enableonboarding && !this.appProvider.isIOS() && !this.appProvider.isMac()) {\n            CoreConfig.instance.get(CoreLoginHelperProvider.ONBOARDING_DONE, false).then((onboardingDone) => {\n                if (!onboardingDone) {\n                    // Check onboarding.\n                    this.showOnboarding();\n                }\n            });\n        }\n\n        this.showScanQR = this.utils.canScanQR() && (typeof CoreConfigConstants['displayqronsitescreen'] == 'undefined' ||\n            !!CoreConfigConstants['displayqronsitescreen']);\n\n        this.siteForm = fb.group({\n            siteUrl: [url, this.moodleUrlValidator()]\n        });\n\n        this.searchFnc = this.utils.debounce(async (search: string) => {\n            search = search.trim();\n\n            if (search.length >= 3) {\n                // Update the sites list.\n                this.sites = await this.sitesProvider.findSites(search);\n\n                // UI tweaks.\n                this.sites.forEach((site) => {\n                    site.noProtocolUrl = CoreUrl.removeProtocol(site.url);\n                    site.country = this.utils.getCountryName(site.countrycode);\n                });\n\n                this.hasSites = !!this.sites.length;\n            } else {\n                // Not reseting the array to allow animation to be displayed.\n                this.hasSites = false;\n            }\n\n            this.loadingSites = false;\n        }, 1000);\n    }\n\n    /**\n     * Try to connect to a site.\n     *\n     * @param e Event.\n     * @param url The URL to connect to.\n     * @param foundSite The site clicked, if any, from the found sites list.\n     */\n    connect(e: Event, url: string, foundSite?: CoreLoginSiteInfoExtended): void {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.appProvider.closeKeyboard();\n\n        if (!url) {\n            this.domUtils.showErrorModal('core.login.siteurlrequired', true);\n\n            return;\n        }\n\n        if (!this.appProvider.isOnline()) {\n            this.domUtils.showErrorModal('core.networkerrormsg', true);\n\n            return;\n        }\n\n        url = url.trim();\n\n        if (url.match(/^(https?:\\/\\/)?campus\\.example\\.edu/)) {\n            this.showLoginIssue(null, this.translate.instant('core.login.errorexampleurl'));\n\n            return;\n        }\n\n        const modal = this.domUtils.showModalLoading(),\n            siteData = this.sitesProvider.getDemoSiteData(url);\n\n        if (siteData) {\n            // It's a demo site.\n            this.sitesProvider.getUserToken(siteData.url, siteData.username, siteData.password).then((data) => {\n                return this.sitesProvider.newSite(data.siteUrl, data.token, data.privateToken).then(() => {\n\n                    this.domUtils.triggerFormSubmittedEvent(this.formElement, true);\n\n                    return this.loginHelper.goToSiteInitialPage();\n                }, (error) => {\n                    this.loginHelper.treatUserTokenError(siteData.url, error, siteData.username, siteData.password);\n                    if (error.loggedout) {\n                        this.navCtrl.setRoot('CoreLoginSitesPage');\n                    }\n                });\n            }, (error) => {\n                this.loginHelper.treatUserTokenError(siteData.url, error, siteData.username, siteData.password);\n                if (error.loggedout) {\n                    this.navCtrl.setRoot('CoreLoginSitesPage');\n                }\n            }).finally(() => {\n                modal.dismiss();\n            });\n\n        } else {\n            // Not a demo site.\n            this.sitesProvider.checkSite(url)\n                .catch((error) => {\n                    // Attempt guessing the domain if the initial check failed\n                    const domain = CoreUrl.guessMoodleDomain(url);\n\n                    if (domain && domain != url) {\n                        return this.sitesProvider.checkSite(domain).catch((secondError) => {\n                            // Try to use the first error.\n                            return Promise.reject(error || secondError);\n                        });\n                    }\n\n                    return Promise.reject(error);\n                })\n                .then((result) => this.login(result, foundSite))\n                .catch((error) => this.showLoginIssue(url, error))\n                .finally(() => modal.dismiss());\n        }\n    }\n\n    /**\n     * The filter has changed.\n     *\n     * @param Received Event.\n     */\n    filterChanged(event: any): void {\n        const newValue = event.target.value && event.target.value.trim().toLowerCase();\n        if (!newValue || !this.fixedSites) {\n            this.filteredSites = this.fixedSites;\n        } else {\n            this.filteredSites = this.fixedSites.filter((site) => {\n                return site.name.toLowerCase().indexOf(newValue) > -1 || site.url.toLowerCase().indexOf(newValue) > -1;\n            });\n        }\n    }\n\n    /**\n     * Show a help modal.\n     */\n    showHelp(): void {\n        const modal = this.modalCtrl.create('CoreLoginSiteHelpPage', {}, { cssClass: 'core-modal-fullscreen' });\n        modal.present();\n    }\n\n    /**\n     * Show an onboarding modal.\n     */\n    showOnboarding(): void {\n        const modal = this.modalCtrl.create('CoreLoginSiteOnboardingPage', {}, { cssClass: 'core-modal-fullscreen' });\n        modal.present();\n    }\n\n    /**\n     * Show an error that aims people to solve the issue.\n     *\n     * @param url The URL the user was trying to connect to.\n     * @param error Error to display.\n     */\n    protected showLoginIssue(url: string, error: any): void {\n        error = this.domUtils.getErrorMessage(error);\n\n        if (error == this.translate.instant('core.cannotconnecttrouble')) {\n            const found = this.sites.find((site) => site.url == url);\n\n            if (!found) {\n                error += ' ' + this.translate.instant('core.cannotconnectverify');\n            }\n        }\n\n        let message = '<p>' + error + '</p>';\n        if (url) {\n            const fullUrl = this.urlUtils.isAbsoluteURL(url) ? url : 'https://' + url;\n            message += '<p padding><a href=\"' + fullUrl + '\" core-link>' + url + '</a></p>';\n        }\n\n        const buttons = [\n            {\n                text: this.translate.instant('core.needhelp'),\n                handler: (): void => {\n                    this.showHelp();\n                }\n            },\n            {\n                text: this.translate.instant('core.tryagain'),\n                role: 'cancel'\n            }\n        ];\n\n        // @TODO: Remove CoreSite.MINIMUM_MOODLE_VERSION, not used on translations since 3.9.0.\n        this.domUtils.showAlertWithOptions({\n            title: this.translate.instant('core.cannotconnect', {$a: CoreSite.MINIMUM_MOODLE_VERSION}),\n            message,\n            buttons,\n        });\n    }\n\n    /**\n     * Find a site on the backend.\n     *\n     * @param e Event.\n     * @param search Text to search.\n     */\n    searchSite(e: Event, search: string): void {\n        this.loadingSites = true;\n\n        search = search.trim();\n\n        if (this.siteForm.valid && search.length >= 3) {\n            this.enteredSiteUrl = {\n                url: search,\n                name: 'connect',\n                noProtocolUrl: CoreUrl.removeProtocol(search),\n            };\n        } else {\n            this.enteredSiteUrl = null;\n        }\n\n        this.searchFnc(search.trim());\n    }\n\n    /**\n     * Get the demo data for a certain \"name\" if it is a demo site.\n     *\n     * @param name Name of the site to check.\n     * @return Site data if it's a demo site, undefined otherwise.\n     */\n    getDemoSiteData(name: string): any {\n        const demoSites = CoreConfigConstants.demo_sites;\n        if (typeof demoSites != 'undefined' && typeof demoSites[name] != 'undefined') {\n            return demoSites[name];\n        }\n    }\n\n    /**\n     * Process login to a site.\n     *\n     * @param response Response obtained from the site check request.\n     * @param foundSite The site clicked, if any, from the found sites list.\n     *\n     * @return Promise resolved after logging in.\n     */\n    protected async login(response: CoreSiteCheckResponse, foundSite?: CoreLoginSiteInfoExtended): Promise<void> {\n        return this.sitesProvider.checkRequiredMinimumVersion(response.config).then(() => {\n\n            this.domUtils.triggerFormSubmittedEvent(this.formElement, true);\n\n            if (response.warning) {\n                this.domUtils.showErrorModal(response.warning, true, 4000);\n            }\n\n            if (this.loginHelper.isSSOLoginNeeded(response.code)) {\n                // SSO. User needs to authenticate in a browser.\n                this.loginHelper.confirmAndOpenBrowserForSSOLogin(\n                    response.siteUrl, response.code, response.service, response.config && response.config.launchurl);\n            } else {\n                const pageParams = { siteUrl: response.siteUrl, siteConfig: response.config };\n                if (foundSite) {\n                    pageParams['siteName'] = foundSite.name;\n                    pageParams['logoUrl'] = foundSite.imageurl;\n                }\n\n                this.navCtrl.push('CoreLoginCredentialsPage', pageParams);\n            }\n        }).catch(() => {\n            // Ignore errors.\n        });\n    }\n\n    /**\n     * Validate Url.\n     *\n     * @return {ValidatorFn} Validation results.\n     */\n    protected moodleUrlValidator(): ValidatorFn {\n        return (control: AbstractControl): {[key: string]: any} | null => {\n            const value = control.value.trim();\n            let valid = value.length >= 3 && CoreUrl.isValidMoodleUrl(value);\n\n            if (!valid) {\n                const demo = !!this.getDemoSiteData(value);\n\n                if (demo) {\n                    valid = true;\n                }\n            }\n\n            return valid ? null : {siteUrl: {value: control.value}};\n        };\n    }\n\n    /**\n     * Show instructions and scan QR code.\n     */\n    showInstructionsAndScanQR(): void {\n        // Show some instructions first.\n        this.domUtils.showAlertWithOptions({\n            title: this.translate.instant('core.login.faqwhereisqrcode'),\n            message: this.translate.instant('core.login.faqwhereisqrcodeanswer',\n                {$image: CoreLoginHelperProvider.FAQ_QRCODE_IMAGE_HTML}),\n            buttons: [\n                {\n                    text: this.translate.instant('core.cancel'),\n                    role: 'cancel'\n                },\n                {\n                    text: this.translate.instant('core.next'),\n                    handler: (): void => {\n                        this.scanQR();\n                    }\n                },\n            ],\n        });\n    }\n\n    /**\n     * Scan a QR code and put its text in the URL input.\n     *\n     * @return Promise resolved when done.\n     */\n    async scanQR(): Promise<void> {\n        // Scan for a QR code.\n        const text = await this.utils.scanQR();\n\n        if (text) {\n            if (this.urlSchemesProvider.isCustomURL(text)) {\n                try {\n                    await this.urlSchemesProvider.handleCustomURL(text);\n                } catch (error) {\n                    if (error && error.data && error.data.isAuthenticationURL && error.data.siteUrl) {\n                        // An error ocurred, but it's an authentication URL and we have the site URL.\n                        this.treatErrorInAuthenticationCustomURL(text, error);\n                    } else {\n                        this.urlSchemesProvider.treatHandleCustomURLError(error);\n                    }\n                }\n            } else {\n                // Not a custom URL scheme, check if it's a URL scheme to another app.\n                const scheme = this.urlUtils.getUrlProtocol(text);\n\n                if (scheme && scheme != 'http' && scheme != 'https') {\n                    this.domUtils.showErrorModal(this.translate.instant('core.errorurlschemeinvalidscheme', {$a: text}));\n                } else if (this.loginHelper.isSiteUrlAllowed(text)) {\n                    // Put the text in the field (if present).\n                    this.siteForm.controls.siteUrl.setValue(text);\n\n                    this.connect(new Event('click'), text);\n                } else {\n                    this.domUtils.showErrorModal('core.errorurlschemeinvalidsite', true);\n                }\n            }\n        }\n    }\n\n    /**\n     * Treat an error while handling a custom URL meant to perform an authentication.\n     * If the site doesn't use SSO, the user will be sent to the credentials screen.\n     *\n     * @param customURL Custom URL handled.\n     * @param error Error data.\n     * @return Promise resolved when done.\n     */\n    protected async treatErrorInAuthenticationCustomURL(customURL: string, error: CoreCustomURLSchemesHandleError): Promise<void> {\n        const siteUrl = error.data.siteUrl;\n        const modal = this.domUtils.showModalLoading();\n\n        // Set the site URL in the input.\n        this.siteForm.controls.siteUrl.setValue(siteUrl);\n\n        try {\n            // Check if site uses SSO.\n            const response = await this.sitesProvider.checkSite(siteUrl);\n\n            await this.sitesProvider.checkRequiredMinimumVersion(response.config);\n\n            if (!this.loginHelper.isSSOLoginNeeded(response.code)) {\n                // No SSO, go to credentials page.\n                await this.navCtrl.push('CoreLoginCredentialsPage', {\n                    siteUrl: response.siteUrl,\n                    siteConfig: response.config,\n                });\n            }\n        } catch (error) {\n            // Ignore errors.\n        } finally {\n            modal.dismiss();\n        }\n\n        // Now display the error.\n        error.error = this.textUtils.addTextToError(error.error,\n                '<br><br>' + this.translate.instant('core.login.youcanstillconnectwithcredentials'));\n\n        this.urlSchemesProvider.treatHandleCustomURLError(error);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/login/pages/site/site.ts"],"sourceRoot":""}