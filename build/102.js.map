{"version":3,"sources":["../../src/addon/mod/forum/pages/new-discussion/new-discussion.module.ts","../../src/addon/mod/forum/pages/new-discussion/new-discussion.ts"],"names":[],"mappings":"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","file":"102.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { AddonModForumNewDiscussionPage } from './new-discussion';\nimport { CoreEditorComponentsModule } from '@core/editor/components/components.module';\n\n@NgModule({\n    declarations: [\n        AddonModForumNewDiscussionPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CoreEditorComponentsModule,\n        IonicPageModule.forChild(AddonModForumNewDiscussionPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonModForumNewDiscussionPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/forum/pages/new-discussion/new-discussion.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, Optional, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreGroupsProvider } from '@providers/groups';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreSyncProvider } from '@providers/sync';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreFileUploaderProvider } from '@core/fileuploader/providers/fileuploader';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreEditorRichTextEditorComponent } from '@core/editor/components/rich-text-editor/rich-text-editor.ts';\nimport { AddonModForumProvider } from '../../providers/forum';\nimport { AddonModForumOfflineProvider } from '../../providers/offline';\nimport { AddonModForumHelperProvider } from '../../providers/helper';\nimport { AddonModForumSyncProvider } from '../../providers/sync';\n\n/**\n * Page that displays the new discussion form.\n */\n@IonicPage({ segment: 'addon-mod-forum-new-discussion' })\n@Component({\n    selector: 'page-addon-mod-forum-new-discussion',\n    templateUrl: 'new-discussion.html',\n})\nexport class AddonModForumNewDiscussionPage implements OnDestroy {\n\n    @ViewChild('newDiscFormEl') formElement: ElementRef;\n    @ViewChild(CoreEditorRichTextEditorComponent) messageEditor: CoreEditorRichTextEditorComponent;\n\n    component = AddonModForumProvider.COMPONENT;\n    messageControl = new FormControl();\n    groupsLoaded = false;\n    showGroups = false;\n    hasOffline = false;\n    canCreateAttachments = true; // Assume we can by default.\n    canPin = false;\n    forum: any;\n    showForm = false;\n    groups = [];\n    groupIds = [];\n    newDiscussion = {\n        subject: '',\n        message: null, // Null means empty or just white space.\n        postToAllGroups: false,\n        groupId: 0,\n        subscribe: true,\n        pin: false,\n        files: []\n    };\n    advanced = false; // Display all form fields.\n    accessInfo: any = {};\n\n    protected courseId: number;\n    protected cmId: number;\n    protected forumId: number;\n    protected timeCreated: number;\n    protected syncId: string;\n    protected syncObserver: any;\n    protected isDestroyed = false;\n    protected originalData: any;\n    protected forceLeave = false;\n\n    constructor(navParams: NavParams,\n            private navCtrl: NavController,\n            private translate: TranslateService,\n            private domUtils: CoreDomUtilsProvider,\n            private eventsProvider: CoreEventsProvider,\n            private groupsProvider: CoreGroupsProvider,\n            private sitesProvider: CoreSitesProvider,\n            private syncProvider: CoreSyncProvider,\n            private uploaderProvider: CoreFileUploaderProvider,\n            private textUtils: CoreTextUtilsProvider,\n            private utils: CoreUtilsProvider,\n            private forumProvider: AddonModForumProvider,\n            private forumOffline: AddonModForumOfflineProvider,\n            private forumSync: AddonModForumSyncProvider,\n            private forumHelper: AddonModForumHelperProvider,\n            @Optional() private svComponent: CoreSplitViewComponent) {\n        this.courseId = navParams.get('courseId');\n        this.cmId = navParams.get('cmId');\n        this.forumId = navParams.get('forumId');\n        this.timeCreated = navParams.get('timeCreated');\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.fetchDiscussionData().finally(() => {\n            this.groupsLoaded = true;\n        });\n    }\n\n    /**\n     * User entered the page that contains the component.\n     */\n    ionViewDidEnter(): void {\n        // Refresh data if this discussion is synchronized automatically.\n        this.syncObserver = this.eventsProvider.on(AddonModForumSyncProvider.AUTO_SYNCED, (data) => {\n            if (data.forumId == this.forumId && data.userId == this.sitesProvider.getCurrentSiteUserId()) {\n                this.domUtils.showAlertTranslated('core.notice', 'core.contenteditingsynced');\n                this.returnToDiscussions();\n            }\n        }, this.sitesProvider.getCurrentSiteId());\n\n        // Trigger view event, to highlight the current opened discussion in the split view.\n        this.eventsProvider.trigger(AddonModForumProvider.VIEW_DISCUSSION_EVENT, {\n            forumId: this.forumId,\n            discussion: -this.timeCreated\n        }, this.sitesProvider.getCurrentSiteId());\n    }\n\n    /**\n     * Fetch if forum uses groups and the groups it uses.\n     *\n     * @param refresh Whether we're refreshing data.\n     * @return Promise resolved when done.\n     */\n    protected fetchDiscussionData(refresh?: boolean): Promise<any> {\n        return this.groupsProvider.getActivityGroupMode(this.cmId).then((mode) => {\n            const promises = [];\n\n            if (mode === CoreGroupsProvider.SEPARATEGROUPS || mode === CoreGroupsProvider.VISIBLEGROUPS) {\n                promises.push(this.groupsProvider.getActivityAllowedGroups(this.cmId).then((result) => {\n                    let promise;\n                    if (mode === CoreGroupsProvider.VISIBLEGROUPS) {\n                        // We need to check which of the returned groups the user can post to.\n                        promise = this.validateVisibleGroups(result.groups);\n                    } else {\n                        // WS already filters groups, no need to do it ourselves. Add \"All participants\" if needed.\n                        promise = this.addAllParticipantsOption(result.groups, true);\n                    }\n\n                    return promise.then((forumGroups) => {\n                        if (forumGroups.length > 0) {\n                            this.groups = forumGroups;\n                            this.groupIds = forumGroups.map((group) => group.id).filter((id) => id > 0);\n                            // Do not override group id.\n                            this.newDiscussion.groupId = this.newDiscussion.groupId || forumGroups[0].id;\n                            this.showGroups = true;\n                            if (this.groupIds.length <= 1) {\n                                this.newDiscussion.postToAllGroups = false;\n                            }\n                        } else {\n                            const message = mode === CoreGroupsProvider.SEPARATEGROUPS ?\n                                    'addon.mod_forum.cannotadddiscussionall' : 'addon.mod_forum.cannotadddiscussion';\n\n                            return Promise.reject(this.translate.instant(message));\n                        }\n                    });\n                }));\n            } else {\n                this.showGroups = false;\n                this.newDiscussion.postToAllGroups = false;\n\n                // Use the canAddDiscussion WS to check if the user can add attachments and pin discussions.\n                promises.push(this.forumProvider.canAddDiscussionToAll(this.forumId).then((response) => {\n                    this.canPin = !!response.canpindiscussions;\n                    this.canCreateAttachments = !!response.cancreateattachment;\n                }).catch(() => {\n                    // Ignore errors, use default values.\n                }));\n            }\n\n            // Get forum.\n            promises.push(this.forumProvider.getForum(this.courseId, this.cmId).then((forum) => {\n                this.forum = forum;\n            }));\n\n            // Get access information.\n            promises.push(this.forumProvider.getAccessInformation(this.forumId).then((accessInfo) => {\n                this.accessInfo = accessInfo;\n            }));\n\n            return Promise.all(promises);\n        }).then(() => {\n            // If editing a discussion, get offline data.\n            if (this.timeCreated && !refresh) {\n                this.syncId = this.forumSync.getForumSyncId(this.forumId);\n\n                return this.forumSync.waitForSync(this.syncId).then(() => {\n                    // Do not block if the scope is already destroyed.\n                    if (!this.isDestroyed) {\n                        this.syncProvider.blockOperation(AddonModForumProvider.COMPONENT, this.syncId);\n                    }\n\n                    return this.forumOffline.getNewDiscussion(this.forumId, this.timeCreated).then((discussion) => {\n                        this.hasOffline = true;\n                        discussion.options = discussion.options || {};\n                        if (discussion.groupid == AddonModForumProvider.ALL_GROUPS) {\n                            this.newDiscussion.groupId = this.groups[0].id;\n                            this.newDiscussion.postToAllGroups = true;\n                        } else {\n                            this.newDiscussion.groupId = discussion.groupid;\n                            this.newDiscussion.postToAllGroups = false;\n                        }\n                        this.newDiscussion.subject = discussion.subject;\n                        this.newDiscussion.message = discussion.message;\n                        this.newDiscussion.subscribe = discussion.options.discussionsubscribe;\n                        this.newDiscussion.pin = discussion.options.discussionpinned;\n                        this.messageControl.setValue(discussion.message);\n\n                        // Treat offline attachments if any.\n                        let promise;\n                        if (discussion.options.attachmentsid && discussion.options.attachmentsid.offline) {\n                            promise = this.forumHelper.getNewDiscussionStoredFiles(this.forumId, this.timeCreated).then((files) => {\n                                this.newDiscussion.files = files;\n                            });\n                        }\n\n                        return Promise.resolve(promise).then(() => {\n                            // Show advanced fields by default if any of them has not the default value.\n                            if (!this.newDiscussion.subscribe || this.newDiscussion.pin || this.newDiscussion.files.length ||\n                                    this.groups.length > 0 && this.newDiscussion.groupId != this.groups[0].id ||\n                                    this.newDiscussion.postToAllGroups) {\n                                this.advanced = true;\n                            }\n                        });\n                    });\n                });\n            }\n        }).then(() => {\n            if (!this.originalData) {\n                // Initialize original data.\n                this.originalData = {\n                    subject: this.newDiscussion.subject,\n                    message: this.newDiscussion.message,\n                    files: this.newDiscussion.files.slice(),\n                };\n            }\n            this.showForm = true;\n        }).catch((message) => {\n            this.domUtils.showErrorModalDefault(message, 'addon.mod_forum.errorgetgroups', true);\n            this.showForm = false;\n        });\n    }\n\n    /**\n     * Validate which of the groups returned by getActivityAllowedGroups in visible groups should be shown to post to.\n     *\n     * @param forumGroups Forum groups.\n     * @return Promise resolved with the list of groups.\n     */\n    protected validateVisibleGroups(forumGroups: any[]): Promise<any[]> {\n        // We first check if the user can post to all the groups.\n        return this.forumProvider.canAddDiscussionToAll(this.forumId).catch(() => {\n            // The call failed, let's assume he can't.\n            return {\n                status: false,\n                canpindiscussions: false,\n                cancreateattachment: true\n            };\n        }).then((response) => {\n            this.canPin = !!response.canpindiscussions;\n            this.canCreateAttachments = !!response.cancreateattachment;\n\n            if (response.status) {\n                // The user can post to all groups, add the \"All participants\" option and return them all.\n                return this.addAllParticipantsOption(forumGroups, false);\n            } else {\n                // The user can't post to all groups, let's check which groups he can post to.\n                const promises = [];\n                const filtered = [];\n\n                forumGroups.forEach((group) => {\n                    promises.push(this.forumProvider.canAddDiscussion(this.forumId, group.id).catch(() => {\n                        /* The call failed, let's return true so the group is shown. If the user can't post to\n                           it an error will be shown when he tries to add the discussion. */\n                        return {\n                            status: true\n                        };\n                    }).then((response) => {\n                        if (response.status) {\n                            filtered.push(group);\n                        }\n                    }));\n                });\n\n                return Promise.all(promises).then(() => {\n                    return filtered;\n                });\n            }\n        });\n    }\n\n    /**\n     * Filter forum groups, returning only those that are inside user groups.\n     *\n     * @param forumGroups Forum groups.\n     * @param userGroups User groups.\n     * @return Filtered groups.\n     */\n    protected filterGroups(forumGroups: any[], userGroups: any[]): any[] {\n        const filtered = [];\n        const userGroupsIds = userGroups.map((g) => g.id);\n\n        forumGroups.forEach((fg) => {\n            if (userGroupsIds.indexOf(fg.id) > -1) {\n                filtered.push(fg);\n            }\n        });\n\n        return filtered;\n    }\n\n    /**\n     * Add the \"All participants\" option to a list of groups if the user can add a discussion to all participants.\n     *\n     * @param groups Groups.\n     * @param check True to check if the user can add a discussion to all participants.\n     * @return Promise resolved with the list of groups.\n     */\n    protected addAllParticipantsOption(groups: any[], check: boolean): Promise<any[]> {\n        if (!this.forumProvider.isAllParticipantsFixed()) {\n            // All participants has a bug, don't add it.\n            return Promise.resolve(groups);\n        }\n\n        let promise;\n\n        if (check) {\n            // We need to check if the user can add a discussion to all participants.\n            promise = this.forumProvider.canAddDiscussionToAll(this.forumId).then((response) => {\n                this.canPin = !!response.canpindiscussions;\n                this.canCreateAttachments = !!response.cancreateattachment;\n\n                return response.status;\n            }).catch(() => {\n                // The call failed, let's assume he can't.\n                return false;\n            });\n        } else {\n            // No need to check, assume the user can.\n            promise = Promise.resolve(true);\n        }\n\n        return promise.then((canAdd) => {\n            if (canAdd) {\n                groups.unshift({\n                    courseid: this.courseId,\n                    id: AddonModForumProvider.ALL_PARTICIPANTS,\n                    name: this.translate.instant('core.allparticipants')\n                });\n            }\n\n            return groups;\n        });\n    }\n\n    /**\n     * Pull to refresh.\n     *\n     * @param refresher Refresher.\n     */\n    refreshGroups(refresher: any): void {\n        const promises = [\n            this.groupsProvider.invalidateActivityGroupMode(this.cmId),\n            this.groupsProvider.invalidateActivityAllowedGroups(this.cmId),\n            this.forumProvider.invalidateCanAddDiscussion(this.forumId),\n        ];\n\n        Promise.all(promises).finally(() => {\n            this.fetchDiscussionData(true).finally(() => {\n                refresher.complete();\n            });\n        });\n    }\n\n    /**\n     * Convenience function to update or return to discussions depending on device.\n     *\n     * @param discussionIds Ids of the new discussions.\n     * @param discTimecreated The time created of the discussion (if offline).\n     */\n    protected returnToDiscussions(discussionIds?: number[], discTimecreated?: number): void {\n        const data: any = {\n            forumId: this.forumId,\n            cmId: this.cmId,\n            discussionIds: discussionIds,\n            discTimecreated: discTimecreated\n        };\n        this.eventsProvider.trigger(AddonModForumProvider.NEW_DISCUSSION_EVENT, data, this.sitesProvider.getCurrentSiteId());\n\n        // Delete the local files from the tmp folder.\n        this.uploaderProvider.clearTmpFiles(this.newDiscussion.files);\n\n        if (this.svComponent && this.svComponent.isOn()) {\n            // Empty form.\n            this.hasOffline = false;\n            this.newDiscussion.subject = '';\n            this.newDiscussion.message = null;\n            this.newDiscussion.files = [];\n            this.newDiscussion.postToAllGroups = false;\n            this.messageEditor.clearText();\n            this.originalData = this.utils.clone(this.newDiscussion);\n            this.forceLeave = true; // Avoid asking for confirmation.\n\n            // Trigger view event, to highlight the current opened discussion in the split view.\n            this.eventsProvider.trigger(AddonModForumProvider.VIEW_DISCUSSION_EVENT, {\n                forumId: this.forumId,\n                discussion: 0\n            }, this.sitesProvider.getCurrentSiteId());\n        } else {\n            this.forceLeave = true; // Avoid asking for confirmation.\n            this.navCtrl.pop();\n        }\n    }\n\n    /**\n     * Message changed.\n     *\n     * @param text The new text.\n     */\n    onMessageChange(text: string): void {\n        this.newDiscussion.message = text;\n    }\n\n    /**\n     * Add a new discussion.\n     */\n    add(): void {\n        const forumName = this.forum.name;\n        const subject = this.newDiscussion.subject;\n        let  message = this.newDiscussion.message;\n        const pin = this.newDiscussion.pin;\n        const attachments = this.newDiscussion.files;\n        const discTimecreated = this.timeCreated || Date.now();\n        const options: any = {\n            discussionsubscribe: !!this.newDiscussion.subscribe\n        };\n\n        if (!subject) {\n            this.domUtils.showErrorModal('addon.mod_forum.erroremptysubject', true);\n\n            return;\n        }\n        if (!message) {\n            this.domUtils.showErrorModal('addon.mod_forum.erroremptymessage', true);\n\n            return;\n        }\n\n        const modal = this.domUtils.showModalLoading('core.sending', true);\n\n        // Add some HTML to the message if needed.\n        message = this.textUtils.formatHtmlLines(message);\n\n        if (pin) {\n            options.discussionpinned = true;\n        }\n\n        const groupIds = this.newDiscussion.postToAllGroups ? this.groupIds : [this.newDiscussion.groupId];\n\n        this.forumHelper.addNewDiscussion(this.forumId, forumName, this.courseId, subject, message, attachments, options, groupIds,\n                discTimecreated).then((discussionIds) => {\n            if (discussionIds) {\n                // Data sent to server, delete stored files (if any).\n                this.forumHelper.deleteNewDiscussionStoredFiles(this.forumId, discTimecreated);\n\n                this.eventsProvider.trigger(CoreEventsProvider.ACTIVITY_DATA_SENT, { module: 'forum' });\n            }\n\n            if (discussionIds && discussionIds.length < groupIds.length) {\n                // Some discussions could not be created.\n                this.domUtils.showErrorModalDefault(null, 'addon.mod_forum.errorposttoallgroups', true);\n            }\n\n            this.domUtils.triggerFormSubmittedEvent(this.formElement, !!discussionIds, this.sitesProvider.getCurrentSiteId());\n\n            this.returnToDiscussions(discussionIds, discTimecreated);\n        }).catch((message) => {\n            this.domUtils.showErrorModalDefault(message, 'addon.mod_forum.cannotcreatediscussion', true);\n        }).finally(() => {\n            modal.dismiss();\n        });\n    }\n\n    /**\n     * Discard an offline saved discussion.\n     */\n    discard(): void {\n        this.domUtils.showConfirm(this.translate.instant('core.areyousure')).then(() => {\n            const promises = [];\n\n            promises.push(this.forumOffline.deleteNewDiscussion(this.forumId, this.timeCreated));\n            promises.push(this.forumHelper.deleteNewDiscussionStoredFiles(this.forumId, this.timeCreated).catch(() => {\n                // Ignore errors, maybe there are no files.\n            }));\n\n            return Promise.all(promises).then(() => {\n                this.domUtils.triggerFormCancelledEvent(this.formElement, this.sitesProvider.getCurrentSiteId());\n\n                this.returnToDiscussions();\n            });\n        }).catch(() => {\n            // Cancelled.\n        });\n    }\n\n    /**\n     * Show or hide advanced form fields.\n     */\n    toggleAdvanced(): void {\n        this.advanced = !this.advanced;\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @return Resolved if we can leave it, rejected if not.\n     */\n    async ionViewCanLeave(): Promise<void> {\n        if (this.forceLeave) {\n            return;\n        }\n\n        if (this.forumHelper.hasPostDataChanged(this.newDiscussion, this.originalData)) {\n            // Show confirmation if some data has been modified.\n            await this.domUtils.showConfirm(this.translate.instant('core.confirmcanceledit'));\n        }\n\n        // Delete the local files from the tmp folder.\n        this.uploaderProvider.clearTmpFiles(this.newDiscussion.files);\n\n        if (this.formElement) {\n            this.domUtils.triggerFormCancelledEvent(this.formElement, this.sitesProvider.getCurrentSiteId());\n        }\n    }\n\n    /**\n     * Runs when the page is about to leave and no longer be the active page.\n     */\n    ionViewWillLeave(): void {\n        this.syncObserver && this.syncObserver.off();\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        if (this.syncId) {\n            this.syncProvider.unblockOperation(AddonModForumProvider.COMPONENT, this.syncId);\n        }\n        this.isDestroyed = true;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/forum/pages/new-discussion/new-discussion.ts"],"sourceRoot":""}